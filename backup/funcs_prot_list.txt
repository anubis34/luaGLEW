// extern void ( * glXGetProcAddressARB (const GLubyte *procName)) (void);
static int luaglew_void(lua_State *L) {
	extern return_value;
	return_value = void((GLubyte *)luaglew_checkarray_ubyte(L, 1));
	push( ** nespracovany typ extern ** );
	return 1;
}

// void glXBindTexImageATI (Display *dpy, GLXPbuffer pbuf, int buffer)
static int luaglew_glXBindTexImageATI(lua_State *L) {
	glXBindTexImageATI(luaglew_checkarray_display(L, 1), **check nespracovany typ GLXPbuffer **, luaL_checkint(L, 3));
	return 0;
}

// void glXReleaseTexImageATI (Display *dpy, GLXPbuffer pbuf, int buffer)
static int luaglew_glXReleaseTexImageATI(lua_State *L) {
	glXReleaseTexImageATI(luaglew_checkarray_display(L, 1), **check nespracovany typ GLXPbuffer **, luaL_checkint(L, 3));
	return 0;
}

// void glXDrawableAttribATI (Display *dpy, GLXDrawable draw, const int *attrib_list)
static int luaglew_glXDrawableAttribATI(lua_State *L) {
	glXDrawableAttribATI(luaglew_checkarray_display(L, 1), **check nespracovany typ GLXDrawable **, luaglew_checkarray_int(L, 3));
	return 0;
}

// void * glXAllocateMemoryNV (GLsizei size, GLfloat readFrequency, GLfloat writeFrequency, GLfloat priority)
static int luaglew_glXAllocateMemoryNV(lua_State *L) {
	void * return_value;
	return_value = glXAllocateMemoryNV((GLsizei)luaL_checklong(L, 1), (GLfloat)luaL_checknumber(L, 2), (GLfloat)luaL_checknumber(L, 3), (GLfloat)luaL_checknumber(L, 4));
	luaglew_pusharray_void(L, return_value);
	return 1;
}

// void glXFreeMemoryNV (void *pointer)
static int luaglew_glXFreeMemoryNV(lua_State *L) {
	glXFreeMemoryNV(luaglew_checkarray_int(L, 1));
	return 0;
}

// GLXHyperpipeNetworkSGIX * glXQueryHyperpipeNetworkSGIX (Display *dpy, int *npipes)
static int luaglew_glXQueryHyperpipeNetworkSGIX(lua_State *L) {
	GLXHyperpipeNetworkSGIX * return_value;
	return_value = glXQueryHyperpipeNetworkSGIX(luaglew_checkarray_display(L, 1), luaglew_checkarray_int(L, 2));
	luaglew_pusharray_GLXHyperpipeNetworkSGIX(L, return_value);
	return 1;
}

// int glXHyperpipeConfigSGIX (Display *dpy, int networkId, int npipes, GLXHyperpipeConfigSGIX *cfg, int *hpId)
static int luaglew_glXHyperpipeConfigSGIX(lua_State *L) {
	int return_value;
	return_value = glXHyperpipeConfigSGIX(luaglew_checkarray_display(L, 1), luaL_checkint(L, 2), luaL_checkint(L, 3), luaglew_checkarray_GLXHyperpipeConfigSGIX(L, 4), luaglew_checkarray_int(L, 5));
	lua_pushinteger(L, return_value);
	return 1;
}

// GLXHyperpipeConfigSGIX * glXQueryHyperpipeConfigSGIX (Display *dpy, int hpId, int *npipes)
static int luaglew_glXQueryHyperpipeConfigSGIX(lua_State *L) {
	GLXHyperpipeConfigSGIX * return_value;
	return_value = glXQueryHyperpipeConfigSGIX(luaglew_checkarray_display(L, 1), luaL_checkint(L, 2), luaglew_checkarray_int(L, 3));
	luaglew_pusharray_GLXHyperpipeConfigSGIX(L, return_value);
	return 1;
}

// int glXDestroyHyperpipeConfigSGIX (Display *dpy, int hpId)
static int luaglew_glXDestroyHyperpipeConfigSGIX(lua_State *L) {
	int return_value;
	return_value = glXDestroyHyperpipeConfigSGIX(luaglew_checkarray_display(L, 1), luaL_checkint(L, 2));
	lua_pushinteger(L, return_value);
	return 1;
}

// int glXBindHyperpipeSGIX (Display *dpy, int hpId)
static int luaglew_glXBindHyperpipeSGIX(lua_State *L) {
	int return_value;
	return_value = glXBindHyperpipeSGIX(luaglew_checkarray_display(L, 1), luaL_checkint(L, 2));
	lua_pushinteger(L, return_value);
	return 1;
}

// int glXQueryHyperpipeBestAttribSGIX (Display *dpy, int timeSlice, int attrib, int size, void *attribList, void *returnAttribList)
static int luaglew_glXQueryHyperpipeBestAttribSGIX(lua_State *L) {
	int return_value;
	return_value = glXQueryHyperpipeBestAttribSGIX(luaglew_checkarray_display(L, 1), luaL_checkint(L, 2), luaL_checkint(L, 3), luaL_checkint(L, 4), luaglew_checkarray_void(L, 5), luaglew_checkarray_void(L, 6));
	lua_pushinteger(L, return_value);
	return 1;
}

// int glXHyperpipeAttribSGIX (Display *dpy, int timeSlice, int attrib, int size, void *attribList)
static int luaglew_glXHyperpipeAttribSGIX(lua_State *L) {
	int return_value;
	return_value = glXHyperpipeAttribSGIX(luaglew_checkarray_display(L, 1), luaL_checkint(L, 2), luaL_checkint(L, 3), luaL_checkint(L, 4), luaglew_checkarray_void(L, 5));
	lua_pushinteger(L, return_value);
	return 1;
}

// int glXQueryHyperpipeAttribSGIX (Display *dpy, int timeSlice, int attrib, int size, void *returnAttribList)
static int luaglew_glXQueryHyperpipeAttribSGIX(lua_State *L) {
	int return_value;
	return_value = glXQueryHyperpipeAttribSGIX(luaglew_checkarray_display(L, 1), luaL_checkint(L, 2), luaL_checkint(L, 3), luaL_checkint(L, 4), luaglew_checkarray_void(L, 5));
	lua_pushinteger(L, return_value);
	return 1;
}

// void glXBindSwapBarrierSGIX (Display *dpy, GLXDrawable drawable, int barrier)
static int luaglew_glXBindSwapBarrierSGIX(lua_State *L) {
	glXBindSwapBarrierSGIX(luaglew_checkarray_display(L, 1), **check nespracovany typ GLXDrawable **, luaL_checkint(L, 3));
	return 0;
}

// Bool glXQueryMaxSwapBarriersSGIX (Display *dpy, int screen, int *max)
static int luaglew_glXQueryMaxSwapBarriersSGIX(lua_State *L) {
	Bool return_value;
	return_value = glXQueryMaxSwapBarriersSGIX(luaglew_checkarray_display(L, 1), luaL_checkint(L, 2), luaglew_checkarray_int(L, 3));
	lua_pushboolean(L, return_value);
	return 1;
}

// void glXJoinSwapGroupSGIX (Display *dpy, GLXDrawable drawable, GLXDrawable member)
static int luaglew_glXJoinSwapGroupSGIX(lua_State *L) {
	glXJoinSwapGroupSGIX(luaglew_checkarray_display(L, 1), **check nespracovany typ GLXDrawable **, **check nespracovany typ GLXDrawable **);
	return 0;
}

// int glXGetVideoSyncSGI (unsigned int* count)
static int luaglew_glXGetVideoSyncSGI(lua_State *L) {
	int return_value;
	return_value = glXGetVideoSyncSGI((unsigned int *)luaglew_checkarray_int(L, 1));
	lua_pushinteger(L, return_value);
	return 1;
}

// int glXWaitVideoSyncSGI (int divisor, int remainder, unsigned int* count)
static int luaglew_glXWaitVideoSyncSGI(lua_State *L) {
	int return_value;
	return_value = glXWaitVideoSyncSGI(luaL_checkint(L, 1), luaL_checkint(L, 2), (unsigned int *)luaglew_checkarray_int(L, 3));
	lua_pushinteger(L, return_value);
	return 1;
}

// int glXVideoResizeSUN (Display* display, GLXDrawable window, float factor)
static int luaglew_glXVideoResizeSUN(lua_State *L) {
	int return_value;
	return_value = glXVideoResizeSUN(luaglew_checkarray_display(L, 1), **check nespracovany typ GLXDrawable **, (GLfloat)luaL_checknumber(L, 3));
	lua_pushinteger(L, return_value);
	return 1;
}

// int glXGetVideoResizeSUN (Display* display, GLXDrawable window, float* factor)
static int luaglew_glXGetVideoResizeSUN(lua_State *L) {
	int return_value;
	return_value = glXGetVideoResizeSUN(luaglew_checkarray_display(L, 1), **check nespracovany typ GLXDrawable **, (float *)luaglew_checkarray_doublefloat(L, 3));
	lua_pushinteger(L, return_value);
	return 1;
}

// Display* glXGetCurrentDisplay (void)
static int luaglew_glXGetCurrentDisplay(lua_State *L) {
	Display* return_value;
	return_value = glXGetCurrentDisplay();
	luaglew_pusharray_display(L, return_value);
	return 1;
}

// GLXFBConfig* glXChooseFBConfig (Display *dpy, int screen, const int *attrib_list, int *nelements)
static int luaglew_glXChooseFBConfig(lua_State *L) {
	GLXFBConfig* return_value;
	return_value = glXChooseFBConfig(luaglew_checkarray_display(L, 1), luaL_checkint(L, 2), luaglew_checkarray_int(L, 3), luaglew_checkarray_int(L, 4));
	luaglew_pusharray_GLXFBConfig(L, return_value);
	return 1;
}

// GLXFBConfig* glXGetFBConfigs (Display *dpy, int screen, int *nelements)
static int luaglew_glXGetFBConfigs(lua_State *L) {
	GLXFBConfig* return_value;
	return_value = glXGetFBConfigs(luaglew_checkarray_display(L, 1), luaL_checkint(L, 2), luaglew_checkarray_int(L, 3));
	luaglew_pusharray_GLXFBConfig(L, return_value);
	return 1;
}

// XVisualInfo* glXGetVisualFromFBConfig (Display *dpy, GLXFBConfig config)
static int luaglew_glXGetVisualFromFBConfig(lua_State *L) {
	XVisualInfo* return_value;
	return_value = glXGetVisualFromFBConfig(luaglew_checkarray_display(L, 1), **check nespracovany typ GLXFBConfig **);
	luaglew_pusharray_XVisualInfo(L, return_value);
	return 1;
}

// int glXGetFBConfigAttrib (Display *dpy, GLXFBConfig config, int attribute, int *value)
static int luaglew_glXGetFBConfigAttrib(lua_State *L) {
	int return_value;
	return_value = glXGetFBConfigAttrib(luaglew_checkarray_display(L, 1), **check nespracovany typ GLXFBConfig **, luaL_checkint(L, 3), luaglew_checkarray_int(L, 4));
	lua_pushinteger(L, return_value);
	return 1;
}

// GLXWindow glXCreateWindow (Display *dpy, GLXFBConfig config, Window win, const int *attrib_list)
static int luaglew_glXCreateWindow(lua_State *L) {
	GLXWindow return_value;
	return_value = glXCreateWindow(luaglew_checkarray_display(L, 1), **check nespracovany typ GLXFBConfig **, **check nespracovany typ Window **, luaglew_checkarray_int(L, 4));
	push( ** nespracovany typ GLXWindow ** );
	return 1;
}

// void glXDestroyWindow (Display *dpy, GLXWindow win)
static int luaglew_glXDestroyWindow(lua_State *L) {
	glXDestroyWindow(luaglew_checkarray_display(L, 1), **check nespracovany typ GLXWindow **);
	return 0;
}

// GLXPixmap glXCreatePixmap (Display *dpy, GLXFBConfig config, Pixmap pixmap, const int *attrib_list)
static int luaglew_glXCreatePixmap(lua_State *L) {
	GLXPixmap return_value;
	return_value = glXCreatePixmap(luaglew_checkarray_display(L, 1), **check nespracovany typ GLXFBConfig **, **check nespracovany typ Pixmap **, luaglew_checkarray_int(L, 4));
	push( ** nespracovany typ GLXPixmap ** );
	return 1;
}

// void glXDestroyPixmap (Display *dpy, GLXPixmap pixmap)
static int luaglew_glXDestroyPixmap(lua_State *L) {
	glXDestroyPixmap(luaglew_checkarray_display(L, 1), **check nespracovany typ GLXPixmap **);
	return 0;
}

// GLXPbuffer glXCreatePbuffer (Display *dpy, GLXFBConfig config, const int *attrib_list)
static int luaglew_glXCreatePbuffer(lua_State *L) {
	GLXPbuffer return_value;
	return_value = glXCreatePbuffer(luaglew_checkarray_display(L, 1), **check nespracovany typ GLXFBConfig **, luaglew_checkarray_int(L, 3));
	push( ** nespracovany typ GLXPbuffer ** );
	return 1;
}

// void glXDestroyPbuffer (Display *dpy, GLXPbuffer pbuf)
static int luaglew_glXDestroyPbuffer(lua_State *L) {
	glXDestroyPbuffer(luaglew_checkarray_display(L, 1), **check nespracovany typ GLXPbuffer **);
	return 0;
}

// void glXQueryDrawable (Display *dpy, GLXDrawable draw, int attribute, unsigned int *value)
static int luaglew_glXQueryDrawable(lua_State *L) {
	glXQueryDrawable(luaglew_checkarray_display(L, 1), **check nespracovany typ GLXDrawable **, luaL_checkint(L, 3), (unsigned int *)luaglew_checkarray_int(L, 4));
	return 0;
}

// GLXContext glXCreateNewContext (Display *dpy, GLXFBConfig config, int render_type, GLXContext share_list, Bool direct)
static int luaglew_glXCreateNewContext(lua_State *L) {
	GLXContext return_value;
	return_value = glXCreateNewContext(luaglew_checkarray_display(L, 1), **check nespracovany typ GLXFBConfig **, luaL_checkint(L, 3), **check nespracovany typ GLXContext **, lua_toboolean(L, 5));
	push( ** nespracovany typ GLXContext ** );
	return 1;
}

// Bool glXMakeContextCurrent (Display *display, GLXDrawable draw, GLXDrawable read, GLXContext ctx)
static int luaglew_glXMakeContextCurrent(lua_State *L) {
	Bool return_value;
	return_value = glXMakeContextCurrent(luaglew_checkarray_display(L, 1), **check nespracovany typ GLXDrawable **, **check nespracovany typ GLXDrawable **, **check nespracovany typ GLXContext **);
	lua_pushboolean(L, return_value);
	return 1;
}

// GLXDrawable glXGetCurrentReadDrawable (void)
static int luaglew_glXGetCurrentReadDrawable(lua_State *L) {
	GLXDrawable return_value;
	return_value = glXGetCurrentReadDrawable();
	push( ** nespracovany typ GLXDrawable ** );
	return 1;
}

// int glXQueryContext (Display *dpy, GLXContext ctx, int attribute, int *value)
static int luaglew_glXQueryContext(lua_State *L) {
	int return_value;
	return_value = glXQueryContext(luaglew_checkarray_display(L, 1), **check nespracovany typ GLXContext **, luaL_checkint(L, 3), luaglew_checkarray_int(L, 4));
	lua_pushinteger(L, return_value);
	return 1;
}

// void glXSelectEvent (Display *dpy, GLXDrawable draw, unsigned long event_mask)
static int luaglew_glXSelectEvent(lua_State *L) {
	glXSelectEvent(luaglew_checkarray_display(L, 1), **check nespracovany typ GLXDrawable **, (unsigned long)luaL_checklong(L, 3));
	return 0;
}

// void glXGetSelectedEvent (Display *dpy, GLXDrawable draw, unsigned long *event_mask)
static int luaglew_glXGetSelectedEvent(lua_State *L) {
	glXGetSelectedEvent(luaglew_checkarray_display(L, 1), **check nespracovany typ GLXDrawable **, (unsigned long *)luaglew_checkarray_int(L, 3));
	return 0;
}

// extern void ( * glXGetProcAddress (const GLubyte *procName)) (void);
static int luaglew_void(lua_State *L) {
	extern return_value;
	return_value = void((GLubyte *)luaglew_checkarray_ubyte(L, 1));
	push( ** nespracovany typ extern ** );
	return 1;
}

// void glTextureRangeAPPLE (GLenum target, GLsizei length, GLvoid *pointer)
static int luaglew_glTextureRangeAPPLE(lua_State *L) {
	glTextureRangeAPPLE(luaglew_checkenum(L, 1), (GLsizei)luaL_checklong(L, 2), luaglew_checkarray_int(L, 3));
	return 0;
}

// void glGetTexParameterPointervAPPLE (GLenum target, GLenum pname, GLvoid **params)
static int luaglew_glGetTexParameterPointervAPPLE(lua_State *L) {
	glGetTexParameterPointervAPPLE(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), luaglew_checkarray_2void(L, 3));
	return 0;
}

// void glColorTable (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *table)
static int luaglew_glColorTable(lua_State *L) {
	glColorTable(luaglew_checkenum(L, 1), luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), luaglew_checkenum(L, 4), luaglew_checkenum(L, 5), (GLvoid *)luaglew_checkarray_void(L, 6));
	return 0;
}

// void glColorSubTable (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const GLvoid *data)
static int luaglew_glColorSubTable(lua_State *L) {
	glColorSubTable(luaglew_checkenum(L, 1), (GLsizei)luaL_checklong(L, 2), (GLsizei)luaL_checklong(L, 3), luaglew_checkenum(L, 4), luaglew_checkenum(L, 5), (GLvoid *)luaglew_checkarray_void(L, 6));
	return 0;
}

// void glColorTableParameteriv (GLenum target, GLenum pname, const GLint *params)
static int luaglew_glColorTableParameteriv(lua_State *L) {
	glColorTableParameteriv(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	return 0;
}

// void glColorTableParameterfv (GLenum target, GLenum pname, const GLfloat *params)
static int luaglew_glColorTableParameterfv(lua_State *L) {
	glColorTableParameterfv(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLfloat *)luaglew_checkarray_doublefloat(L, 3));
	return 0;
}

// void glCopyColorSubTable (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width)
static int luaglew_glCopyColorSubTable(lua_State *L) {
	glCopyColorSubTable(luaglew_checkenum(L, 1), (GLsizei)luaL_checklong(L, 2), (GLint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4), (GLsizei)luaL_checklong(L, 5));
	return 0;
}

// void glCopyColorTable (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width)
static int luaglew_glCopyColorTable(lua_State *L) {
	glCopyColorTable(luaglew_checkenum(L, 1), luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4), (GLsizei)luaL_checklong(L, 5));
	return 0;
}

// void glGetColorTable (GLenum target, GLenum format, GLenum type, GLvoid *table)
static int luaglew_glGetColorTable(lua_State *L) {
	glGetColorTable(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), luaglew_checkenum(L, 3), (GLvoid *)luaglew_checkarray_void(L, 4));
	return 0;
}

// void glGetColorTableParameterfv (GLenum target, GLenum pname, GLfloat *params)
static int luaglew_glGetColorTableParameterfv(lua_State *L) {
	glGetColorTableParameterfv(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLfloat *)luaglew_checkarray_doublefloat(L, 3));
	return 0;
}

// void glGetColorTableParameteriv (GLenum target, GLenum pname, GLint *params)
static int luaglew_glGetColorTableParameteriv(lua_State *L) {
	glGetColorTableParameteriv(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	return 0;
}

// void glHistogram (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink)
static int luaglew_glHistogram(lua_State *L) {
	glHistogram(luaglew_checkenum(L, 1), (GLsizei)luaL_checklong(L, 2), luaL_checkint(L, 3), (GLboolean)lua_toboolean(L, 4));
	return 0;
}

// void glResetHistogram (GLenum target)
static int luaglew_glResetHistogram(lua_State *L) {
	glResetHistogram(luaglew_checkenum(L, 1));
	return 0;
}

// void glGetHistogram (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values)
static int luaglew_glGetHistogram(lua_State *L) {
	glGetHistogram(luaglew_checkenum(L, 1), (GLboolean)lua_toboolean(L, 2), luaglew_checkenum(L, 3), luaglew_checkenum(L, 4), (GLvoid *)luaglew_checkarray_void(L, 5));
	return 0;
}

// void glGetHistogramParameterfv (GLenum target, GLenum pname, GLfloat *params)
static int luaglew_glGetHistogramParameterfv(lua_State *L) {
	glGetHistogramParameterfv(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLfloat *)luaglew_checkarray_doublefloat(L, 3));
	return 0;
}

// void glGetHistogramParameteriv (GLenum target, GLenum pname, GLint *params)
static int luaglew_glGetHistogramParameteriv(lua_State *L) {
	glGetHistogramParameteriv(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	return 0;
}

// void glMinmax (GLenum target, GLenum internalformat, GLboolean sink)
static int luaglew_glMinmax(lua_State *L) {
	glMinmax(luaglew_checkenum(L, 1), luaL_checkint(L, 2), (GLboolean)lua_toboolean(L, 3));
	return 0;
}

// void glResetMinmax (GLenum target)
static int luaglew_glResetMinmax(lua_State *L) {
	glResetMinmax(luaglew_checkenum(L, 1));
	return 0;
}

// void glGetMinmaxParameterfv (GLenum target, GLenum pname, GLfloat *params)
static int luaglew_glGetMinmaxParameterfv(lua_State *L) {
	glGetMinmaxParameterfv(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLfloat *)luaglew_checkarray_doublefloat(L, 3));
	return 0;
}

// void glGetMinmaxParameteriv (GLenum target, GLenum pname, GLint *params)
static int luaglew_glGetMinmaxParameteriv(lua_State *L) {
	glGetMinmaxParameteriv(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	return 0;
}

// void glConvolutionFilter1D (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *image)
static int luaglew_glConvolutionFilter1D(lua_State *L) {
	glConvolutionFilter1D(luaglew_checkenum(L, 1), luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), luaglew_checkenum(L, 4), luaglew_checkenum(L, 5), (GLvoid *)luaglew_checkarray_void(L, 6));
	return 0;
}

// void glConvolutionFilter2D (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *image)
static int luaglew_glConvolutionFilter2D(lua_State *L) {
	glConvolutionFilter2D(luaglew_checkenum(L, 1), luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLsizei)luaL_checklong(L, 4), luaglew_checkenum(L, 5), luaglew_checkenum(L, 6), (GLvoid *)luaglew_checkarray_void(L, 7));
	return 0;
}

// void glConvolutionParameterf (GLenum target, GLenum pname, GLfloat params)
static int luaglew_glConvolutionParameterf(lua_State *L) {
	glConvolutionParameterf(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLfloat)luaL_checknumber(L, 3));
	return 0;
}

// void glConvolutionParameterfv (GLenum target, GLenum pname, const GLfloat *params)
static int luaglew_glConvolutionParameterfv(lua_State *L) {
	glConvolutionParameterfv(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLfloat *)luaglew_checkarray_doublefloat(L, 3));
	return 0;
}

// void glConvolutionParameteri (GLenum target, GLenum pname, GLint params)
static int luaglew_glConvolutionParameteri(lua_State *L) {
	glConvolutionParameteri(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLint)luaL_checkint(L, 3));
	return 0;
}

// void glConvolutionParameteriv (GLenum target, GLenum pname, const GLint *params)
static int luaglew_glConvolutionParameteriv(lua_State *L) {
	glConvolutionParameteriv(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	return 0;
}

// void glCopyConvolutionFilter1D (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width)
static int luaglew_glCopyConvolutionFilter1D(lua_State *L) {
	glCopyConvolutionFilter1D(luaglew_checkenum(L, 1), luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4), (GLsizei)luaL_checklong(L, 5));
	return 0;
}

// void glCopyConvolutionFilter2D (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height)
static int luaglew_glCopyConvolutionFilter2D(lua_State *L) {
	glCopyConvolutionFilter2D(luaglew_checkenum(L, 1), luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4), (GLsizei)luaL_checklong(L, 5), (GLsizei)luaL_checklong(L, 6));
	return 0;
}

// void glGetConvolutionFilter (GLenum target, GLenum format, GLenum type, GLvoid *image)
static int luaglew_glGetConvolutionFilter(lua_State *L) {
	glGetConvolutionFilter(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), luaglew_checkenum(L, 3), (GLvoid *)luaglew_checkarray_void(L, 4));
	return 0;
}

// void glGetConvolutionParameterfv (GLenum target, GLenum pname, GLfloat *params)
static int luaglew_glGetConvolutionParameterfv(lua_State *L) {
	glGetConvolutionParameterfv(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLfloat *)luaglew_checkarray_doublefloat(L, 3));
	return 0;
}

// void glGetConvolutionParameteriv (GLenum target, GLenum pname, GLint *params)
static int luaglew_glGetConvolutionParameteriv(lua_State *L) {
	glGetConvolutionParameteriv(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	return 0;
}

// void glSeparableFilter2D (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *row, const GLvoid *column)
static int luaglew_glSeparableFilter2D(lua_State *L) {
	glSeparableFilter2D(luaglew_checkenum(L, 1), luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLsizei)luaL_checklong(L, 4), luaglew_checkenum(L, 5), luaglew_checkenum(L, 6), (GLvoid *)luaglew_checkarray_void(L, 7), (GLvoid *)luaglew_checkarray_void(L, 8));
	return 0;
}

// void glGetSeparableFilter (GLenum target, GLenum format, GLenum type, GLvoid *row, GLvoid *column, GLvoid *span)
static int luaglew_glGetSeparableFilter(lua_State *L) {
	glGetSeparableFilter(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), luaglew_checkenum(L, 3), (GLvoid *)luaglew_checkarray_void(L, 4), (GLvoid *)luaglew_checkarray_void(L, 5), (GLvoid *)luaglew_checkarray_void(L, 6));
	return 0;
}

// void glGetMinmax (GLenum target, GLboolean reset, GLenum format, GLenum types, GLvoid *values)
static int luaglew_glGetMinmax(lua_State *L) {
	glGetMinmax(luaglew_checkenum(L, 1), (GLboolean)lua_toboolean(L, 2), luaglew_checkenum(L, 3), luaglew_checkenum(L, 4), (GLvoid *)luaglew_checkarray_void(L, 5));
	return 0;
}

// void glCurrentPaletteMatrixARB (GLint index)
static int luaglew_glCurrentPaletteMatrixARB(lua_State *L) {
	glCurrentPaletteMatrixARB((GLint)luaL_checkint(L, 1));
	return 0;
}

// void glMatrixIndexPointerARB (GLint size, GLenum type, GLsizei stride, GLvoid *pointer)
static int luaglew_glMatrixIndexPointerARB(lua_State *L) {
	glMatrixIndexPointerARB((GLint)luaL_checkint(L, 1), luaglew_checkenum(L, 2), (GLsizei)luaL_checklong(L, 3), luaglew_checkarray_int(L, 4));
	return 0;
}

// void glMatrixIndexubvARB (GLint size, GLubyte *indices)
static int luaglew_glMatrixIndexubvARB(lua_State *L) {
	glMatrixIndexubvARB((GLint)luaL_checkint(L, 1), (GLubyte *)luaglew_checkarray_ubyte(L, 2));
	return 0;
}

// void glMatrixIndexusvARB (GLint size, GLushort *indices)
static int luaglew_glMatrixIndexusvARB(lua_State *L) {
	glMatrixIndexusvARB((GLint)luaL_checkint(L, 1), (GLushort *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glMatrixIndexuivARB (GLint size, GLuint *indices)
static int luaglew_glMatrixIndexuivARB(lua_State *L) {
	glMatrixIndexuivARB((GLint)luaL_checkint(L, 1), (GLuint *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glActiveTextureARB (GLenum texture)
static int luaglew_glActiveTextureARB(lua_State *L) {
	glActiveTextureARB(luaglew_checkenum(L, 1));
	return 0;
}

// void glClientActiveTextureARB (GLenum texture)
static int luaglew_glClientActiveTextureARB(lua_State *L) {
	glClientActiveTextureARB(luaglew_checkenum(L, 1));
	return 0;
}

// void glMultiTexCoord1dARB (GLenum target, GLdouble s)
static int luaglew_glMultiTexCoord1dARB(lua_State *L) {
	glMultiTexCoord1dARB(luaglew_checkenum(L, 1), (GLdouble)luaL_checknumber(L, 2));
	return 0;
}

// void glMultiTexCoord1dvARB (GLenum target, const GLdouble *v)
static int luaglew_glMultiTexCoord1dvARB(lua_State *L) {
	glMultiTexCoord1dvARB(luaglew_checkenum(L, 1), (GLdouble *)luaglew_checkarray_doublefloat(L, 2));
	return 0;
}

// void glMultiTexCoord1fARB (GLenum target, GLfloat s)
static int luaglew_glMultiTexCoord1fARB(lua_State *L) {
	glMultiTexCoord1fARB(luaglew_checkenum(L, 1), (GLfloat)luaL_checknumber(L, 2));
	return 0;
}

// void glMultiTexCoord1fvARB (GLenum target, const GLfloat *v)
static int luaglew_glMultiTexCoord1fvARB(lua_State *L) {
	glMultiTexCoord1fvARB(luaglew_checkenum(L, 1), (GLfloat *)luaglew_checkarray_doublefloat(L, 2));
	return 0;
}

// void glMultiTexCoord1iARB (GLenum target, GLint s)
static int luaglew_glMultiTexCoord1iARB(lua_State *L) {
	glMultiTexCoord1iARB(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2));
	return 0;
}

// void glMultiTexCoord1ivARB (GLenum target, const GLint *v)
static int luaglew_glMultiTexCoord1ivARB(lua_State *L) {
	glMultiTexCoord1ivARB(luaglew_checkenum(L, 1), (GLint *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glMultiTexCoord1sARB (GLenum target, GLshort s)
static int luaglew_glMultiTexCoord1sARB(lua_State *L) {
	glMultiTexCoord1sARB(luaglew_checkenum(L, 1), (GLshort)luaL_checkinteger(L, 2));
	return 0;
}

// void glMultiTexCoord1svARB (GLenum target, const GLshort *v)
static int luaglew_glMultiTexCoord1svARB(lua_State *L) {
	glMultiTexCoord1svARB(luaglew_checkenum(L, 1), (GLshort *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glMultiTexCoord2dARB (GLenum target, GLdouble s, GLdouble t)
static int luaglew_glMultiTexCoord2dARB(lua_State *L) {
	glMultiTexCoord2dARB(luaglew_checkenum(L, 1), (GLdouble)luaL_checknumber(L, 2), (GLdouble)luaL_checknumber(L, 3));
	return 0;
}

// void glMultiTexCoord2dvARB (GLenum target, const GLdouble *v)
static int luaglew_glMultiTexCoord2dvARB(lua_State *L) {
	glMultiTexCoord2dvARB(luaglew_checkenum(L, 1), (GLdouble *)luaglew_checkarray_doublefloat(L, 2));
	return 0;
}

// void glMultiTexCoord2fARB (GLenum target, GLfloat s, GLfloat t)
static int luaglew_glMultiTexCoord2fARB(lua_State *L) {
	glMultiTexCoord2fARB(luaglew_checkenum(L, 1), (GLfloat)luaL_checknumber(L, 2), (GLfloat)luaL_checknumber(L, 3));
	return 0;
}

// void glMultiTexCoord2fvARB (GLenum target, const GLfloat *v)
static int luaglew_glMultiTexCoord2fvARB(lua_State *L) {
	glMultiTexCoord2fvARB(luaglew_checkenum(L, 1), (GLfloat *)luaglew_checkarray_doublefloat(L, 2));
	return 0;
}

// void glMultiTexCoord2iARB (GLenum target, GLint s, GLint t)
static int luaglew_glMultiTexCoord2iARB(lua_State *L) {
	glMultiTexCoord2iARB(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3));
	return 0;
}

// void glMultiTexCoord2ivARB (GLenum target, const GLint *v)
static int luaglew_glMultiTexCoord2ivARB(lua_State *L) {
	glMultiTexCoord2ivARB(luaglew_checkenum(L, 1), (GLint *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glMultiTexCoord2sARB (GLenum target, GLshort s, GLshort t)
static int luaglew_glMultiTexCoord2sARB(lua_State *L) {
	glMultiTexCoord2sARB(luaglew_checkenum(L, 1), (GLshort)luaL_checkinteger(L, 2), (GLshort)luaL_checkinteger(L, 3));
	return 0;
}

// void glMultiTexCoord2svARB (GLenum target, const GLshort *v)
static int luaglew_glMultiTexCoord2svARB(lua_State *L) {
	glMultiTexCoord2svARB(luaglew_checkenum(L, 1), (GLshort *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glMultiTexCoord3dARB (GLenum target, GLdouble s, GLdouble t, GLdouble r)
static int luaglew_glMultiTexCoord3dARB(lua_State *L) {
	glMultiTexCoord3dARB(luaglew_checkenum(L, 1), (GLdouble)luaL_checknumber(L, 2), (GLdouble)luaL_checknumber(L, 3), (GLdouble)luaL_checknumber(L, 4));
	return 0;
}

// void glMultiTexCoord3dvARB (GLenum target, const GLdouble *v)
static int luaglew_glMultiTexCoord3dvARB(lua_State *L) {
	glMultiTexCoord3dvARB(luaglew_checkenum(L, 1), (GLdouble *)luaglew_checkarray_doublefloat(L, 2));
	return 0;
}

// void glMultiTexCoord3fARB (GLenum target, GLfloat s, GLfloat t, GLfloat r)
static int luaglew_glMultiTexCoord3fARB(lua_State *L) {
	glMultiTexCoord3fARB(luaglew_checkenum(L, 1), (GLfloat)luaL_checknumber(L, 2), (GLfloat)luaL_checknumber(L, 3), (GLfloat)luaL_checknumber(L, 4));
	return 0;
}

// void glMultiTexCoord3fvARB (GLenum target, const GLfloat *v)
static int luaglew_glMultiTexCoord3fvARB(lua_State *L) {
	glMultiTexCoord3fvARB(luaglew_checkenum(L, 1), (GLfloat *)luaglew_checkarray_doublefloat(L, 2));
	return 0;
}

// void glMultiTexCoord3iARB (GLenum target, GLint s, GLint t, GLint r)
static int luaglew_glMultiTexCoord3iARB(lua_State *L) {
	glMultiTexCoord3iARB(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4));
	return 0;
}

// void glMultiTexCoord3ivARB (GLenum target, const GLint *v)
static int luaglew_glMultiTexCoord3ivARB(lua_State *L) {
	glMultiTexCoord3ivARB(luaglew_checkenum(L, 1), (GLint *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glMultiTexCoord3sARB (GLenum target, GLshort s, GLshort t, GLshort r)
static int luaglew_glMultiTexCoord3sARB(lua_State *L) {
	glMultiTexCoord3sARB(luaglew_checkenum(L, 1), (GLshort)luaL_checkinteger(L, 2), (GLshort)luaL_checkinteger(L, 3), (GLshort)luaL_checkinteger(L, 4));
	return 0;
}

// void glMultiTexCoord3svARB (GLenum target, const GLshort *v)
static int luaglew_glMultiTexCoord3svARB(lua_State *L) {
	glMultiTexCoord3svARB(luaglew_checkenum(L, 1), (GLshort *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glMultiTexCoord4dARB (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q)
static int luaglew_glMultiTexCoord4dARB(lua_State *L) {
	glMultiTexCoord4dARB(luaglew_checkenum(L, 1), (GLdouble)luaL_checknumber(L, 2), (GLdouble)luaL_checknumber(L, 3), (GLdouble)luaL_checknumber(L, 4), (GLdouble)luaL_checknumber(L, 5));
	return 0;
}

// void glMultiTexCoord4dvARB (GLenum target, const GLdouble *v)
static int luaglew_glMultiTexCoord4dvARB(lua_State *L) {
	glMultiTexCoord4dvARB(luaglew_checkenum(L, 1), (GLdouble *)luaglew_checkarray_doublefloat(L, 2));
	return 0;
}

// void glMultiTexCoord4fARB (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q)
static int luaglew_glMultiTexCoord4fARB(lua_State *L) {
	glMultiTexCoord4fARB(luaglew_checkenum(L, 1), (GLfloat)luaL_checknumber(L, 2), (GLfloat)luaL_checknumber(L, 3), (GLfloat)luaL_checknumber(L, 4), (GLfloat)luaL_checknumber(L, 5));
	return 0;
}

// void glMultiTexCoord4fvARB (GLenum target, const GLfloat *v)
static int luaglew_glMultiTexCoord4fvARB(lua_State *L) {
	glMultiTexCoord4fvARB(luaglew_checkenum(L, 1), (GLfloat *)luaglew_checkarray_doublefloat(L, 2));
	return 0;
}

// void glMultiTexCoord4iARB (GLenum target, GLint s, GLint t, GLint r, GLint q)
static int luaglew_glMultiTexCoord4iARB(lua_State *L) {
	glMultiTexCoord4iARB(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4), (GLint)luaL_checkint(L, 5));
	return 0;
}

// void glMultiTexCoord4ivARB (GLenum target, const GLint *v)
static int luaglew_glMultiTexCoord4ivARB(lua_State *L) {
	glMultiTexCoord4ivARB(luaglew_checkenum(L, 1), (GLint *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glMultiTexCoord4sARB (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q)
static int luaglew_glMultiTexCoord4sARB(lua_State *L) {
	glMultiTexCoord4sARB(luaglew_checkenum(L, 1), (GLshort)luaL_checkinteger(L, 2), (GLshort)luaL_checkinteger(L, 3), (GLshort)luaL_checkinteger(L, 4), (GLshort)luaL_checkinteger(L, 5));
	return 0;
}

// void glMultiTexCoord4svARB (GLenum target, const GLshort *v)
static int luaglew_glMultiTexCoord4svARB(lua_State *L) {
	glMultiTexCoord4svARB(luaglew_checkenum(L, 1), (GLshort *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glPointParameterfARB (GLenum pname, GLfloat param)
static int luaglew_glPointParameterfARB(lua_State *L) {
	glPointParameterfARB(luaglew_checkenum(L, 1), (GLfloat)luaL_checknumber(L, 2));
	return 0;
}

// void glPointParameterfvARB (GLenum pname, const GLfloat* params)
static int luaglew_glPointParameterfvARB(lua_State *L) {
	glPointParameterfvARB(luaglew_checkenum(L, 1), (GLfloat *)luaglew_checkarray_doublefloat(L, 2));
	return 0;
}

// void glGetnColorTableARB (GLenum target, GLenum format, GLenum type, GLsizei bufSize, void* table)
static int luaglew_glGetnColorTableARB(lua_State *L) {
	glGetnColorTableARB(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), luaglew_checkenum(L, 3), (GLsizei)luaL_checklong(L, 4), luaglew_checkarray_void(L, 5));
	return 0;
}

// void glGetnCompressedTexImageARB (GLenum target, GLint lod, GLsizei bufSize, void* img)
static int luaglew_glGetnCompressedTexImageARB(lua_State *L) {
	glGetnCompressedTexImageARB(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), luaglew_checkarray_void(L, 4));
	return 0;
}

// void glGetnConvolutionFilterARB (GLenum target, GLenum format, GLenum type, GLsizei bufSize, void* image)
static int luaglew_glGetnConvolutionFilterARB(lua_State *L) {
	glGetnConvolutionFilterARB(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), luaglew_checkenum(L, 3), (GLsizei)luaL_checklong(L, 4), luaglew_checkarray_void(L, 5));
	return 0;
}

// void glGetnHistogramARB (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void* values)
static int luaglew_glGetnHistogramARB(lua_State *L) {
	glGetnHistogramARB(luaglew_checkenum(L, 1), (GLboolean)lua_toboolean(L, 2), luaglew_checkenum(L, 3), luaglew_checkenum(L, 4), (GLsizei)luaL_checklong(L, 5), luaglew_checkarray_void(L, 6));
	return 0;
}

// void glGetnMapdvARB (GLenum target, GLenum query, GLsizei bufSize, GLdouble* v)
static int luaglew_glGetnMapdvARB(lua_State *L) {
	glGetnMapdvARB(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLsizei)luaL_checklong(L, 3), (GLdouble *)luaglew_checkarray_doublefloat(L, 4));
	return 0;
}

// void glGetnMapfvARB (GLenum target, GLenum query, GLsizei bufSize, GLfloat* v)
static int luaglew_glGetnMapfvARB(lua_State *L) {
	glGetnMapfvARB(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLsizei)luaL_checklong(L, 3), (GLfloat *)luaglew_checkarray_doublefloat(L, 4));
	return 0;
}

// void glGetnMapivARB (GLenum target, GLenum query, GLsizei bufSize, GLint* v)
static int luaglew_glGetnMapivARB(lua_State *L) {
	glGetnMapivARB(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLsizei)luaL_checklong(L, 3), (GLint *)luaglew_checkarray_int(L, 4));
	return 0;
}

// void glGetnMinmaxARB (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void* values)
static int luaglew_glGetnMinmaxARB(lua_State *L) {
	glGetnMinmaxARB(luaglew_checkenum(L, 1), (GLboolean)lua_toboolean(L, 2), luaglew_checkenum(L, 3), luaglew_checkenum(L, 4), (GLsizei)luaL_checklong(L, 5), luaglew_checkarray_void(L, 6));
	return 0;
}

// void glGetnPixelMapfvARB (GLenum map, GLsizei bufSize, GLfloat* values)
static int luaglew_glGetnPixelMapfvARB(lua_State *L) {
	glGetnPixelMapfvARB(luaglew_checkenum(L, 1), (GLsizei)luaL_checklong(L, 2), (GLfloat *)luaglew_checkarray_doublefloat(L, 3));
	return 0;
}

// void glGetnPixelMapuivARB (GLenum map, GLsizei bufSize, GLuint* values)
static int luaglew_glGetnPixelMapuivARB(lua_State *L) {
	glGetnPixelMapuivARB(luaglew_checkenum(L, 1), (GLsizei)luaL_checklong(L, 2), (GLuint *)luaglew_checkarray_int(L, 3));
	return 0;
}

// void glGetnPixelMapusvARB (GLenum map, GLsizei bufSize, GLushort* values)
static int luaglew_glGetnPixelMapusvARB(lua_State *L) {
	glGetnPixelMapusvARB(luaglew_checkenum(L, 1), (GLsizei)luaL_checklong(L, 2), (GLushort *)luaglew_checkarray_int(L, 3));
	return 0;
}

// void glGetnPolygonStippleARB (GLsizei bufSize, GLubyte* pattern)
static int luaglew_glGetnPolygonStippleARB(lua_State *L) {
	glGetnPolygonStippleARB((GLsizei)luaL_checklong(L, 1), (GLubyte *)luaglew_checkarray_ubyte(L, 2));
	return 0;
}

// void glGetnSeparableFilterARB (GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, void* row, GLsizei columnBufSize, GLvoid*column, GLvoid*span)
static int luaglew_glGetnSeparableFilterARB(lua_State *L) {
	glGetnSeparableFilterARB(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), luaglew_checkenum(L, 3), (GLsizei)luaL_checklong(L, 4), luaglew_checkarray_void(L, 5), (GLsizei)luaL_checklong(L, 6), (GLvoid *)luaglew_checkarray_void(L, 7), (GLvoid *)luaglew_checkarray_void(L, 8));
	return 0;
}

// void glGetnTexImageARB (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void* img)
static int luaglew_glGetnTexImageARB(lua_State *L) {
	glGetnTexImageARB(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), luaglew_checkenum(L, 3), luaglew_checkenum(L, 4), (GLsizei)luaL_checklong(L, 5), luaglew_checkarray_void(L, 6));
	return 0;
}

// void glGetnUniformdvARB (GLuint program, GLint location, GLsizei bufSize, GLdouble* params)
static int luaglew_glGetnUniformdvARB(lua_State *L) {
	glGetnUniformdvARB((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLdouble *)luaglew_checkarray_doublefloat(L, 4));
	return 0;
}

// void glGetnUniformfvARB (GLuint program, GLint location, GLsizei bufSize, GLfloat* params)
static int luaglew_glGetnUniformfvARB(lua_State *L) {
	glGetnUniformfvARB((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLfloat *)luaglew_checkarray_doublefloat(L, 4));
	return 0;
}

// void glGetnUniformivARB (GLuint program, GLint location, GLsizei bufSize, GLint* params)
static int luaglew_glGetnUniformivARB(lua_State *L) {
	glGetnUniformivARB((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLint *)luaglew_checkarray_int(L, 4));
	return 0;
}

// void glGetnUniformuivARB (GLuint program, GLint location, GLsizei bufSize, GLuint* params)
static int luaglew_glGetnUniformuivARB(lua_State *L) {
	glGetnUniformuivARB((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLuint *)luaglew_checkarray_int(L, 4));
	return 0;
}

// void glReadnPixelsARB (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void* data)
static int luaglew_glReadnPixelsARB(lua_State *L) {
	glReadnPixelsARB((GLint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLsizei)luaL_checklong(L, 4), luaglew_checkenum(L, 5), luaglew_checkenum(L, 6), (GLsizei)luaL_checklong(L, 7), luaglew_checkarray_void(L, 8));
	return 0;
}

// void glActiveShaderProgram (GLuint pipeline, GLuint program)
static int luaglew_glActiveShaderProgram(lua_State *L) {
	glActiveShaderProgram((GLuint)luaL_checkint(L, 1), (GLuint)luaL_checkint(L, 2));
	return 0;
}

// void glBindProgramPipeline (GLuint pipeline)
static int luaglew_glBindProgramPipeline(lua_State *L) {
	glBindProgramPipeline((GLuint)luaL_checkint(L, 1));
	return 0;
}

// GLuint glCreateShaderProgramv (GLenum type, GLsizei count, const char ** strings)
static int luaglew_glCreateShaderProgramv(lua_State *L) {
	GLuint return_value;
	return_value = glCreateShaderProgramv(luaglew_checkenum(L, 1), (GLsizei)luaL_checklong(L, 2), luaglew_checkarray_2char(L, 3));
	lua_pushinteger(L, return_value);
	return 1;
}

// void glDeleteProgramPipelines (GLsizei n, const GLuint* pipelines)
static int luaglew_glDeleteProgramPipelines(lua_State *L) {
	glDeleteProgramPipelines((GLsizei)luaL_checklong(L, 1), (GLuint *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glGenProgramPipelines (GLsizei n, GLuint* pipelines)
static int luaglew_glGenProgramPipelines(lua_State *L) {
	glGenProgramPipelines((GLsizei)luaL_checklong(L, 1), (GLuint *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glGetProgramPipelineInfoLog (GLuint pipeline, GLsizei bufSize, GLsizei* length, char *infoLog)
static int luaglew_glGetProgramPipelineInfoLog(lua_State *L) {
	glGetProgramPipelineInfoLog((GLuint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLsizei *)luaglew_checkarray_int(L, 3), luaglew_checkarray_char(L, 4));
	return 0;
}

// void glGetProgramPipelineiv (GLuint pipeline, GLenum pname, GLint* params)
static int luaglew_glGetProgramPipelineiv(lua_State *L) {
	glGetProgramPipelineiv((GLuint)luaL_checkint(L, 1), luaglew_checkenum(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	return 0;
}

// GLboolean glIsProgramPipeline (GLuint pipeline)
static int luaglew_glIsProgramPipeline(lua_State *L) {
	GLboolean return_value;
	return_value = glIsProgramPipeline((GLuint)luaL_checkint(L, 1));
	lua_pushboolean(L, return_value);
	return 1;
}

// void glProgramUniform1d (GLuint program, GLint location, GLdouble x)
static int luaglew_glProgramUniform1d(lua_State *L) {
	glProgramUniform1d((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLdouble)luaL_checknumber(L, 3));
	return 0;
}

// void glProgramUniform1dv (GLuint program, GLint location, GLsizei count, const GLdouble* value)
static int luaglew_glProgramUniform1dv(lua_State *L) {
	glProgramUniform1dv((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLdouble *)luaglew_checkarray_doublefloat(L, 4));
	return 0;
}

// void glProgramUniform1f (GLuint program, GLint location, GLfloat x)
static int luaglew_glProgramUniform1f(lua_State *L) {
	glProgramUniform1f((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLfloat)luaL_checknumber(L, 3));
	return 0;
}

// void glProgramUniform1fv (GLuint program, GLint location, GLsizei count, const GLfloat* value)
static int luaglew_glProgramUniform1fv(lua_State *L) {
	glProgramUniform1fv((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLfloat *)luaglew_checkarray_doublefloat(L, 4));
	return 0;
}

// void glProgramUniform1i (GLuint program, GLint location, GLint x)
static int luaglew_glProgramUniform1i(lua_State *L) {
	glProgramUniform1i((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3));
	return 0;
}

// void glProgramUniform1iv (GLuint program, GLint location, GLsizei count, const GLint* value)
static int luaglew_glProgramUniform1iv(lua_State *L) {
	glProgramUniform1iv((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLint *)luaglew_checkarray_int(L, 4));
	return 0;
}

// void glProgramUniform1ui (GLuint program, GLint location, GLuint x)
static int luaglew_glProgramUniform1ui(lua_State *L) {
	glProgramUniform1ui((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLuint)luaL_checkint(L, 3));
	return 0;
}

// void glProgramUniform1uiv (GLuint program, GLint location, GLsizei count, const GLuint* value)
static int luaglew_glProgramUniform1uiv(lua_State *L) {
	glProgramUniform1uiv((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLuint *)luaglew_checkarray_int(L, 4));
	return 0;
}

// void glProgramUniform2d (GLuint program, GLint location, GLdouble x, GLdouble y)
static int luaglew_glProgramUniform2d(lua_State *L) {
	glProgramUniform2d((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLdouble)luaL_checknumber(L, 3), (GLdouble)luaL_checknumber(L, 4));
	return 0;
}

// void glProgramUniform2dv (GLuint program, GLint location, GLsizei count, const GLdouble* value)
static int luaglew_glProgramUniform2dv(lua_State *L) {
	glProgramUniform2dv((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLdouble *)luaglew_checkarray_doublefloat(L, 4));
	return 0;
}

// void glProgramUniform2f (GLuint program, GLint location, GLfloat x, GLfloat y)
static int luaglew_glProgramUniform2f(lua_State *L) {
	glProgramUniform2f((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLfloat)luaL_checknumber(L, 3), (GLfloat)luaL_checknumber(L, 4));
	return 0;
}

// void glProgramUniform2fv (GLuint program, GLint location, GLsizei count, const GLfloat* value)
static int luaglew_glProgramUniform2fv(lua_State *L) {
	glProgramUniform2fv((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLfloat *)luaglew_checkarray_doublefloat(L, 4));
	return 0;
}

// void glProgramUniform2i (GLuint program, GLint location, GLint x, GLint y)
static int luaglew_glProgramUniform2i(lua_State *L) {
	glProgramUniform2i((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4));
	return 0;
}

// void glProgramUniform2iv (GLuint program, GLint location, GLsizei count, const GLint* value)
static int luaglew_glProgramUniform2iv(lua_State *L) {
	glProgramUniform2iv((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLint *)luaglew_checkarray_int(L, 4));
	return 0;
}

// void glProgramUniform2ui (GLuint program, GLint location, GLuint x, GLuint y)
static int luaglew_glProgramUniform2ui(lua_State *L) {
	glProgramUniform2ui((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLuint)luaL_checkint(L, 3), (GLuint)luaL_checkint(L, 4));
	return 0;
}

// void glProgramUniform2uiv (GLuint program, GLint location, GLsizei count, const GLuint* value)
static int luaglew_glProgramUniform2uiv(lua_State *L) {
	glProgramUniform2uiv((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLuint *)luaglew_checkarray_int(L, 4));
	return 0;
}

// void glProgramUniform3d (GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z)
static int luaglew_glProgramUniform3d(lua_State *L) {
	glProgramUniform3d((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLdouble)luaL_checknumber(L, 3), (GLdouble)luaL_checknumber(L, 4), (GLdouble)luaL_checknumber(L, 5));
	return 0;
}

// void glProgramUniform3dv (GLuint program, GLint location, GLsizei count, const GLdouble* value)
static int luaglew_glProgramUniform3dv(lua_State *L) {
	glProgramUniform3dv((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLdouble *)luaglew_checkarray_doublefloat(L, 4));
	return 0;
}

// void glProgramUniform3f (GLuint program, GLint location, GLfloat x, GLfloat y, GLfloat z)
static int luaglew_glProgramUniform3f(lua_State *L) {
	glProgramUniform3f((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLfloat)luaL_checknumber(L, 3), (GLfloat)luaL_checknumber(L, 4), (GLfloat)luaL_checknumber(L, 5));
	return 0;
}

// void glProgramUniform3fv (GLuint program, GLint location, GLsizei count, const GLfloat* value)
static int luaglew_glProgramUniform3fv(lua_State *L) {
	glProgramUniform3fv((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLfloat *)luaglew_checkarray_doublefloat(L, 4));
	return 0;
}

// void glProgramUniform3i (GLuint program, GLint location, GLint x, GLint y, GLint z)
static int luaglew_glProgramUniform3i(lua_State *L) {
	glProgramUniform3i((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4), (GLint)luaL_checkint(L, 5));
	return 0;
}

// void glProgramUniform3iv (GLuint program, GLint location, GLsizei count, const GLint* value)
static int luaglew_glProgramUniform3iv(lua_State *L) {
	glProgramUniform3iv((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLint *)luaglew_checkarray_int(L, 4));
	return 0;
}

// void glProgramUniform3ui (GLuint program, GLint location, GLuint x, GLuint y, GLuint z)
static int luaglew_glProgramUniform3ui(lua_State *L) {
	glProgramUniform3ui((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLuint)luaL_checkint(L, 3), (GLuint)luaL_checkint(L, 4), (GLuint)luaL_checkint(L, 5));
	return 0;
}

// void glProgramUniform3uiv (GLuint program, GLint location, GLsizei count, const GLuint* value)
static int luaglew_glProgramUniform3uiv(lua_State *L) {
	glProgramUniform3uiv((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLuint *)luaglew_checkarray_int(L, 4));
	return 0;
}

// void glProgramUniform4d (GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w)
static int luaglew_glProgramUniform4d(lua_State *L) {
	glProgramUniform4d((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLdouble)luaL_checknumber(L, 3), (GLdouble)luaL_checknumber(L, 4), (GLdouble)luaL_checknumber(L, 5), (GLdouble)luaL_checknumber(L, 6));
	return 0;
}

// void glProgramUniform4dv (GLuint program, GLint location, GLsizei count, const GLdouble* value)
static int luaglew_glProgramUniform4dv(lua_State *L) {
	glProgramUniform4dv((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLdouble *)luaglew_checkarray_doublefloat(L, 4));
	return 0;
}

// void glProgramUniform4f (GLuint program, GLint location, GLfloat x, GLfloat y, GLfloat z, GLfloat w)
static int luaglew_glProgramUniform4f(lua_State *L) {
	glProgramUniform4f((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLfloat)luaL_checknumber(L, 3), (GLfloat)luaL_checknumber(L, 4), (GLfloat)luaL_checknumber(L, 5), (GLfloat)luaL_checknumber(L, 6));
	return 0;
}

// void glProgramUniform4fv (GLuint program, GLint location, GLsizei count, const GLfloat* value)
static int luaglew_glProgramUniform4fv(lua_State *L) {
	glProgramUniform4fv((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLfloat *)luaglew_checkarray_doublefloat(L, 4));
	return 0;
}

// void glProgramUniform4i (GLuint program, GLint location, GLint x, GLint y, GLint z, GLint w)
static int luaglew_glProgramUniform4i(lua_State *L) {
	glProgramUniform4i((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4), (GLint)luaL_checkint(L, 5), (GLint)luaL_checkint(L, 6));
	return 0;
}

// void glProgramUniform4iv (GLuint program, GLint location, GLsizei count, const GLint* value)
static int luaglew_glProgramUniform4iv(lua_State *L) {
	glProgramUniform4iv((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLint *)luaglew_checkarray_int(L, 4));
	return 0;
}

// void glProgramUniform4ui (GLuint program, GLint location, GLuint x, GLuint y, GLuint z, GLuint w)
static int luaglew_glProgramUniform4ui(lua_State *L) {
	glProgramUniform4ui((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLuint)luaL_checkint(L, 3), (GLuint)luaL_checkint(L, 4), (GLuint)luaL_checkint(L, 5), (GLuint)luaL_checkint(L, 6));
	return 0;
}

// void glProgramUniform4uiv (GLuint program, GLint location, GLsizei count, const GLuint* value)
static int luaglew_glProgramUniform4uiv(lua_State *L) {
	glProgramUniform4uiv((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLuint *)luaglew_checkarray_int(L, 4));
	return 0;
}

// void glProgramUniformMatrix2dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value)
static int luaglew_glProgramUniformMatrix2dv(lua_State *L) {
	glProgramUniformMatrix2dv((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLboolean)lua_toboolean(L, 4), (GLdouble *)luaglew_checkarray_doublefloat(L, 5));
	return 0;
}

// void glProgramUniformMatrix2fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value)
static int luaglew_glProgramUniformMatrix2fv(lua_State *L) {
	glProgramUniformMatrix2fv((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLboolean)lua_toboolean(L, 4), (GLfloat *)luaglew_checkarray_doublefloat(L, 5));
	return 0;
}

// void glProgramUniformMatrix2x3dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value)
static int luaglew_glProgramUniformMatrix2x3dv(lua_State *L) {
	glProgramUniformMatrix2x3dv((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLboolean)lua_toboolean(L, 4), (GLdouble *)luaglew_checkarray_doublefloat(L, 5));
	return 0;
}

// void glProgramUniformMatrix2x3fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value)
static int luaglew_glProgramUniformMatrix2x3fv(lua_State *L) {
	glProgramUniformMatrix2x3fv((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLboolean)lua_toboolean(L, 4), (GLfloat *)luaglew_checkarray_doublefloat(L, 5));
	return 0;
}

// void glProgramUniformMatrix2x4dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value)
static int luaglew_glProgramUniformMatrix2x4dv(lua_State *L) {
	glProgramUniformMatrix2x4dv((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLboolean)lua_toboolean(L, 4), (GLdouble *)luaglew_checkarray_doublefloat(L, 5));
	return 0;
}

// void glProgramUniformMatrix2x4fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value)
static int luaglew_glProgramUniformMatrix2x4fv(lua_State *L) {
	glProgramUniformMatrix2x4fv((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLboolean)lua_toboolean(L, 4), (GLfloat *)luaglew_checkarray_doublefloat(L, 5));
	return 0;
}

// void glProgramUniformMatrix3dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value)
static int luaglew_glProgramUniformMatrix3dv(lua_State *L) {
	glProgramUniformMatrix3dv((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLboolean)lua_toboolean(L, 4), (GLdouble *)luaglew_checkarray_doublefloat(L, 5));
	return 0;
}

// void glProgramUniformMatrix3fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value)
static int luaglew_glProgramUniformMatrix3fv(lua_State *L) {
	glProgramUniformMatrix3fv((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLboolean)lua_toboolean(L, 4), (GLfloat *)luaglew_checkarray_doublefloat(L, 5));
	return 0;
}

// void glProgramUniformMatrix3x2dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value)
static int luaglew_glProgramUniformMatrix3x2dv(lua_State *L) {
	glProgramUniformMatrix3x2dv((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLboolean)lua_toboolean(L, 4), (GLdouble *)luaglew_checkarray_doublefloat(L, 5));
	return 0;
}

// void glProgramUniformMatrix3x2fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value)
static int luaglew_glProgramUniformMatrix3x2fv(lua_State *L) {
	glProgramUniformMatrix3x2fv((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLboolean)lua_toboolean(L, 4), (GLfloat *)luaglew_checkarray_doublefloat(L, 5));
	return 0;
}

// void glProgramUniformMatrix3x4dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value)
static int luaglew_glProgramUniformMatrix3x4dv(lua_State *L) {
	glProgramUniformMatrix3x4dv((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLboolean)lua_toboolean(L, 4), (GLdouble *)luaglew_checkarray_doublefloat(L, 5));
	return 0;
}

// void glProgramUniformMatrix3x4fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value)
static int luaglew_glProgramUniformMatrix3x4fv(lua_State *L) {
	glProgramUniformMatrix3x4fv((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLboolean)lua_toboolean(L, 4), (GLfloat *)luaglew_checkarray_doublefloat(L, 5));
	return 0;
}

// void glProgramUniformMatrix4dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value)
static int luaglew_glProgramUniformMatrix4dv(lua_State *L) {
	glProgramUniformMatrix4dv((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLboolean)lua_toboolean(L, 4), (GLdouble *)luaglew_checkarray_doublefloat(L, 5));
	return 0;
}

// void glProgramUniformMatrix4fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value)
static int luaglew_glProgramUniformMatrix4fv(lua_State *L) {
	glProgramUniformMatrix4fv((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLboolean)lua_toboolean(L, 4), (GLfloat *)luaglew_checkarray_doublefloat(L, 5));
	return 0;
}

// void glProgramUniformMatrix4x2dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value)
static int luaglew_glProgramUniformMatrix4x2dv(lua_State *L) {
	glProgramUniformMatrix4x2dv((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLboolean)lua_toboolean(L, 4), (GLdouble *)luaglew_checkarray_doublefloat(L, 5));
	return 0;
}

// void glProgramUniformMatrix4x2fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value)
static int luaglew_glProgramUniformMatrix4x2fv(lua_State *L) {
	glProgramUniformMatrix4x2fv((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLboolean)lua_toboolean(L, 4), (GLfloat *)luaglew_checkarray_doublefloat(L, 5));
	return 0;
}

// void glProgramUniformMatrix4x3dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value)
static int luaglew_glProgramUniformMatrix4x3dv(lua_State *L) {
	glProgramUniformMatrix4x3dv((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLboolean)lua_toboolean(L, 4), (GLdouble *)luaglew_checkarray_doublefloat(L, 5));
	return 0;
}

// void glProgramUniformMatrix4x3fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value)
static int luaglew_glProgramUniformMatrix4x3fv(lua_State *L) {
	glProgramUniformMatrix4x3fv((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLboolean)lua_toboolean(L, 4), (GLfloat *)luaglew_checkarray_doublefloat(L, 5));
	return 0;
}

// void glUseProgramStages (GLuint pipeline, GLbitfield stages, GLuint program)
static int luaglew_glUseProgramStages(lua_State *L) {
	glUseProgramStages((GLuint)luaL_checkint(L, 1), (GLbitfield)luaL_checkint(L, 2), (GLuint)luaL_checkint(L, 3));
	return 0;
}

// void glValidateProgramPipeline (GLuint pipeline)
static int luaglew_glValidateProgramPipeline(lua_State *L) {
	glValidateProgramPipeline((GLuint)luaL_checkint(L, 1));
	return 0;
}

// void glGetVertexAttribLdv (GLuint index, GLenum pname, GLdouble* params)
static int luaglew_glGetVertexAttribLdv(lua_State *L) {
	glGetVertexAttribLdv((GLuint)luaL_checkint(L, 1), luaglew_checkenum(L, 2), (GLdouble *)luaglew_checkarray_doublefloat(L, 3));
	return 0;
}

// void glVertexAttribL1d (GLuint index, GLdouble x)
static int luaglew_glVertexAttribL1d(lua_State *L) {
	glVertexAttribL1d((GLuint)luaL_checkint(L, 1), (GLdouble)luaL_checknumber(L, 2));
	return 0;
}

// void glVertexAttribL1dv (GLuint index, const GLdouble* v)
static int luaglew_glVertexAttribL1dv(lua_State *L) {
	glVertexAttribL1dv((GLuint)luaL_checkint(L, 1), (GLdouble *)luaglew_checkarray_doublefloat(L, 2));
	return 0;
}

// void glVertexAttribL2d (GLuint index, GLdouble x, GLdouble y)
static int luaglew_glVertexAttribL2d(lua_State *L) {
	glVertexAttribL2d((GLuint)luaL_checkint(L, 1), (GLdouble)luaL_checknumber(L, 2), (GLdouble)luaL_checknumber(L, 3));
	return 0;
}

// void glVertexAttribL2dv (GLuint index, const GLdouble* v)
static int luaglew_glVertexAttribL2dv(lua_State *L) {
	glVertexAttribL2dv((GLuint)luaL_checkint(L, 1), (GLdouble *)luaglew_checkarray_doublefloat(L, 2));
	return 0;
}

// void glVertexAttribL3d (GLuint index, GLdouble x, GLdouble y, GLdouble z)
static int luaglew_glVertexAttribL3d(lua_State *L) {
	glVertexAttribL3d((GLuint)luaL_checkint(L, 1), (GLdouble)luaL_checknumber(L, 2), (GLdouble)luaL_checknumber(L, 3), (GLdouble)luaL_checknumber(L, 4));
	return 0;
}

// void glVertexAttribL3dv (GLuint index, const GLdouble* v)
static int luaglew_glVertexAttribL3dv(lua_State *L) {
	glVertexAttribL3dv((GLuint)luaL_checkint(L, 1), (GLdouble *)luaglew_checkarray_doublefloat(L, 2));
	return 0;
}

// void glVertexAttribL4d (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w)
static int luaglew_glVertexAttribL4d(lua_State *L) {
	glVertexAttribL4d((GLuint)luaL_checkint(L, 1), (GLdouble)luaL_checknumber(L, 2), (GLdouble)luaL_checknumber(L, 3), (GLdouble)luaL_checknumber(L, 4), (GLdouble)luaL_checknumber(L, 5));
	return 0;
}

// void glVertexAttribL4dv (GLuint index, const GLdouble* v)
static int luaglew_glVertexAttribL4dv(lua_State *L) {
	glVertexAttribL4dv((GLuint)luaL_checkint(L, 1), (GLdouble *)luaglew_checkarray_doublefloat(L, 2));
	return 0;
}

// void glVertexAttribLPointer (GLuint index, GLint size, GLenum type, GLsizei stride, const void* pointer)
static int luaglew_glVertexAttribLPointer(lua_State *L) {
	glVertexAttribLPointer((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), luaglew_checkenum(L, 3), (GLsizei)luaL_checklong(L, 4), luaglew_checkarray_int(L, 5));
	return 0;
}

// void glWeightbvARB (GLint size, GLbyte *weights)
static int luaglew_glWeightbvARB(lua_State *L) {
	glWeightbvARB((GLint)luaL_checkint(L, 1), (GLbyte *)luaglew_checkarray_byte(L, 2));
	return 0;
}

// void glWeightsvARB (GLint size, GLshort *weights)
static int luaglew_glWeightsvARB(lua_State *L) {
	glWeightsvARB((GLint)luaL_checkint(L, 1), (GLshort *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glWeightivARB (GLint size, GLint *weights)
static int luaglew_glWeightivARB(lua_State *L) {
	glWeightivARB((GLint)luaL_checkint(L, 1), (GLint *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glWeightfvARB (GLint size, GLfloat *weights)
static int luaglew_glWeightfvARB(lua_State *L) {
	glWeightfvARB((GLint)luaL_checkint(L, 1), (GLfloat *)luaglew_checkarray_doublefloat(L, 2));
	return 0;
}

// void glWeightdvARB (GLint size, GLdouble *weights)
static int luaglew_glWeightdvARB(lua_State *L) {
	glWeightdvARB((GLint)luaL_checkint(L, 1), (GLdouble *)luaglew_checkarray_doublefloat(L, 2));
	return 0;
}

// void glWeightubvARB (GLint size, GLubyte *weights)
static int luaglew_glWeightubvARB(lua_State *L) {
	glWeightubvARB((GLint)luaL_checkint(L, 1), (GLubyte *)luaglew_checkarray_ubyte(L, 2));
	return 0;
}

// void glWeightusvARB (GLint size, GLushort *weights)
static int luaglew_glWeightusvARB(lua_State *L) {
	glWeightusvARB((GLint)luaL_checkint(L, 1), (GLushort *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glWeightuivARB (GLint size, GLuint *weights)
static int luaglew_glWeightuivARB(lua_State *L) {
	glWeightuivARB((GLint)luaL_checkint(L, 1), (GLuint *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glWeightPointerARB (GLint size, GLenum type, GLsizei stride, GLvoid *pointer)
static int luaglew_glWeightPointerARB(lua_State *L) {
	glWeightPointerARB((GLint)luaL_checkint(L, 1), luaglew_checkenum(L, 2), (GLsizei)luaL_checklong(L, 3), luaglew_checkarray_int(L, 4));
	return 0;
}

// void glVertexBlendARB (GLint count)
static int luaglew_glVertexBlendARB(lua_State *L) {
	glVertexBlendARB((GLint)luaL_checkint(L, 1));
	return 0;
}

// void glTexBumpParameterivATI (GLenum pname, GLint *param)
static int luaglew_glTexBumpParameterivATI(lua_State *L) {
	glTexBumpParameterivATI(luaglew_checkenum(L, 1), (GLint *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glTexBumpParameterfvATI (GLenum pname, GLfloat *param)
static int luaglew_glTexBumpParameterfvATI(lua_State *L) {
	glTexBumpParameterfvATI(luaglew_checkenum(L, 1), (GLfloat *)luaglew_checkarray_doublefloat(L, 2));
	return 0;
}

// void glGetTexBumpParameterivATI (GLenum pname, GLint *param)
static int luaglew_glGetTexBumpParameterivATI(lua_State *L) {
	glGetTexBumpParameterivATI(luaglew_checkenum(L, 1), (GLint *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glGetTexBumpParameterfvATI (GLenum pname, GLfloat *param)
static int luaglew_glGetTexBumpParameterfvATI(lua_State *L) {
	glGetTexBumpParameterfvATI(luaglew_checkenum(L, 1), (GLfloat *)luaglew_checkarray_doublefloat(L, 2));
	return 0;
}

// void* glMapObjectBufferATI (GLuint buffer)
static int luaglew_glMapObjectBufferATI(lua_State *L) {
	void* return_value;
	return_value = glMapObjectBufferATI((GLuint)luaL_checkint(L, 1));
	luaglew_pusharray_void(L, return_value);
	return 1;
}

// void glUnmapObjectBufferATI (GLuint buffer)
static int luaglew_glUnmapObjectBufferATI(lua_State *L) {
	glUnmapObjectBufferATI((GLuint)luaL_checkint(L, 1));
	return 0;
}

// void glPNTrianglesiATI (GLenum pname, GLint param)
static int luaglew_glPNTrianglesiATI(lua_State *L) {
	glPNTrianglesiATI(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2));
	return 0;
}

// void glPNTrianglesfATI (GLenum pname, GLfloat param)
static int luaglew_glPNTrianglesfATI(lua_State *L) {
	glPNTrianglesfATI(luaglew_checkenum(L, 1), (GLfloat)luaL_checknumber(L, 2));
	return 0;
}

// void glStencilOpSeparateATI (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass)
static int luaglew_glStencilOpSeparateATI(lua_State *L) {
	glStencilOpSeparateATI(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), luaglew_checkenum(L, 3), luaglew_checkenum(L, 4));
	return 0;
}

// void glStencilFuncSeparateATI (GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask)
static int luaglew_glStencilFuncSeparateATI(lua_State *L) {
	glStencilFuncSeparateATI(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLint)luaL_checkint(L, 3), (GLuint)luaL_checkint(L, 4));
	return 0;
}

// void glClientActiveVertexStreamATI (GLenum stream)
static int luaglew_glClientActiveVertexStreamATI(lua_State *L) {
	glClientActiveVertexStreamATI(luaglew_checkenum(L, 1));
	return 0;
}

// void glVertexBlendEnviATI (GLenum pname, GLint param)
static int luaglew_glVertexBlendEnviATI(lua_State *L) {
	glVertexBlendEnviATI(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2));
	return 0;
}

// void glVertexBlendEnvfATI (GLenum pname, GLfloat param)
static int luaglew_glVertexBlendEnvfATI(lua_State *L) {
	glVertexBlendEnvfATI(luaglew_checkenum(L, 1), (GLfloat)luaL_checknumber(L, 2));
	return 0;
}

// void glVertexStream2sATI (GLenum stream, GLshort x, GLshort y)
static int luaglew_glVertexStream2sATI(lua_State *L) {
	glVertexStream2sATI(luaglew_checkenum(L, 1), (GLshort)luaL_checkinteger(L, 2), (GLshort)luaL_checkinteger(L, 3));
	return 0;
}

// void glVertexStream2svATI (GLenum stream, const GLshort *v)
static int luaglew_glVertexStream2svATI(lua_State *L) {
	glVertexStream2svATI(luaglew_checkenum(L, 1), (GLshort *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glVertexStream2iATI (GLenum stream, GLint x, GLint y)
static int luaglew_glVertexStream2iATI(lua_State *L) {
	glVertexStream2iATI(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3));
	return 0;
}

// void glVertexStream2ivATI (GLenum stream, const GLint *v)
static int luaglew_glVertexStream2ivATI(lua_State *L) {
	glVertexStream2ivATI(luaglew_checkenum(L, 1), (GLint *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glVertexStream2fATI (GLenum stream, GLfloat x, GLfloat y)
static int luaglew_glVertexStream2fATI(lua_State *L) {
	glVertexStream2fATI(luaglew_checkenum(L, 1), (GLfloat)luaL_checknumber(L, 2), (GLfloat)luaL_checknumber(L, 3));
	return 0;
}

// void glVertexStream2fvATI (GLenum stream, const GLfloat *v)
static int luaglew_glVertexStream2fvATI(lua_State *L) {
	glVertexStream2fvATI(luaglew_checkenum(L, 1), (GLfloat *)luaglew_checkarray_doublefloat(L, 2));
	return 0;
}

// void glVertexStream2dATI (GLenum stream, GLdouble x, GLdouble y)
static int luaglew_glVertexStream2dATI(lua_State *L) {
	glVertexStream2dATI(luaglew_checkenum(L, 1), (GLdouble)luaL_checknumber(L, 2), (GLdouble)luaL_checknumber(L, 3));
	return 0;
}

// void glVertexStream2dvATI (GLenum stream, const GLdouble *v)
static int luaglew_glVertexStream2dvATI(lua_State *L) {
	glVertexStream2dvATI(luaglew_checkenum(L, 1), (GLdouble *)luaglew_checkarray_doublefloat(L, 2));
	return 0;
}

// void glVertexStream3sATI (GLenum stream, GLshort x, GLshort y, GLshort z)
static int luaglew_glVertexStream3sATI(lua_State *L) {
	glVertexStream3sATI(luaglew_checkenum(L, 1), (GLshort)luaL_checkinteger(L, 2), (GLshort)luaL_checkinteger(L, 3), (GLshort)luaL_checkinteger(L, 4));
	return 0;
}

// void glVertexStream3svATI (GLenum stream, const GLshort *v)
static int luaglew_glVertexStream3svATI(lua_State *L) {
	glVertexStream3svATI(luaglew_checkenum(L, 1), (GLshort *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glVertexStream3iATI (GLenum stream, GLint x, GLint y, GLint z)
static int luaglew_glVertexStream3iATI(lua_State *L) {
	glVertexStream3iATI(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4));
	return 0;
}

// void glVertexStream3ivATI (GLenum stream, const GLint *v)
static int luaglew_glVertexStream3ivATI(lua_State *L) {
	glVertexStream3ivATI(luaglew_checkenum(L, 1), (GLint *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glVertexStream3fATI (GLenum stream, GLfloat x, GLfloat y, GLfloat z)
static int luaglew_glVertexStream3fATI(lua_State *L) {
	glVertexStream3fATI(luaglew_checkenum(L, 1), (GLfloat)luaL_checknumber(L, 2), (GLfloat)luaL_checknumber(L, 3), (GLfloat)luaL_checknumber(L, 4));
	return 0;
}

// void glVertexStream3fvATI (GLenum stream, const GLfloat *v)
static int luaglew_glVertexStream3fvATI(lua_State *L) {
	glVertexStream3fvATI(luaglew_checkenum(L, 1), (GLfloat *)luaglew_checkarray_doublefloat(L, 2));
	return 0;
}

// void glVertexStream3dATI (GLenum stream, GLdouble x, GLdouble y, GLdouble z)
static int luaglew_glVertexStream3dATI(lua_State *L) {
	glVertexStream3dATI(luaglew_checkenum(L, 1), (GLdouble)luaL_checknumber(L, 2), (GLdouble)luaL_checknumber(L, 3), (GLdouble)luaL_checknumber(L, 4));
	return 0;
}

// void glVertexStream3dvATI (GLenum stream, const GLdouble *v)
static int luaglew_glVertexStream3dvATI(lua_State *L) {
	glVertexStream3dvATI(luaglew_checkenum(L, 1), (GLdouble *)luaglew_checkarray_doublefloat(L, 2));
	return 0;
}

// void glVertexStream4sATI (GLenum stream, GLshort x, GLshort y, GLshort z, GLshort w)
static int luaglew_glVertexStream4sATI(lua_State *L) {
	glVertexStream4sATI(luaglew_checkenum(L, 1), (GLshort)luaL_checkinteger(L, 2), (GLshort)luaL_checkinteger(L, 3), (GLshort)luaL_checkinteger(L, 4), (GLshort)luaL_checkinteger(L, 5));
	return 0;
}

// void glVertexStream4svATI (GLenum stream, const GLshort *v)
static int luaglew_glVertexStream4svATI(lua_State *L) {
	glVertexStream4svATI(luaglew_checkenum(L, 1), (GLshort *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glVertexStream4iATI (GLenum stream, GLint x, GLint y, GLint z, GLint w)
static int luaglew_glVertexStream4iATI(lua_State *L) {
	glVertexStream4iATI(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4), (GLint)luaL_checkint(L, 5));
	return 0;
}

// void glVertexStream4ivATI (GLenum stream, const GLint *v)
static int luaglew_glVertexStream4ivATI(lua_State *L) {
	glVertexStream4ivATI(luaglew_checkenum(L, 1), (GLint *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glVertexStream4fATI (GLenum stream, GLfloat x, GLfloat y, GLfloat z, GLfloat w)
static int luaglew_glVertexStream4fATI(lua_State *L) {
	glVertexStream4fATI(luaglew_checkenum(L, 1), (GLfloat)luaL_checknumber(L, 2), (GLfloat)luaL_checknumber(L, 3), (GLfloat)luaL_checknumber(L, 4), (GLfloat)luaL_checknumber(L, 5));
	return 0;
}

// void glVertexStream4fvATI (GLenum stream, const GLfloat *v)
static int luaglew_glVertexStream4fvATI(lua_State *L) {
	glVertexStream4fvATI(luaglew_checkenum(L, 1), (GLfloat *)luaglew_checkarray_doublefloat(L, 2));
	return 0;
}

// void glVertexStream4dATI (GLenum stream, GLdouble x, GLdouble y, GLdouble z, GLdouble w)
static int luaglew_glVertexStream4dATI(lua_State *L) {
	glVertexStream4dATI(luaglew_checkenum(L, 1), (GLdouble)luaL_checknumber(L, 2), (GLdouble)luaL_checknumber(L, 3), (GLdouble)luaL_checknumber(L, 4), (GLdouble)luaL_checknumber(L, 5));
	return 0;
}

// void glVertexStream4dvATI (GLenum stream, const GLdouble *v)
static int luaglew_glVertexStream4dvATI(lua_State *L) {
	glVertexStream4dvATI(luaglew_checkenum(L, 1), (GLdouble *)luaglew_checkarray_doublefloat(L, 2));
	return 0;
}

// void glNormalStream3bATI (GLenum stream, GLbyte x, GLbyte y, GLbyte z)
static int luaglew_glNormalStream3bATI(lua_State *L) {
	glNormalStream3bATI(luaglew_checkenum(L, 1), (GLbyte)luaL_checknumber(L, 2), (GLbyte)luaL_checknumber(L, 3), (GLbyte)luaL_checknumber(L, 4));
	return 0;
}

// void glNormalStream3bvATI (GLenum stream, const GLbyte *v)
static int luaglew_glNormalStream3bvATI(lua_State *L) {
	glNormalStream3bvATI(luaglew_checkenum(L, 1), (GLbyte *)luaglew_checkarray_byte(L, 2));
	return 0;
}

// void glNormalStream3sATI (GLenum stream, GLshort x, GLshort y, GLshort z)
static int luaglew_glNormalStream3sATI(lua_State *L) {
	glNormalStream3sATI(luaglew_checkenum(L, 1), (GLshort)luaL_checkinteger(L, 2), (GLshort)luaL_checkinteger(L, 3), (GLshort)luaL_checkinteger(L, 4));
	return 0;
}

// void glNormalStream3svATI (GLenum stream, const GLshort *v)
static int luaglew_glNormalStream3svATI(lua_State *L) {
	glNormalStream3svATI(luaglew_checkenum(L, 1), (GLshort *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glNormalStream3iATI (GLenum stream, GLint x, GLint y, GLint z)
static int luaglew_glNormalStream3iATI(lua_State *L) {
	glNormalStream3iATI(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4));
	return 0;
}

// void glNormalStream3ivATI (GLenum stream, const GLint *v)
static int luaglew_glNormalStream3ivATI(lua_State *L) {
	glNormalStream3ivATI(luaglew_checkenum(L, 1), (GLint *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glNormalStream3fATI (GLenum stream, GLfloat x, GLfloat y, GLfloat z)
static int luaglew_glNormalStream3fATI(lua_State *L) {
	glNormalStream3fATI(luaglew_checkenum(L, 1), (GLfloat)luaL_checknumber(L, 2), (GLfloat)luaL_checknumber(L, 3), (GLfloat)luaL_checknumber(L, 4));
	return 0;
}

// void glNormalStream3fvATI (GLenum stream, const GLfloat *v)
static int luaglew_glNormalStream3fvATI(lua_State *L) {
	glNormalStream3fvATI(luaglew_checkenum(L, 1), (GLfloat *)luaglew_checkarray_doublefloat(L, 2));
	return 0;
}

// void glNormalStream3dATI (GLenum stream, GLdouble x, GLdouble y, GLdouble z)
static int luaglew_glNormalStream3dATI(lua_State *L) {
	glNormalStream3dATI(luaglew_checkenum(L, 1), (GLdouble)luaL_checknumber(L, 2), (GLdouble)luaL_checknumber(L, 3), (GLdouble)luaL_checknumber(L, 4));
	return 0;
}

// void glNormalStream3dvATI (GLenum stream, const GLdouble *v)
static int luaglew_glNormalStream3dvATI(lua_State *L) {
	glNormalStream3dvATI(luaglew_checkenum(L, 1), (GLdouble *)luaglew_checkarray_doublefloat(L, 2));
	return 0;
}

// void glUniformBufferEXT (GLuint program, GLint location, GLuint buffer)
static int luaglew_glUniformBufferEXT(lua_State *L) {
	glUniformBufferEXT((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLuint)luaL_checkint(L, 3));
	return 0;
}

// GLint glGetUniformBufferSizeEXT (GLuint program, GLint location)
static int luaglew_glGetUniformBufferSizeEXT(lua_State *L) {
	GLint return_value;
	return_value = glGetUniformBufferSizeEXT((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2));
	lua_pushinteger(L, return_value);
	return 1;
}

// GLintptr glGetUniformOffsetEXT (GLuint program, GLint location)
static int luaglew_glGetUniformOffsetEXT(lua_State *L) {
	GLintptr return_value;
	return_value = glGetUniformOffsetEXT((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2));
	lua_pushinteger(L, return_value);
	return 1;
}

// void glDepthBoundsEXT (GLclampd zmin, GLclampd zmax)
static int luaglew_glDepthBoundsEXT(lua_State *L) {
	glDepthBoundsEXT((GLclampd)luaL_checknumber(L, 1), (GLclampd)luaL_checknumber(L, 2));
	return 0;
}

// void glDrawArraysInstancedEXT (GLenum mode, GLint start, GLsizei count, GLsizei primcount)
static int luaglew_glDrawArraysInstancedEXT(lua_State *L) {
	glDrawArraysInstancedEXT(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLsizei)luaL_checklong(L, 4));
	return 0;
}

// void glDrawElementsInstancedEXT (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei primcount)
static int luaglew_glDrawElementsInstancedEXT(lua_State *L) {
	glDrawElementsInstancedEXT(luaglew_checkenum(L, 1), (GLsizei)luaL_checklong(L, 2), luaglew_checkenum(L, 3), (GLvoid *)luaglew_checkarray_void(L, 4), (GLsizei)luaL_checklong(L, 5));
	return 0;
}

// void glDrawRangeElementsEXT (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices)
static int luaglew_glDrawRangeElementsEXT(lua_State *L) {
	glDrawRangeElementsEXT(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2), (GLuint)luaL_checkint(L, 3), (GLsizei)luaL_checklong(L, 4), luaglew_checkenum(L, 5), (GLvoid *)luaglew_checkarray_void(L, 6));
	return 0;
}

// void glFogCoordfEXT (GLfloat coord)
static int luaglew_glFogCoordfEXT(lua_State *L) {
	glFogCoordfEXT((GLfloat)luaL_checknumber(L, 1));
	return 0;
}

// void glFogCoordfvEXT (const GLfloat *coord)
static int luaglew_glFogCoordfvEXT(lua_State *L) {
	glFogCoordfvEXT((GLfloat *)luaglew_checkarray_doublefloat(L, 1));
	return 0;
}

// void glFogCoorddEXT (GLdouble coord)
static int luaglew_glFogCoorddEXT(lua_State *L) {
	glFogCoorddEXT((GLdouble)luaL_checknumber(L, 1));
	return 0;
}

// void glFogCoorddvEXT (const GLdouble *coord)
static int luaglew_glFogCoorddvEXT(lua_State *L) {
	glFogCoorddvEXT((GLdouble *)luaglew_checkarray_doublefloat(L, 1));
	return 0;
}

// void glFogCoordPointerEXT (GLenum type, GLsizei stride, const GLvoid *pointer)
static int luaglew_glFogCoordPointerEXT(lua_State *L) {
	glFogCoordPointerEXT(luaglew_checkenum(L, 1), (GLsizei)luaL_checklong(L, 2), luaglew_checkarray_int(L, 3));
	return 0;
}

// void glProgramParameteriEXT (GLuint program, GLenum pname, GLint value)
static int luaglew_glProgramParameteriEXT(lua_State *L) {
	glProgramParameteriEXT((GLuint)luaL_checkint(L, 1), luaglew_checkenum(L, 2), (GLint)luaL_checkint(L, 3));
	return 0;
}

// void glFramebufferTextureEXT (GLenum target, GLenum attachment, GLuint texture, GLint level)
static int luaglew_glFramebufferTextureEXT(lua_State *L) {
	glFramebufferTextureEXT(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLuint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4));
	return 0;
}

// void glFramebufferTextureLayerEXT (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer)
static int luaglew_glFramebufferTextureLayerEXT(lua_State *L) {
	glFramebufferTextureLayerEXT(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLuint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4), (GLint)luaL_checkint(L, 5));
	return 0;
}

// void glFramebufferTextureFaceEXT (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face)
static int luaglew_glFramebufferTextureFaceEXT(lua_State *L) {
	glFramebufferTextureFaceEXT(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLuint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4), luaglew_checkenum(L, 5));
	return 0;
}

// void glProgramEnvParameters4fvEXT (GLenum target, GLuint index, GLsizei count, const GLfloat* params)
static int luaglew_glProgramEnvParameters4fvEXT(lua_State *L) {
	glProgramEnvParameters4fvEXT(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLfloat *)luaglew_checkarray_doublefloat(L, 4));
	return 0;
}

// void glProgramLocalParameters4fvEXT (GLenum target, GLuint index, GLsizei count, const GLfloat* params)
static int luaglew_glProgramLocalParameters4fvEXT(lua_State *L) {
	glProgramLocalParameters4fvEXT(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLfloat *)luaglew_checkarray_doublefloat(L, 4));
	return 0;
}

// void glGetUniformuivEXT (GLuint program, GLint location, GLuint *params)
static int luaglew_glGetUniformuivEXT(lua_State *L) {
	glGetUniformuivEXT((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLuint *)luaglew_checkarray_int(L, 3));
	return 0;
}

// void glBindFragDataLocationEXT (GLuint program, GLuint color, const GLchar *name)
static int luaglew_glBindFragDataLocationEXT(lua_State *L) {
	glBindFragDataLocationEXT((GLuint)luaL_checkint(L, 1), (GLuint)luaL_checkint(L, 2), (GLchar *)luaglew_checkarray_char(L, 3));
	return 0;
}

// GLint glGetFragDataLocationEXT (GLuint program, const GLchar *name)
static int luaglew_glGetFragDataLocationEXT(lua_State *L) {
	GLint return_value;
	return_value = glGetFragDataLocationEXT((GLuint)luaL_checkint(L, 1), (GLchar *)luaglew_checkarray_char(L, 2));
	lua_pushinteger(L, return_value);
	return 1;
}

// void glUniform1uiEXT (GLint location, GLuint v0)
static int luaglew_glUniform1uiEXT(lua_State *L) {
	glUniform1uiEXT((GLint)luaL_checkint(L, 1), (GLuint)luaL_checkint(L, 2));
	return 0;
}

// void glUniform2uiEXT (GLint location, GLuint v0, GLuint v1)
static int luaglew_glUniform2uiEXT(lua_State *L) {
	glUniform2uiEXT((GLint)luaL_checkint(L, 1), (GLuint)luaL_checkint(L, 2), (GLuint)luaL_checkint(L, 3));
	return 0;
}

// void glUniform3uiEXT (GLint location, GLuint v0, GLuint v1, GLuint v2)
static int luaglew_glUniform3uiEXT(lua_State *L) {
	glUniform3uiEXT((GLint)luaL_checkint(L, 1), (GLuint)luaL_checkint(L, 2), (GLuint)luaL_checkint(L, 3), (GLuint)luaL_checkint(L, 4));
	return 0;
}

// void glUniform4uiEXT (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3)
static int luaglew_glUniform4uiEXT(lua_State *L) {
	glUniform4uiEXT((GLint)luaL_checkint(L, 1), (GLuint)luaL_checkint(L, 2), (GLuint)luaL_checkint(L, 3), (GLuint)luaL_checkint(L, 4), (GLuint)luaL_checkint(L, 5));
	return 0;
}

// void glUniform1uivEXT (GLint location, GLsizei count, const GLuint *value)
static int luaglew_glUniform1uivEXT(lua_State *L) {
	glUniform1uivEXT((GLint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLuint *)luaglew_checkarray_int(L, 3));
	return 0;
}

// void glUniform2uivEXT (GLint location, GLsizei count, const GLuint *value)
static int luaglew_glUniform2uivEXT(lua_State *L) {
	glUniform2uivEXT((GLint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLuint *)luaglew_checkarray_int(L, 3));
	return 0;
}

// void glUniform3uivEXT (GLint location, GLsizei count, const GLuint *value)
static int luaglew_glUniform3uivEXT(lua_State *L) {
	glUniform3uivEXT((GLint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLuint *)luaglew_checkarray_int(L, 3));
	return 0;
}

// void glUniform4uivEXT (GLint location, GLsizei count, const GLuint *value)
static int luaglew_glUniform4uivEXT(lua_State *L) {
	glUniform4uivEXT((GLint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLuint *)luaglew_checkarray_int(L, 3));
	return 0;
}

// void glVertexAttribI1iEXT (GLuint index, GLint x)
static int luaglew_glVertexAttribI1iEXT(lua_State *L) {
	glVertexAttribI1iEXT((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2));
	return 0;
}

// void glVertexAttribI2iEXT (GLuint index, GLint x, GLint y)
static int luaglew_glVertexAttribI2iEXT(lua_State *L) {
	glVertexAttribI2iEXT((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3));
	return 0;
}

// void glVertexAttribI3iEXT (GLuint index, GLint x, GLint y, GLint z)
static int luaglew_glVertexAttribI3iEXT(lua_State *L) {
	glVertexAttribI3iEXT((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4));
	return 0;
}

// void glVertexAttribI4iEXT (GLuint index, GLint x, GLint y, GLint z, GLint w)
static int luaglew_glVertexAttribI4iEXT(lua_State *L) {
	glVertexAttribI4iEXT((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4), (GLint)luaL_checkint(L, 5));
	return 0;
}

// void glVertexAttribI1uiEXT (GLuint index, GLuint x)
static int luaglew_glVertexAttribI1uiEXT(lua_State *L) {
	glVertexAttribI1uiEXT((GLuint)luaL_checkint(L, 1), (GLuint)luaL_checkint(L, 2));
	return 0;
}

// void glVertexAttribI2uiEXT (GLuint index, GLuint x, GLuint y)
static int luaglew_glVertexAttribI2uiEXT(lua_State *L) {
	glVertexAttribI2uiEXT((GLuint)luaL_checkint(L, 1), (GLuint)luaL_checkint(L, 2), (GLuint)luaL_checkint(L, 3));
	return 0;
}

// void glVertexAttribI3uiEXT (GLuint index, GLuint x, GLuint y, GLuint z)
static int luaglew_glVertexAttribI3uiEXT(lua_State *L) {
	glVertexAttribI3uiEXT((GLuint)luaL_checkint(L, 1), (GLuint)luaL_checkint(L, 2), (GLuint)luaL_checkint(L, 3), (GLuint)luaL_checkint(L, 4));
	return 0;
}

// void glVertexAttribI4uiEXT (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w)
static int luaglew_glVertexAttribI4uiEXT(lua_State *L) {
	glVertexAttribI4uiEXT((GLuint)luaL_checkint(L, 1), (GLuint)luaL_checkint(L, 2), (GLuint)luaL_checkint(L, 3), (GLuint)luaL_checkint(L, 4), (GLuint)luaL_checkint(L, 5));
	return 0;
}

// void glVertexAttribI1ivEXT (GLuint index, const GLint *v)
static int luaglew_glVertexAttribI1ivEXT(lua_State *L) {
	glVertexAttribI1ivEXT((GLuint)luaL_checkint(L, 1), (GLint *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glVertexAttribI2ivEXT (GLuint index, const GLint *v)
static int luaglew_glVertexAttribI2ivEXT(lua_State *L) {
	glVertexAttribI2ivEXT((GLuint)luaL_checkint(L, 1), (GLint *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glVertexAttribI3ivEXT (GLuint index, const GLint *v)
static int luaglew_glVertexAttribI3ivEXT(lua_State *L) {
	glVertexAttribI3ivEXT((GLuint)luaL_checkint(L, 1), (GLint *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glVertexAttribI4ivEXT (GLuint index, const GLint *v)
static int luaglew_glVertexAttribI4ivEXT(lua_State *L) {
	glVertexAttribI4ivEXT((GLuint)luaL_checkint(L, 1), (GLint *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glVertexAttribI1uivEXT (GLuint index, const GLuint *v)
static int luaglew_glVertexAttribI1uivEXT(lua_State *L) {
	glVertexAttribI1uivEXT((GLuint)luaL_checkint(L, 1), (GLuint *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glVertexAttribI2uivEXT (GLuint index, const GLuint *v)
static int luaglew_glVertexAttribI2uivEXT(lua_State *L) {
	glVertexAttribI2uivEXT((GLuint)luaL_checkint(L, 1), (GLuint *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glVertexAttribI3uivEXT (GLuint index, const GLuint *v)
static int luaglew_glVertexAttribI3uivEXT(lua_State *L) {
	glVertexAttribI3uivEXT((GLuint)luaL_checkint(L, 1), (GLuint *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glVertexAttribI4uivEXT (GLuint index, const GLuint *v)
static int luaglew_glVertexAttribI4uivEXT(lua_State *L) {
	glVertexAttribI4uivEXT((GLuint)luaL_checkint(L, 1), (GLuint *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glVertexAttribI4bvEXT (GLuint index, const GLbyte *v)
static int luaglew_glVertexAttribI4bvEXT(lua_State *L) {
	glVertexAttribI4bvEXT((GLuint)luaL_checkint(L, 1), (GLbyte *)luaglew_checkarray_byte(L, 2));
	return 0;
}

// void glVertexAttribI4svEXT (GLuint index, const GLshort *v)
static int luaglew_glVertexAttribI4svEXT(lua_State *L) {
	glVertexAttribI4svEXT((GLuint)luaL_checkint(L, 1), (GLshort *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glVertexAttribI4ubvEXT (GLuint index, const GLubyte *v)
static int luaglew_glVertexAttribI4ubvEXT(lua_State *L) {
	glVertexAttribI4ubvEXT((GLuint)luaL_checkint(L, 1), (GLubyte *)luaglew_checkarray_ubyte(L, 2));
	return 0;
}

// void glVertexAttribI4usvEXT (GLuint index, const GLushort *v)
static int luaglew_glVertexAttribI4usvEXT(lua_State *L) {
	glVertexAttribI4usvEXT((GLuint)luaL_checkint(L, 1), (GLushort *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glVertexAttribIPointerEXT (GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)
static int luaglew_glVertexAttribIPointerEXT(lua_State *L) {
	glVertexAttribIPointerEXT((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), luaglew_checkenum(L, 3), (GLsizei)luaL_checklong(L, 4), luaglew_checkarray_int(L, 5));
	return 0;
}

// void glGetVertexAttribIivEXT (GLuint index, GLenum pname, GLint *params)
static int luaglew_glGetVertexAttribIivEXT(lua_State *L) {
	glGetVertexAttribIivEXT((GLuint)luaL_checkint(L, 1), luaglew_checkenum(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	return 0;
}

// void glGetVertexAttribIuivEXT (GLuint index, GLenum pname, GLuint *params)
static int luaglew_glGetVertexAttribIuivEXT(lua_State *L) {
	glGetVertexAttribIuivEXT((GLuint)luaL_checkint(L, 1), luaglew_checkenum(L, 2), (GLuint *)luaglew_checkarray_int(L, 3));
	return 0;
}

// void glPointParameterfEXT (GLenum pname, GLfloat param)
static int luaglew_glPointParameterfEXT(lua_State *L) {
	glPointParameterfEXT(luaglew_checkenum(L, 1), (GLfloat)luaL_checknumber(L, 2));
	return 0;
}

// void glPointParameterfvEXT (GLenum pname, const GLfloat* params)
static int luaglew_glPointParameterfvEXT(lua_State *L) {
	glPointParameterfvEXT(luaglew_checkenum(L, 1), (GLfloat *)luaglew_checkarray_doublefloat(L, 2));
	return 0;
}

// void glSecondaryColor3bEXT (GLbyte red, GLbyte green, GLbyte blue)
static int luaglew_glSecondaryColor3bEXT(lua_State *L) {
	glSecondaryColor3bEXT((GLbyte)luaL_checknumber(L, 1), (GLbyte)luaL_checknumber(L, 2), (GLbyte)luaL_checknumber(L, 3));
	return 0;
}

// void glSecondaryColor3bvEXT (const GLbyte *v)
static int luaglew_glSecondaryColor3bvEXT(lua_State *L) {
	glSecondaryColor3bvEXT((GLbyte *)luaglew_checkarray_byte(L, 1));
	return 0;
}

// void glSecondaryColor3dEXT (GLdouble red, GLdouble green, GLdouble blue)
static int luaglew_glSecondaryColor3dEXT(lua_State *L) {
	glSecondaryColor3dEXT((GLdouble)luaL_checknumber(L, 1), (GLdouble)luaL_checknumber(L, 2), (GLdouble)luaL_checknumber(L, 3));
	return 0;
}

// void glSecondaryColor3dvEXT (const GLdouble *v)
static int luaglew_glSecondaryColor3dvEXT(lua_State *L) {
	glSecondaryColor3dvEXT((GLdouble *)luaglew_checkarray_doublefloat(L, 1));
	return 0;
}

// void glSecondaryColor3fEXT (GLfloat red, GLfloat green, GLfloat blue)
static int luaglew_glSecondaryColor3fEXT(lua_State *L) {
	glSecondaryColor3fEXT((GLfloat)luaL_checknumber(L, 1), (GLfloat)luaL_checknumber(L, 2), (GLfloat)luaL_checknumber(L, 3));
	return 0;
}

// void glSecondaryColor3fvEXT (const GLfloat *v)
static int luaglew_glSecondaryColor3fvEXT(lua_State *L) {
	glSecondaryColor3fvEXT((GLfloat *)luaglew_checkarray_doublefloat(L, 1));
	return 0;
}

// void glSecondaryColor3iEXT (GLint red, GLint green, GLint blue)
static int luaglew_glSecondaryColor3iEXT(lua_State *L) {
	glSecondaryColor3iEXT((GLint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3));
	return 0;
}

// void glSecondaryColor3ivEXT (const GLint *v)
static int luaglew_glSecondaryColor3ivEXT(lua_State *L) {
	glSecondaryColor3ivEXT((GLint *)luaglew_checkarray_int(L, 1));
	return 0;
}

// void glSecondaryColor3sEXT (GLshort red, GLshort green, GLshort blue)
static int luaglew_glSecondaryColor3sEXT(lua_State *L) {
	glSecondaryColor3sEXT((GLshort)luaL_checkinteger(L, 1), (GLshort)luaL_checkinteger(L, 2), (GLshort)luaL_checkinteger(L, 3));
	return 0;
}

// void glSecondaryColor3svEXT (const GLshort *v)
static int luaglew_glSecondaryColor3svEXT(lua_State *L) {
	glSecondaryColor3svEXT((GLshort *)luaglew_checkarray_int(L, 1));
	return 0;
}

// void glSecondaryColor3ubEXT (GLubyte red, GLubyte green, GLubyte blue)
static int luaglew_glSecondaryColor3ubEXT(lua_State *L) {
	glSecondaryColor3ubEXT((GLubyte)luaL_checknumber(L, 1), (GLubyte)luaL_checknumber(L, 2), (GLubyte)luaL_checknumber(L, 3));
	return 0;
}

// void glSecondaryColor3ubvEXT (const GLubyte *v)
static int luaglew_glSecondaryColor3ubvEXT(lua_State *L) {
	glSecondaryColor3ubvEXT((GLubyte *)luaglew_checkarray_ubyte(L, 1));
	return 0;
}

// void glSecondaryColor3uiEXT (GLuint red, GLuint green, GLuint blue)
static int luaglew_glSecondaryColor3uiEXT(lua_State *L) {
	glSecondaryColor3uiEXT((GLuint)luaL_checkint(L, 1), (GLuint)luaL_checkint(L, 2), (GLuint)luaL_checkint(L, 3));
	return 0;
}

// void glSecondaryColor3uivEXT (const GLuint *v)
static int luaglew_glSecondaryColor3uivEXT(lua_State *L) {
	glSecondaryColor3uivEXT((GLuint *)luaglew_checkarray_int(L, 1));
	return 0;
}

// void glSecondaryColor3usEXT (GLushort red, GLushort green, GLushort blue)
static int luaglew_glSecondaryColor3usEXT(lua_State *L) {
	glSecondaryColor3usEXT((GLushort)luaL_checkinteger(L, 1), (GLushort)luaL_checkinteger(L, 2), (GLushort)luaL_checkinteger(L, 3));
	return 0;
}

// void glSecondaryColor3usvEXT (const GLushort *v)
static int luaglew_glSecondaryColor3usvEXT(lua_State *L) {
	glSecondaryColor3usvEXT((GLushort *)luaglew_checkarray_int(L, 1));
	return 0;
}

// void glSecondaryColorPointerEXT (GLint size, GLenum type, GLsizei stride, GLvoid *pointer)
static int luaglew_glSecondaryColorPointerEXT(lua_State *L) {
	glSecondaryColorPointerEXT((GLint)luaL_checkint(L, 1), luaglew_checkenum(L, 2), (GLsizei)luaL_checklong(L, 3), luaglew_checkarray_int(L, 4));
	return 0;
}

// void glTexBufferEXT (GLenum target, GLenum internalformat, GLuint buffer)
static int luaglew_glTexBufferEXT(lua_State *L) {
	glTexBufferEXT(luaglew_checkenum(L, 1), luaL_checkint(L, 2), (GLuint)luaL_checkint(L, 3));
	return 0;
}

// void glTexParameterIivEXT (GLenum target, GLenum pname, const GLint *params)
static int luaglew_glTexParameterIivEXT(lua_State *L) {
	glTexParameterIivEXT(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	return 0;
}

// void glTexParameterIuivEXT (GLenum target, GLenum pname, const GLuint *params)
static int luaglew_glTexParameterIuivEXT(lua_State *L) {
	glTexParameterIuivEXT(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLuint *)luaglew_checkarray_int(L, 3));
	return 0;
}

// void glGetTexParameterIivEXT (GLenum target, GLenum pname, GLint *params)
static int luaglew_glGetTexParameterIivEXT(lua_State *L) {
	glGetTexParameterIivEXT(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	return 0;
}

// void glGetTexParameterIuivEXT (GLenum target, GLenum pname, GLuint *params)
static int luaglew_glGetTexParameterIuivEXT(lua_State *L) {
	glGetTexParameterIuivEXT(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLuint *)luaglew_checkarray_int(L, 3));
	return 0;
}

// void glClearColorIiEXT (GLint red, GLint green, GLint blue, GLint alpha)
static int luaglew_glClearColorIiEXT(lua_State *L) {
	glClearColorIiEXT((GLint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4));
	return 0;
}

// void glClearColorIuiEXT (GLuint red, GLuint green, GLuint blue, GLuint alpha)
static int luaglew_glClearColorIuiEXT(lua_State *L) {
	glClearColorIuiEXT((GLuint)luaL_checkint(L, 1), (GLuint)luaL_checkint(L, 2), (GLuint)luaL_checkint(L, 3), (GLuint)luaL_checkint(L, 4));
	return 0;
}

// void glGetQueryObjecti64vEXT (GLuint id, GLenum pname, GLint64EXT *params)
static int luaglew_glGetQueryObjecti64vEXT(lua_State *L) {
	glGetQueryObjecti64vEXT((GLuint)luaL_checkint(L, 1), luaglew_checkenum(L, 2), (GLint64 *)luaglew_checkarray_int(L, 3));
	return 0;
}

// void glGetQueryObjectui64vEXT (GLuint id, GLenum pname, GLuint64EXT *params)
static int luaglew_glGetQueryObjectui64vEXT(lua_State *L) {
	glGetQueryObjectui64vEXT((GLuint)luaL_checkint(L, 1), luaglew_checkenum(L, 2), (GLuint64EXT *)luaglew_checkarray_int(L, 3));
	return 0;
}

// void glBeginVertexShaderEXT (void)
static int luaglew_glBeginVertexShaderEXT(lua_State *L) {
	glBeginVertexShaderEXT();
	return 0;
}

// void glEndVertexShaderEXT (void)
static int luaglew_glEndVertexShaderEXT(lua_State *L) {
	glEndVertexShaderEXT();
	return 0;
}

// void glBindVertexShaderEXT (GLuint id)
static int luaglew_glBindVertexShaderEXT(lua_State *L) {
	glBindVertexShaderEXT((GLuint)luaL_checkint(L, 1));
	return 0;
}

// GLuint glGenVertexShadersEXT (GLuint range)
static int luaglew_glGenVertexShadersEXT(lua_State *L) {
	GLuint return_value;
	return_value = glGenVertexShadersEXT((GLuint)luaL_checkint(L, 1));
	lua_pushinteger(L, return_value);
	return 1;
}

// void glDeleteVertexShaderEXT (GLuint id)
static int luaglew_glDeleteVertexShaderEXT(lua_State *L) {
	glDeleteVertexShaderEXT((GLuint)luaL_checkint(L, 1));
	return 0;
}

// void glShaderOp1EXT (GLenum op, GLuint res, GLuint arg1)
static int luaglew_glShaderOp1EXT(lua_State *L) {
	glShaderOp1EXT(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2), (GLuint)luaL_checkint(L, 3));
	return 0;
}

// void glShaderOp2EXT (GLenum op, GLuint res, GLuint arg1, GLuint arg2)
static int luaglew_glShaderOp2EXT(lua_State *L) {
	glShaderOp2EXT(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2), (GLuint)luaL_checkint(L, 3), (GLuint)luaL_checkint(L, 4));
	return 0;
}

// void glShaderOp3EXT (GLenum op, GLuint res, GLuint arg1, GLuint arg2, GLuint arg3)
static int luaglew_glShaderOp3EXT(lua_State *L) {
	glShaderOp3EXT(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2), (GLuint)luaL_checkint(L, 3), (GLuint)luaL_checkint(L, 4), (GLuint)luaL_checkint(L, 5));
	return 0;
}

// void glSwizzleEXT (GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW)
static int luaglew_glSwizzleEXT(lua_State *L) {
	glSwizzleEXT((GLuint)luaL_checkint(L, 1), (GLuint)luaL_checkint(L, 2), luaglew_checkenum(L, 3), luaglew_checkenum(L, 4), luaglew_checkenum(L, 5), luaglew_checkenum(L, 6));
	return 0;
}

// void glWriteMaskEXT (GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW)
static int luaglew_glWriteMaskEXT(lua_State *L) {
	glWriteMaskEXT((GLuint)luaL_checkint(L, 1), (GLuint)luaL_checkint(L, 2), luaglew_checkenum(L, 3), luaglew_checkenum(L, 4), luaglew_checkenum(L, 5), luaglew_checkenum(L, 6));
	return 0;
}

// void glInsertComponentEXT (GLuint res, GLuint src, GLuint num)
static int luaglew_glInsertComponentEXT(lua_State *L) {
	glInsertComponentEXT((GLuint)luaL_checkint(L, 1), (GLuint)luaL_checkint(L, 2), (GLuint)luaL_checkint(L, 3));
	return 0;
}

// void glExtractComponentEXT (GLuint res, GLuint src, GLuint num)
static int luaglew_glExtractComponentEXT(lua_State *L) {
	glExtractComponentEXT((GLuint)luaL_checkint(L, 1), (GLuint)luaL_checkint(L, 2), (GLuint)luaL_checkint(L, 3));
	return 0;
}

// GLuint glGenSymbolsEXT (GLenum dataType, GLenum storageType, GLenum range, GLuint components)
static int luaglew_glGenSymbolsEXT(lua_State *L) {
	GLuint return_value;
	return_value = glGenSymbolsEXT(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), luaglew_checkenum(L, 3), (GLuint)luaL_checkint(L, 4));
	lua_pushinteger(L, return_value);
	return 1;
}

// void glSetInvariantEXT (GLuint id, GLenum type, GLvoid *addr)
static int luaglew_glSetInvariantEXT(lua_State *L) {
	glSetInvariantEXT((GLuint)luaL_checkint(L, 1), luaglew_checkenum(L, 2), (GLvoid *)luaglew_checkarray_void(L, 3));
	return 0;
}

// void glSetLocalConstantEXT (GLuint id, GLenum type, GLvoid *addr)
static int luaglew_glSetLocalConstantEXT(lua_State *L) {
	glSetLocalConstantEXT((GLuint)luaL_checkint(L, 1), luaglew_checkenum(L, 2), (GLvoid *)luaglew_checkarray_void(L, 3));
	return 0;
}

// void glVariantbvEXT (GLuint id, GLbyte *addr)
static int luaglew_glVariantbvEXT(lua_State *L) {
	glVariantbvEXT((GLuint)luaL_checkint(L, 1), (GLbyte *)luaglew_checkarray_byte(L, 2));
	return 0;
}

// void glVariantsvEXT (GLuint id, GLshort *addr)
static int luaglew_glVariantsvEXT(lua_State *L) {
	glVariantsvEXT((GLuint)luaL_checkint(L, 1), (GLshort *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glVariantivEXT (GLuint id, GLint *addr)
static int luaglew_glVariantivEXT(lua_State *L) {
	glVariantivEXT((GLuint)luaL_checkint(L, 1), (GLint *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glVariantfvEXT (GLuint id, GLfloat *addr)
static int luaglew_glVariantfvEXT(lua_State *L) {
	glVariantfvEXT((GLuint)luaL_checkint(L, 1), (GLfloat *)luaglew_checkarray_doublefloat(L, 2));
	return 0;
}

// void glVariantdvEXT (GLuint id, GLdouble *addr)
static int luaglew_glVariantdvEXT(lua_State *L) {
	glVariantdvEXT((GLuint)luaL_checkint(L, 1), (GLdouble *)luaglew_checkarray_doublefloat(L, 2));
	return 0;
}

// void glVariantubvEXT (GLuint id, GLubyte *addr)
static int luaglew_glVariantubvEXT(lua_State *L) {
	glVariantubvEXT((GLuint)luaL_checkint(L, 1), (GLubyte *)luaglew_checkarray_ubyte(L, 2));
	return 0;
}

// void glVariantusvEXT (GLuint id, GLushort *addr)
static int luaglew_glVariantusvEXT(lua_State *L) {
	glVariantusvEXT((GLuint)luaL_checkint(L, 1), (GLushort *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glVariantuivEXT (GLuint id, GLuint *addr)
static int luaglew_glVariantuivEXT(lua_State *L) {
	glVariantuivEXT((GLuint)luaL_checkint(L, 1), (GLuint *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glVariantPointerEXT (GLuint id, GLenum type, GLuint stride, GLvoid *addr)
static int luaglew_glVariantPointerEXT(lua_State *L) {
	glVariantPointerEXT((GLuint)luaL_checkint(L, 1), luaglew_checkenum(L, 2), (GLuint)luaL_checkint(L, 3), (GLvoid *)luaglew_checkarray_void(L, 4));
	return 0;
}

// void glEnableVariantClientStateEXT (GLuint id)
static int luaglew_glEnableVariantClientStateEXT(lua_State *L) {
	glEnableVariantClientStateEXT((GLuint)luaL_checkint(L, 1));
	return 0;
}

// void glDisableVariantClientStateEXT (GLuint id)
static int luaglew_glDisableVariantClientStateEXT(lua_State *L) {
	glDisableVariantClientStateEXT((GLuint)luaL_checkint(L, 1));
	return 0;
}

// GLuint glBindLightParameterEXT (GLenum light, GLenum value)
static int luaglew_glBindLightParameterEXT(lua_State *L) {
	GLuint return_value;
	return_value = glBindLightParameterEXT(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2));
	lua_pushinteger(L, return_value);
	return 1;
}

// GLuint glBindMaterialParameterEXT (GLenum face, GLenum value)
static int luaglew_glBindMaterialParameterEXT(lua_State *L) {
	GLuint return_value;
	return_value = glBindMaterialParameterEXT(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2));
	lua_pushinteger(L, return_value);
	return 1;
}

// GLuint glBindTexGenParameterEXT (GLenum unit, GLenum coord, GLenum value)
static int luaglew_glBindTexGenParameterEXT(lua_State *L) {
	GLuint return_value;
	return_value = glBindTexGenParameterEXT(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), luaglew_checkenum(L, 3));
	lua_pushinteger(L, return_value);
	return 1;
}

// GLuint glBindTextureUnitParameterEXT (GLenum unit, GLenum value)
static int luaglew_glBindTextureUnitParameterEXT(lua_State *L) {
	GLuint return_value;
	return_value = glBindTextureUnitParameterEXT(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2));
	lua_pushinteger(L, return_value);
	return 1;
}

// GLuint glBindParameterEXT (GLenum value)
static int luaglew_glBindParameterEXT(lua_State *L) {
	GLuint return_value;
	return_value = glBindParameterEXT(luaglew_checkenum(L, 1));
	lua_pushinteger(L, return_value);
	return 1;
}

// GLboolean glIsVariantEnabledEXT (GLuint id, GLenum cap)
static int luaglew_glIsVariantEnabledEXT(lua_State *L) {
	GLboolean return_value;
	return_value = glIsVariantEnabledEXT((GLuint)luaL_checkint(L, 1), luaglew_checkenum(L, 2));
	lua_pushboolean(L, return_value);
	return 1;
}

// void glGetVariantBooleanvEXT (GLuint id, GLenum value, GLboolean *data)
static int luaglew_glGetVariantBooleanvEXT(lua_State *L) {
	glGetVariantBooleanvEXT((GLuint)luaL_checkint(L, 1), luaglew_checkenum(L, 2), (GLboolean *)luaglew_checkarray_boolean(L, 3));
	return 0;
}

// void glGetVariantIntegervEXT (GLuint id, GLenum value, GLint *data)
static int luaglew_glGetVariantIntegervEXT(lua_State *L) {
	glGetVariantIntegervEXT((GLuint)luaL_checkint(L, 1), luaglew_checkenum(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	return 0;
}

// void glGetVariantFloatvEXT (GLuint id, GLenum value, GLfloat *data)
static int luaglew_glGetVariantFloatvEXT(lua_State *L) {
	glGetVariantFloatvEXT((GLuint)luaL_checkint(L, 1), luaglew_checkenum(L, 2), (GLfloat *)luaglew_checkarray_doublefloat(L, 3));
	return 0;
}

// void glGetVariantPointervEXT (GLuint id, GLenum value, GLvoid **data)
static int luaglew_glGetVariantPointervEXT(lua_State *L) {
	glGetVariantPointervEXT((GLuint)luaL_checkint(L, 1), luaglew_checkenum(L, 2), luaglew_checkarray_2void(L, 3));
	return 0;
}

// void glGetInvariantBooleanvEXT (GLuint id, GLenum value, GLboolean *data)
static int luaglew_glGetInvariantBooleanvEXT(lua_State *L) {
	glGetInvariantBooleanvEXT((GLuint)luaL_checkint(L, 1), luaglew_checkenum(L, 2), (GLboolean *)luaglew_checkarray_boolean(L, 3));
	return 0;
}

// void glGetInvariantIntegervEXT (GLuint id, GLenum value, GLint *data)
static int luaglew_glGetInvariantIntegervEXT(lua_State *L) {
	glGetInvariantIntegervEXT((GLuint)luaL_checkint(L, 1), luaglew_checkenum(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	return 0;
}

// void glGetInvariantFloatvEXT (GLuint id, GLenum value, GLfloat *data)
static int luaglew_glGetInvariantFloatvEXT(lua_State *L) {
	glGetInvariantFloatvEXT((GLuint)luaL_checkint(L, 1), luaglew_checkenum(L, 2), (GLfloat *)luaglew_checkarray_doublefloat(L, 3));
	return 0;
}

// void glGetLocalConstantBooleanvEXT (GLuint id, GLenum value, GLboolean *data)
static int luaglew_glGetLocalConstantBooleanvEXT(lua_State *L) {
	glGetLocalConstantBooleanvEXT((GLuint)luaL_checkint(L, 1), luaglew_checkenum(L, 2), (GLboolean *)luaglew_checkarray_boolean(L, 3));
	return 0;
}

// void glGetLocalConstantIntegervEXT (GLuint id, GLenum value, GLint *data)
static int luaglew_glGetLocalConstantIntegervEXT(lua_State *L) {
	glGetLocalConstantIntegervEXT((GLuint)luaL_checkint(L, 1), luaglew_checkenum(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	return 0;
}

// void glGetLocalConstantFloatvEXT (GLuint id, GLenum value, GLfloat *data)
static int luaglew_glGetLocalConstantFloatvEXT(lua_State *L) {
	glGetLocalConstantFloatvEXT((GLuint)luaL_checkint(L, 1), luaglew_checkenum(L, 2), (GLfloat *)luaglew_checkarray_doublefloat(L, 3));
	return 0;
}

// GLuint glBufferRegionEnabledEXT (void)
static int luaglew_glBufferRegionEnabledEXT(lua_State *L) {
	GLuint return_value;
	return_value = glBufferRegionEnabledEXT();
	lua_pushinteger(L, return_value);
	return 1;
}

// GLuint glNewBufferRegionEXT (GLenum region)
static int luaglew_glNewBufferRegionEXT(lua_State *L) {
	GLuint return_value;
	return_value = glNewBufferRegionEXT(luaglew_checkenum(L, 1));
	lua_pushinteger(L, return_value);
	return 1;
}

// void glDeleteBufferRegionEXT (GLenum region)
static int luaglew_glDeleteBufferRegionEXT(lua_State *L) {
	glDeleteBufferRegionEXT(luaglew_checkenum(L, 1));
	return 0;
}

// void glReadBufferRegionEXT (GLuint region, GLint x, GLint y, GLsizei width, GLsizei height)
static int luaglew_glReadBufferRegionEXT(lua_State *L) {
	glReadBufferRegionEXT((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3), (GLsizei)luaL_checklong(L, 4), (GLsizei)luaL_checklong(L, 5));
	return 0;
}

// void glDrawBufferRegionEXT (GLuint region, GLint x, GLint y, GLsizei width, GLsizei height, GLint xDest, GLint yDest)
static int luaglew_glDrawBufferRegionEXT(lua_State *L) {
	glDrawBufferRegionEXT((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3), (GLsizei)luaL_checklong(L, 4), (GLsizei)luaL_checklong(L, 5), (GLint)luaL_checkint(L, 6), (GLint)luaL_checkint(L, 7));
	return 0;
}

// void glDepthRangedNV (GLdouble zNear, GLdouble zFar)
static int luaglew_glDepthRangedNV(lua_State *L) {
	glDepthRangedNV((GLdouble)luaL_checknumber(L, 1), (GLdouble)luaL_checknumber(L, 2));
	return 0;
}

// void glClearDepthdNV (GLdouble depth)
static int luaglew_glClearDepthdNV(lua_State *L) {
	glClearDepthdNV((GLdouble)luaL_checknumber(L, 1));
	return 0;
}

// void glDepthBoundsdNV (GLdouble zmin, GLdouble zmax)
static int luaglew_glDepthBoundsdNV(lua_State *L) {
	glDepthBoundsdNV((GLdouble)luaL_checknumber(L, 1), (GLdouble)luaL_checknumber(L, 2));
	return 0;
}

// void glRenderbufferStorageMultisampleCoverageNV (GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height)
static int luaglew_glRenderbufferStorageMultisampleCoverageNV(lua_State *L) {
	glRenderbufferStorageMultisampleCoverageNV(luaglew_checkenum(L, 1), (GLsizei)luaL_checklong(L, 2), (GLsizei)luaL_checklong(L, 3), luaL_checkint(L, 4), (GLsizei)luaL_checklong(L, 5), (GLsizei)luaL_checklong(L, 6));
	return 0;
}

// void glProgramVertexLimitNV (GLenum target, GLint limit)
static int luaglew_glProgramVertexLimitNV(lua_State *L) {
	glProgramVertexLimitNV(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2));
	return 0;
}

// void glProgramLocalParameterI4iNV (GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w)
static int luaglew_glProgramLocalParameterI4iNV(lua_State *L) {
	glProgramLocalParameterI4iNV(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4), (GLint)luaL_checkint(L, 5), (GLint)luaL_checkint(L, 6));
	return 0;
}

// void glProgramLocalParameterI4ivNV (GLenum target, GLuint index, const GLint *params)
static int luaglew_glProgramLocalParameterI4ivNV(lua_State *L) {
	glProgramLocalParameterI4ivNV(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	return 0;
}

// void glProgramLocalParametersI4ivNV (GLenum target, GLuint index, GLsizei count, const GLint *params)
static int luaglew_glProgramLocalParametersI4ivNV(lua_State *L) {
	glProgramLocalParametersI4ivNV(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLint *)luaglew_checkarray_int(L, 4));
	return 0;
}

// void glProgramLocalParameterI4uiNV (GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w)
static int luaglew_glProgramLocalParameterI4uiNV(lua_State *L) {
	glProgramLocalParameterI4uiNV(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2), (GLuint)luaL_checkint(L, 3), (GLuint)luaL_checkint(L, 4), (GLuint)luaL_checkint(L, 5), (GLuint)luaL_checkint(L, 6));
	return 0;
}

// void glProgramLocalParameterI4uivNV (GLenum target, GLuint index, const GLuint *params)
static int luaglew_glProgramLocalParameterI4uivNV(lua_State *L) {
	glProgramLocalParameterI4uivNV(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2), (GLuint *)luaglew_checkarray_int(L, 3));
	return 0;
}

// void glProgramLocalParametersI4uivNV (GLenum target, GLuint index, GLsizei count, const GLuint *params)
static int luaglew_glProgramLocalParametersI4uivNV(lua_State *L) {
	glProgramLocalParametersI4uivNV(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLuint *)luaglew_checkarray_int(L, 4));
	return 0;
}

// void glProgramEnvParameterI4iNV (GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w)
static int luaglew_glProgramEnvParameterI4iNV(lua_State *L) {
	glProgramEnvParameterI4iNV(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4), (GLint)luaL_checkint(L, 5), (GLint)luaL_checkint(L, 6));
	return 0;
}

// void glProgramEnvParameterI4ivNV (GLenum target, GLuint index, const GLint *params)
static int luaglew_glProgramEnvParameterI4ivNV(lua_State *L) {
	glProgramEnvParameterI4ivNV(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	return 0;
}

// void glProgramEnvParametersI4ivNV (GLenum target, GLuint index, GLsizei count, const GLint *params)
static int luaglew_glProgramEnvParametersI4ivNV(lua_State *L) {
	glProgramEnvParametersI4ivNV(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLint *)luaglew_checkarray_int(L, 4));
	return 0;
}

// void glProgramEnvParameterI4uiNV (GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w)
static int luaglew_glProgramEnvParameterI4uiNV(lua_State *L) {
	glProgramEnvParameterI4uiNV(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2), (GLuint)luaL_checkint(L, 3), (GLuint)luaL_checkint(L, 4), (GLuint)luaL_checkint(L, 5), (GLuint)luaL_checkint(L, 6));
	return 0;
}

// void glProgramEnvParameterI4uivNV (GLenum target, GLuint index, const GLuint *params)
static int luaglew_glProgramEnvParameterI4uivNV(lua_State *L) {
	glProgramEnvParameterI4uivNV(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2), (GLuint *)luaglew_checkarray_int(L, 3));
	return 0;
}

// void glProgramEnvParametersI4uivNV (GLenum target, GLuint index, GLsizei count, const GLuint *params)
static int luaglew_glProgramEnvParametersI4uivNV(lua_State *L) {
	glProgramEnvParametersI4uivNV(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLuint *)luaglew_checkarray_int(L, 4));
	return 0;
}

// void glProgramBufferParametersfvNV (GLenum target, GLuint buffer, GLuint index, GLsizei count, const GLfloat *params)
static int luaglew_glProgramBufferParametersfvNV(lua_State *L) {
	glProgramBufferParametersfvNV(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2), (GLuint)luaL_checkint(L, 3), (GLsizei)luaL_checklong(L, 4), (GLfloat *)luaglew_checkarray_doublefloat(L, 5));
	return 0;
}

// void glProgramBufferParametersIivNV (GLenum target, GLuint buffer, GLuint index, GLsizei count, const GLint *params)
static int luaglew_glProgramBufferParametersIivNV(lua_State *L) {
	glProgramBufferParametersIivNV(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2), (GLuint)luaL_checkint(L, 3), (GLsizei)luaL_checklong(L, 4), (GLint *)luaglew_checkarray_int(L, 5));
	return 0;
}

// void glProgramBufferParametersIuivNV (GLenum target, GLuint buffer, GLuint index, GLsizei count, const GLuint *params)
static int luaglew_glProgramBufferParametersIuivNV(lua_State *L) {
	glProgramBufferParametersIuivNV(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2), (GLuint)luaL_checkint(L, 3), (GLsizei)luaL_checklong(L, 4), (GLuint *)luaglew_checkarray_int(L, 5));
	return 0;
}

// void glGetVideoi64vNV (GLuint video_slot, GLenum pname, GLint64EXT* params)
static int luaglew_glGetVideoi64vNV(lua_State *L) {
	glGetVideoi64vNV((GLuint)luaL_checkint(L, 1), luaglew_checkenum(L, 2), (GLint64 *)luaglew_checkarray_int(L, 3));
	return 0;
}

// void glGetVideoivNV (GLuint video_slot, GLenum pname, GLint* params)
static int luaglew_glGetVideoivNV(lua_State *L) {
	glGetVideoivNV((GLuint)luaL_checkint(L, 1), luaglew_checkenum(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	return 0;
}

// void glGetVideoui64vNV (GLuint video_slot, GLenum pname, GLuint64EXT* params)
static int luaglew_glGetVideoui64vNV(lua_State *L) {
	glGetVideoui64vNV((GLuint)luaL_checkint(L, 1), luaglew_checkenum(L, 2), (GLuint64EXT *)luaglew_checkarray_int(L, 3));
	return 0;
}

// void glGetVideouivNV (GLuint video_slot, GLenum pname, GLuint* params)
static int luaglew_glGetVideouivNV(lua_State *L) {
	glGetVideouivNV((GLuint)luaL_checkint(L, 1), luaglew_checkenum(L, 2), (GLuint *)luaglew_checkarray_int(L, 3));
	return 0;
}

// void glPresentFrameDualFillNV (GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLenum target1, GLuint fill1, GLenum target2, GLuint fill2, GLenum target3, GLuint fill3)
static int luaglew_glPresentFrameDualFillNV(lua_State *L) {
	glPresentFrameDualFillNV((GLuint)luaL_checkint(L, 1), (GLuint)luaL_checkint(L, 2), (GLuint)luaL_checkint(L, 3), (GLuint)luaL_checkint(L, 4), luaglew_checkenum(L, 5), luaglew_checkenum(L, 6), (GLuint)luaL_checkint(L, 7), luaglew_checkenum(L, 8), (GLuint)luaL_checkint(L, 9), luaglew_checkenum(L, 10), (GLuint)luaL_checkint(L, 11), luaglew_checkenum(L, 12), (GLuint)luaL_checkint(L, 13));
	return 0;
}

// void glPresentFrameKeyedNV (GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLuint key0, GLenum target1, GLuint fill1, GLuint key1)
static int luaglew_glPresentFrameKeyedNV(lua_State *L) {
	glPresentFrameKeyedNV((GLuint)luaL_checkint(L, 1), (GLuint)luaL_checkint(L, 2), (GLuint)luaL_checkint(L, 3), (GLuint)luaL_checkint(L, 4), luaglew_checkenum(L, 5), luaglew_checkenum(L, 6), (GLuint)luaL_checkint(L, 7), (GLuint)luaL_checkint(L, 8), luaglew_checkenum(L, 9), (GLuint)luaL_checkint(L, 10), (GLuint)luaL_checkint(L, 11));
	return 0;
}

// void glBeginTransformFeedbackNV (GLenum primitiveMode)
static int luaglew_glBeginTransformFeedbackNV(lua_State *L) {
	glBeginTransformFeedbackNV(luaglew_checkenum(L, 1));
	return 0;
}

// void glEndTransformFeedbackNV (void)
static int luaglew_glEndTransformFeedbackNV(lua_State *L) {
	glEndTransformFeedbackNV();
	return 0;
}

// void glTransformFeedbackAttribsNV (GLuint count, const GLint *attribs, GLenum bufferMode)
static int luaglew_glTransformFeedbackAttribsNV(lua_State *L) {
	glTransformFeedbackAttribsNV((GLuint)luaL_checkint(L, 1), (GLint *)luaglew_checkarray_int(L, 2), luaglew_checkenum(L, 3));
	return 0;
}

// void glBindBufferRangeNV (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size)
static int luaglew_glBindBufferRangeNV(lua_State *L) {
	glBindBufferRangeNV(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2), (GLuint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4), (GLsizei)luaL_checklong(L, 5));
	return 0;
}

// void glBindBufferOffsetNV (GLenum target, GLuint index, GLuint buffer, GLintptr offset)
static int luaglew_glBindBufferOffsetNV(lua_State *L) {
	glBindBufferOffsetNV(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2), (GLuint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4));
	return 0;
}

// void glBindBufferBaseNV (GLenum target, GLuint index, GLuint buffer)
static int luaglew_glBindBufferBaseNV(lua_State *L) {
	glBindBufferBaseNV(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2), (GLuint)luaL_checkint(L, 3));
	return 0;
}

// void glTransformFeedbackVaryingsNV (GLuint program, GLsizei count, const GLint *locations, GLenum bufferMode)
static int luaglew_glTransformFeedbackVaryingsNV(lua_State *L) {
	glTransformFeedbackVaryingsNV((GLuint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLint *)luaglew_checkarray_int(L, 3), luaglew_checkenum(L, 4));
	return 0;
}

// void glActiveVaryingNV (GLuint program, const GLchar *name)
static int luaglew_glActiveVaryingNV(lua_State *L) {
	glActiveVaryingNV((GLuint)luaL_checkint(L, 1), (GLchar *)luaglew_checkarray_char(L, 2));
	return 0;
}

// GLint glGetVaryingLocationNV (GLuint program, const GLchar *name)
static int luaglew_glGetVaryingLocationNV(lua_State *L) {
	GLint return_value;
	return_value = glGetVaryingLocationNV((GLuint)luaL_checkint(L, 1), (GLchar *)luaglew_checkarray_char(L, 2));
	lua_pushinteger(L, return_value);
	return 1;
}

// void glGetActiveVaryingNV (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name)
static int luaglew_glGetActiveVaryingNV(lua_State *L) {
	glGetActiveVaryingNV((GLuint)luaL_checkint(L, 1), (GLuint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLsizei *)luaglew_checkarray_int(L, 4), (GLsizei *)luaglew_checkarray_int(L, 5), luaglew_checkarray_enum(L, 6), (GLchar *)luaglew_checkarray_char(L, 7));
	return 0;
}

// void glGetTransformFeedbackVaryingNV (GLuint program, GLuint index, GLint *location)
static int luaglew_glGetTransformFeedbackVaryingNV(lua_State *L) {
	glGetTransformFeedbackVaryingNV((GLuint)luaL_checkint(L, 1), (GLuint)luaL_checkint(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	return 0;
}

// void glVDPAUFiniNV (void)
static int luaglew_glVDPAUFiniNV(lua_State *L) {
	glVDPAUFiniNV();
	return 0;
}

// void glVDPAUGetSurfaceivNV (GLvdpauSurfaceNV surface, GLenum pname, GLsizei bufSize, GLsizei* length, GLint *values)
static int luaglew_glVDPAUGetSurfaceivNV(lua_State *L) {
	glVDPAUGetSurfaceivNV(**check nespracovany typ GLvdpauSurfaceNV **, luaglew_checkenum(L, 2), (GLsizei)luaL_checklong(L, 3), (GLsizei *)luaglew_checkarray_int(L, 4), (GLint *)luaglew_checkarray_int(L, 5));
	return 0;
}

// void glVDPAUInitNV (const void* vdpDevice, const GLvoid*getProcAddress)
static int luaglew_glVDPAUInitNV(lua_State *L) {
	glVDPAUInitNV(luaglew_checkarray_void(L, 1), (GLvoid *)luaglew_checkarray_void(L, 2));
	return 0;
}

// void glVDPAUIsSurfaceNV (GLvdpauSurfaceNV surface)
static int luaglew_glVDPAUIsSurfaceNV(lua_State *L) {
	glVDPAUIsSurfaceNV(**check nespracovany typ GLvdpauSurfaceNV **);
	return 0;
}

// void glVDPAUMapSurfacesNV (GLsizei numSurfaces, const GLvdpauSurfaceNV* surfaces)
static int luaglew_glVDPAUMapSurfacesNV(lua_State *L) {
	glVDPAUMapSurfacesNV((GLsizei)luaL_checklong(L, 1), luaglew_checkarray_GLvdpauSurfaceNV(L, 2));
	return 0;
}

// GLvdpauSurfaceNV glVDPAURegisterOutputSurfaceNV (const void* vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames)
static int luaglew_glVDPAURegisterOutputSurfaceNV(lua_State *L) {
	GLvdpauSurfaceNV return_value;
	return_value = glVDPAURegisterOutputSurfaceNV(luaglew_checkarray_void(L, 1), luaglew_checkenum(L, 2), (GLsizei)luaL_checklong(L, 3), (GLuint *)luaglew_checkarray_int(L, 4));
	push( ** nespracovany typ GLvdpauSurfaceNV ** );
	return 1;
}

// GLvdpauSurfaceNV glVDPAURegisterVideoSurfaceNV (const void* vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames)
static int luaglew_glVDPAURegisterVideoSurfaceNV(lua_State *L) {
	GLvdpauSurfaceNV return_value;
	return_value = glVDPAURegisterVideoSurfaceNV(luaglew_checkarray_void(L, 1), luaglew_checkenum(L, 2), (GLsizei)luaL_checklong(L, 3), (GLuint *)luaglew_checkarray_int(L, 4));
	push( ** nespracovany typ GLvdpauSurfaceNV ** );
	return 1;
}

// void glVDPAUSurfaceAccessNV (GLvdpauSurfaceNV surface, GLenum access)
static int luaglew_glVDPAUSurfaceAccessNV(lua_State *L) {
	glVDPAUSurfaceAccessNV(**check nespracovany typ GLvdpauSurfaceNV **, luaglew_checkenum(L, 2));
	return 0;
}

// void glVDPAUUnmapSurfacesNV (GLsizei numSurface, const GLvdpauSurfaceNV* surfaces)
static int luaglew_glVDPAUUnmapSurfacesNV(lua_State *L) {
	glVDPAUUnmapSurfacesNV((GLsizei)luaL_checklong(L, 1), luaglew_checkarray_GLvdpauSurfaceNV(L, 2));
	return 0;
}

// void glVDPAUUnregisterSurfaceNV (GLvdpauSurfaceNV surface)
static int luaglew_glVDPAUUnregisterSurfaceNV(lua_State *L) {
	glVDPAUUnregisterSurfaceNV(**check nespracovany typ GLvdpauSurfaceNV **);
	return 0;
}

// void glReadVideoPixelsSUN (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid* pixels)
static int luaglew_glReadVideoPixelsSUN(lua_State *L) {
	glReadVideoPixelsSUN((GLint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLsizei)luaL_checklong(L, 4), luaglew_checkenum(L, 5), luaglew_checkenum(L, 6), (GLvoid *)luaglew_checkarray_void(L, 7));
	return 0;
}

// void glDrawRangeElements (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices)
static int luaglew_glDrawRangeElements(lua_State *L) {
	glDrawRangeElements(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2), (GLuint)luaL_checkint(L, 3), (GLsizei)luaL_checklong(L, 4), luaglew_checkenum(L, 5), (GLvoid *)luaglew_checkarray_void(L, 6));
	return 0;
}

// void glTexImage3D (GLenum target, GLint level, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels)
static int luaglew_glTexImage3D(lua_State *L) {
	glTexImage3D(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3), (GLsizei)luaL_checklong(L, 4), (GLsizei)luaL_checklong(L, 5), (GLsizei)luaL_checklong(L, 6), (GLint)luaL_checkint(L, 7), luaglew_checkenum(L, 8), luaglew_checkenum(L, 9), (GLvoid *)luaglew_checkarray_void(L, 10));
	return 0;
}

// void glTexSubImage3D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels)
static int luaglew_glTexSubImage3D(lua_State *L) {
	glTexSubImage3D(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4), (GLint)luaL_checkint(L, 5), (GLsizei)luaL_checklong(L, 6), (GLsizei)luaL_checklong(L, 7), (GLsizei)luaL_checklong(L, 8), luaglew_checkenum(L, 9), luaglew_checkenum(L, 10), (GLvoid *)luaglew_checkarray_void(L, 11));
	return 0;
}

// void glCopyTexSubImage3D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height)
static int luaglew_glCopyTexSubImage3D(lua_State *L) {
	glCopyTexSubImage3D(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4), (GLint)luaL_checkint(L, 5), (GLint)luaL_checkint(L, 6), (GLint)luaL_checkint(L, 7), (GLsizei)luaL_checklong(L, 8), (GLsizei)luaL_checklong(L, 9));
	return 0;
}

// void glActiveTexture (GLenum texture)
static int luaglew_glActiveTexture(lua_State *L) {
	glActiveTexture(luaglew_checkenum(L, 1));
	return 0;
}

// void glClientActiveTexture (GLenum texture)
static int luaglew_glClientActiveTexture(lua_State *L) {
	glClientActiveTexture(luaglew_checkenum(L, 1));
	return 0;
}

// void glCompressedTexImage1D (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data)
static int luaglew_glCompressedTexImage1D(lua_State *L) {
	glCompressedTexImage1D(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), luaL_checkint(L, 3), (GLsizei)luaL_checklong(L, 4), (GLint)luaL_checkint(L, 5), (GLsizei)luaL_checklong(L, 6), (GLvoid *)luaglew_checkarray_void(L, 7));
	return 0;
}

// void glCompressedTexImage2D (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data)
static int luaglew_glCompressedTexImage2D(lua_State *L) {
	glCompressedTexImage2D(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), luaL_checkint(L, 3), (GLsizei)luaL_checklong(L, 4), (GLsizei)luaL_checklong(L, 5), (GLint)luaL_checkint(L, 6), (GLsizei)luaL_checklong(L, 7), (GLvoid *)luaglew_checkarray_void(L, 8));
	return 0;
}

// void glCompressedTexImage3D (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data)
static int luaglew_glCompressedTexImage3D(lua_State *L) {
	glCompressedTexImage3D(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), luaL_checkint(L, 3), (GLsizei)luaL_checklong(L, 4), (GLsizei)luaL_checklong(L, 5), (GLsizei)luaL_checklong(L, 6), (GLint)luaL_checkint(L, 7), (GLsizei)luaL_checklong(L, 8), (GLvoid *)luaglew_checkarray_void(L, 9));
	return 0;
}

// void glCompressedTexSubImage1D (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data)
static int luaglew_glCompressedTexSubImage1D(lua_State *L) {
	glCompressedTexSubImage1D(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3), (GLsizei)luaL_checklong(L, 4), luaglew_checkenum(L, 5), (GLsizei)luaL_checklong(L, 6), (GLvoid *)luaglew_checkarray_void(L, 7));
	return 0;
}

// void glCompressedTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data)
static int luaglew_glCompressedTexSubImage2D(lua_State *L) {
	glCompressedTexSubImage2D(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4), (GLsizei)luaL_checklong(L, 5), (GLsizei)luaL_checklong(L, 6), luaglew_checkenum(L, 7), (GLsizei)luaL_checklong(L, 8), (GLvoid *)luaglew_checkarray_void(L, 9));
	return 0;
}

// void glCompressedTexSubImage3D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data)
static int luaglew_glCompressedTexSubImage3D(lua_State *L) {
	glCompressedTexSubImage3D(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4), (GLint)luaL_checkint(L, 5), (GLsizei)luaL_checklong(L, 6), (GLsizei)luaL_checklong(L, 7), (GLsizei)luaL_checklong(L, 8), luaglew_checkenum(L, 9), (GLsizei)luaL_checklong(L, 10), (GLvoid *)luaglew_checkarray_void(L, 11));
	return 0;
}

// void glGetCompressedTexImage (GLenum target, GLint lod, GLvoid *img)
static int luaglew_glGetCompressedTexImage(lua_State *L) {
	glGetCompressedTexImage(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), (GLvoid *)luaglew_checkarray_void(L, 3));
	return 0;
}

// void glLoadTransposeMatrixd (const GLdouble m[16])
static int luaglew_glLoadTransposeMatrixd(lua_State *L) {
	glLoadTransposeMatrixd((GLdouble)luaL_checknumber(L, 1));
	return 0;
}

// void glLoadTransposeMatrixf (const GLfloat m[16])
static int luaglew_glLoadTransposeMatrixf(lua_State *L) {
	glLoadTransposeMatrixf((GLfloat)luaL_checknumber(L, 1));
	return 0;
}

// void glMultTransposeMatrixd (const GLdouble m[16])
static int luaglew_glMultTransposeMatrixd(lua_State *L) {
	glMultTransposeMatrixd((GLdouble)luaL_checknumber(L, 1));
	return 0;
}

// void glMultTransposeMatrixf (const GLfloat m[16])
static int luaglew_glMultTransposeMatrixf(lua_State *L) {
	glMultTransposeMatrixf((GLfloat)luaL_checknumber(L, 1));
	return 0;
}

// void glMultiTexCoord1d (GLenum target, GLdouble s)
static int luaglew_glMultiTexCoord1d(lua_State *L) {
	glMultiTexCoord1d(luaglew_checkenum(L, 1), (GLdouble)luaL_checknumber(L, 2));
	return 0;
}

// void glMultiTexCoord1dv (GLenum target, const GLdouble *v)
static int luaglew_glMultiTexCoord1dv(lua_State *L) {
	glMultiTexCoord1dv(luaglew_checkenum(L, 1), (GLdouble *)luaglew_checkarray_doublefloat(L, 2));
	return 0;
}

// void glMultiTexCoord1f (GLenum target, GLfloat s)
static int luaglew_glMultiTexCoord1f(lua_State *L) {
	glMultiTexCoord1f(luaglew_checkenum(L, 1), (GLfloat)luaL_checknumber(L, 2));
	return 0;
}

// void glMultiTexCoord1fv (GLenum target, const GLfloat *v)
static int luaglew_glMultiTexCoord1fv(lua_State *L) {
	glMultiTexCoord1fv(luaglew_checkenum(L, 1), (GLfloat *)luaglew_checkarray_doublefloat(L, 2));
	return 0;
}

// void glMultiTexCoord1i (GLenum target, GLint s)
static int luaglew_glMultiTexCoord1i(lua_State *L) {
	glMultiTexCoord1i(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2));
	return 0;
}

// void glMultiTexCoord1iv (GLenum target, const GLint *v)
static int luaglew_glMultiTexCoord1iv(lua_State *L) {
	glMultiTexCoord1iv(luaglew_checkenum(L, 1), (GLint *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glMultiTexCoord1s (GLenum target, GLshort s)
static int luaglew_glMultiTexCoord1s(lua_State *L) {
	glMultiTexCoord1s(luaglew_checkenum(L, 1), (GLshort)luaL_checkinteger(L, 2));
	return 0;
}

// void glMultiTexCoord1sv (GLenum target, const GLshort *v)
static int luaglew_glMultiTexCoord1sv(lua_State *L) {
	glMultiTexCoord1sv(luaglew_checkenum(L, 1), (GLshort *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glMultiTexCoord2d (GLenum target, GLdouble s, GLdouble t)
static int luaglew_glMultiTexCoord2d(lua_State *L) {
	glMultiTexCoord2d(luaglew_checkenum(L, 1), (GLdouble)luaL_checknumber(L, 2), (GLdouble)luaL_checknumber(L, 3));
	return 0;
}

// void glMultiTexCoord2dv (GLenum target, const GLdouble *v)
static int luaglew_glMultiTexCoord2dv(lua_State *L) {
	glMultiTexCoord2dv(luaglew_checkenum(L, 1), (GLdouble *)luaglew_checkarray_doublefloat(L, 2));
	return 0;
}

// void glMultiTexCoord2f (GLenum target, GLfloat s, GLfloat t)
static int luaglew_glMultiTexCoord2f(lua_State *L) {
	glMultiTexCoord2f(luaglew_checkenum(L, 1), (GLfloat)luaL_checknumber(L, 2), (GLfloat)luaL_checknumber(L, 3));
	return 0;
}

// void glMultiTexCoord2fv (GLenum target, const GLfloat *v)
static int luaglew_glMultiTexCoord2fv(lua_State *L) {
	glMultiTexCoord2fv(luaglew_checkenum(L, 1), (GLfloat *)luaglew_checkarray_doublefloat(L, 2));
	return 0;
}

// void glMultiTexCoord2i (GLenum target, GLint s, GLint t)
static int luaglew_glMultiTexCoord2i(lua_State *L) {
	glMultiTexCoord2i(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3));
	return 0;
}

// void glMultiTexCoord2iv (GLenum target, const GLint *v)
static int luaglew_glMultiTexCoord2iv(lua_State *L) {
	glMultiTexCoord2iv(luaglew_checkenum(L, 1), (GLint *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glMultiTexCoord2s (GLenum target, GLshort s, GLshort t)
static int luaglew_glMultiTexCoord2s(lua_State *L) {
	glMultiTexCoord2s(luaglew_checkenum(L, 1), (GLshort)luaL_checkinteger(L, 2), (GLshort)luaL_checkinteger(L, 3));
	return 0;
}

// void glMultiTexCoord2sv (GLenum target, const GLshort *v)
static int luaglew_glMultiTexCoord2sv(lua_State *L) {
	glMultiTexCoord2sv(luaglew_checkenum(L, 1), (GLshort *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glMultiTexCoord3d (GLenum target, GLdouble s, GLdouble t, GLdouble r)
static int luaglew_glMultiTexCoord3d(lua_State *L) {
	glMultiTexCoord3d(luaglew_checkenum(L, 1), (GLdouble)luaL_checknumber(L, 2), (GLdouble)luaL_checknumber(L, 3), (GLdouble)luaL_checknumber(L, 4));
	return 0;
}

// void glMultiTexCoord3dv (GLenum target, const GLdouble *v)
static int luaglew_glMultiTexCoord3dv(lua_State *L) {
	glMultiTexCoord3dv(luaglew_checkenum(L, 1), (GLdouble *)luaglew_checkarray_doublefloat(L, 2));
	return 0;
}

// void glMultiTexCoord3f (GLenum target, GLfloat s, GLfloat t, GLfloat r)
static int luaglew_glMultiTexCoord3f(lua_State *L) {
	glMultiTexCoord3f(luaglew_checkenum(L, 1), (GLfloat)luaL_checknumber(L, 2), (GLfloat)luaL_checknumber(L, 3), (GLfloat)luaL_checknumber(L, 4));
	return 0;
}

// void glMultiTexCoord3fv (GLenum target, const GLfloat *v)
static int luaglew_glMultiTexCoord3fv(lua_State *L) {
	glMultiTexCoord3fv(luaglew_checkenum(L, 1), (GLfloat *)luaglew_checkarray_doublefloat(L, 2));
	return 0;
}

// void glMultiTexCoord3i (GLenum target, GLint s, GLint t, GLint r)
static int luaglew_glMultiTexCoord3i(lua_State *L) {
	glMultiTexCoord3i(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4));
	return 0;
}

// void glMultiTexCoord3iv (GLenum target, const GLint *v)
static int luaglew_glMultiTexCoord3iv(lua_State *L) {
	glMultiTexCoord3iv(luaglew_checkenum(L, 1), (GLint *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glMultiTexCoord3s (GLenum target, GLshort s, GLshort t, GLshort r)
static int luaglew_glMultiTexCoord3s(lua_State *L) {
	glMultiTexCoord3s(luaglew_checkenum(L, 1), (GLshort)luaL_checkinteger(L, 2), (GLshort)luaL_checkinteger(L, 3), (GLshort)luaL_checkinteger(L, 4));
	return 0;
}

// void glMultiTexCoord3sv (GLenum target, const GLshort *v)
static int luaglew_glMultiTexCoord3sv(lua_State *L) {
	glMultiTexCoord3sv(luaglew_checkenum(L, 1), (GLshort *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glMultiTexCoord4d (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q)
static int luaglew_glMultiTexCoord4d(lua_State *L) {
	glMultiTexCoord4d(luaglew_checkenum(L, 1), (GLdouble)luaL_checknumber(L, 2), (GLdouble)luaL_checknumber(L, 3), (GLdouble)luaL_checknumber(L, 4), (GLdouble)luaL_checknumber(L, 5));
	return 0;
}

// void glMultiTexCoord4dv (GLenum target, const GLdouble *v)
static int luaglew_glMultiTexCoord4dv(lua_State *L) {
	glMultiTexCoord4dv(luaglew_checkenum(L, 1), (GLdouble *)luaglew_checkarray_doublefloat(L, 2));
	return 0;
}

// void glMultiTexCoord4f (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q)
static int luaglew_glMultiTexCoord4f(lua_State *L) {
	glMultiTexCoord4f(luaglew_checkenum(L, 1), (GLfloat)luaL_checknumber(L, 2), (GLfloat)luaL_checknumber(L, 3), (GLfloat)luaL_checknumber(L, 4), (GLfloat)luaL_checknumber(L, 5));
	return 0;
}

// void glMultiTexCoord4fv (GLenum target, const GLfloat *v)
static int luaglew_glMultiTexCoord4fv(lua_State *L) {
	glMultiTexCoord4fv(luaglew_checkenum(L, 1), (GLfloat *)luaglew_checkarray_doublefloat(L, 2));
	return 0;
}

// void glMultiTexCoord4i (GLenum target, GLint s, GLint t, GLint r, GLint q)
static int luaglew_glMultiTexCoord4i(lua_State *L) {
	glMultiTexCoord4i(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4), (GLint)luaL_checkint(L, 5));
	return 0;
}

// void glMultiTexCoord4iv (GLenum target, const GLint *v)
static int luaglew_glMultiTexCoord4iv(lua_State *L) {
	glMultiTexCoord4iv(luaglew_checkenum(L, 1), (GLint *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glMultiTexCoord4s (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q)
static int luaglew_glMultiTexCoord4s(lua_State *L) {
	glMultiTexCoord4s(luaglew_checkenum(L, 1), (GLshort)luaL_checkinteger(L, 2), (GLshort)luaL_checkinteger(L, 3), (GLshort)luaL_checkinteger(L, 4), (GLshort)luaL_checkinteger(L, 5));
	return 0;
}

// void glMultiTexCoord4sv (GLenum target, const GLshort *v)
static int luaglew_glMultiTexCoord4sv(lua_State *L) {
	glMultiTexCoord4sv(luaglew_checkenum(L, 1), (GLshort *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glSampleCoverage (GLclampf value, GLboolean invert)
static int luaglew_glSampleCoverage(lua_State *L) {
	glSampleCoverage((GLclampf)luaL_checknumber(L, 1), (GLboolean)lua_toboolean(L, 2));
	return 0;
}

// void glBlendEquation (GLenum mode)
static int luaglew_glBlendEquation(lua_State *L) {
	glBlendEquation(luaglew_checkenum(L, 1));
	return 0;
}

// void glBlendColor (GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha)
static int luaglew_glBlendColor(lua_State *L) {
	glBlendColor((GLclampf)luaL_checknumber(L, 1), (GLclampf)luaL_checknumber(L, 2), (GLclampf)luaL_checknumber(L, 3), (GLclampf)luaL_checknumber(L, 4));
	return 0;
}

// void glFogCoordf (GLfloat coord)
static int luaglew_glFogCoordf(lua_State *L) {
	glFogCoordf((GLfloat)luaL_checknumber(L, 1));
	return 0;
}

// void glFogCoordfv (const GLfloat *coord)
static int luaglew_glFogCoordfv(lua_State *L) {
	glFogCoordfv((GLfloat *)luaglew_checkarray_doublefloat(L, 1));
	return 0;
}

// void glFogCoordd (GLdouble coord)
static int luaglew_glFogCoordd(lua_State *L) {
	glFogCoordd((GLdouble)luaL_checknumber(L, 1));
	return 0;
}

// void glFogCoorddv (const GLdouble *coord)
static int luaglew_glFogCoorddv(lua_State *L) {
	glFogCoorddv((GLdouble *)luaglew_checkarray_doublefloat(L, 1));
	return 0;
}

// void glFogCoordPointer (GLenum type, GLsizei stride, const GLvoid *pointer)
static int luaglew_glFogCoordPointer(lua_State *L) {
	glFogCoordPointer(luaglew_checkenum(L, 1), (GLsizei)luaL_checklong(L, 2), luaglew_checkarray_int(L, 3));
	return 0;
}

// void glMultiDrawArrays (GLenum mode, GLint *first, GLsizei *count, GLsizei primcount)
static int luaglew_glMultiDrawArrays(lua_State *L) {
	glMultiDrawArrays(luaglew_checkenum(L, 1), (GLint *)luaglew_checkarray_int(L, 2), (GLsizei *)luaglew_checkarray_int(L, 3), (GLsizei)luaL_checklong(L, 4));
	return 0;
}

// void glMultiDrawElements (GLenum mode, GLsizei *count, GLenum type, const GLvoid **indices, GLsizei primcount)
static int luaglew_glMultiDrawElements(lua_State *L) {
	glMultiDrawElements(luaglew_checkenum(L, 1), (GLsizei *)luaglew_checkarray_int(L, 2), luaglew_checkenum(L, 3), luaglew_checkarray_2void(L, 4), (GLsizei)luaL_checklong(L, 5));
	return 0;
}

// void glPointParameteri (GLenum pname, GLint param)
static int luaglew_glPointParameteri(lua_State *L) {
	glPointParameteri(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2));
	return 0;
}

// void glPointParameteriv (GLenum pname, const GLint *params)
static int luaglew_glPointParameteriv(lua_State *L) {
	glPointParameteriv(luaglew_checkenum(L, 1), (GLint *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glPointParameterf (GLenum pname, GLfloat param)
static int luaglew_glPointParameterf(lua_State *L) {
	glPointParameterf(luaglew_checkenum(L, 1), (GLfloat)luaL_checknumber(L, 2));
	return 0;
}

// void glPointParameterfv (GLenum pname, const GLfloat *params)
static int luaglew_glPointParameterfv(lua_State *L) {
	glPointParameterfv(luaglew_checkenum(L, 1), (GLfloat *)luaglew_checkarray_doublefloat(L, 2));
	return 0;
}

// void glSecondaryColor3b (GLbyte red, GLbyte green, GLbyte blue)
static int luaglew_glSecondaryColor3b(lua_State *L) {
	glSecondaryColor3b((GLbyte)luaL_checknumber(L, 1), (GLbyte)luaL_checknumber(L, 2), (GLbyte)luaL_checknumber(L, 3));
	return 0;
}

// void glSecondaryColor3bv (const GLbyte *v)
static int luaglew_glSecondaryColor3bv(lua_State *L) {
	glSecondaryColor3bv((GLbyte *)luaglew_checkarray_byte(L, 1));
	return 0;
}

// void glSecondaryColor3d (GLdouble red, GLdouble green, GLdouble blue)
static int luaglew_glSecondaryColor3d(lua_State *L) {
	glSecondaryColor3d((GLdouble)luaL_checknumber(L, 1), (GLdouble)luaL_checknumber(L, 2), (GLdouble)luaL_checknumber(L, 3));
	return 0;
}

// void glSecondaryColor3dv (const GLdouble *v)
static int luaglew_glSecondaryColor3dv(lua_State *L) {
	glSecondaryColor3dv((GLdouble *)luaglew_checkarray_doublefloat(L, 1));
	return 0;
}

// void glSecondaryColor3f (GLfloat red, GLfloat green, GLfloat blue)
static int luaglew_glSecondaryColor3f(lua_State *L) {
	glSecondaryColor3f((GLfloat)luaL_checknumber(L, 1), (GLfloat)luaL_checknumber(L, 2), (GLfloat)luaL_checknumber(L, 3));
	return 0;
}

// void glSecondaryColor3fv (const GLfloat *v)
static int luaglew_glSecondaryColor3fv(lua_State *L) {
	glSecondaryColor3fv((GLfloat *)luaglew_checkarray_doublefloat(L, 1));
	return 0;
}

// void glSecondaryColor3i (GLint red, GLint green, GLint blue)
static int luaglew_glSecondaryColor3i(lua_State *L) {
	glSecondaryColor3i((GLint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3));
	return 0;
}

// void glSecondaryColor3iv (const GLint *v)
static int luaglew_glSecondaryColor3iv(lua_State *L) {
	glSecondaryColor3iv((GLint *)luaglew_checkarray_int(L, 1));
	return 0;
}

// void glSecondaryColor3s (GLshort red, GLshort green, GLshort blue)
static int luaglew_glSecondaryColor3s(lua_State *L) {
	glSecondaryColor3s((GLshort)luaL_checkinteger(L, 1), (GLshort)luaL_checkinteger(L, 2), (GLshort)luaL_checkinteger(L, 3));
	return 0;
}

// void glSecondaryColor3sv (const GLshort *v)
static int luaglew_glSecondaryColor3sv(lua_State *L) {
	glSecondaryColor3sv((GLshort *)luaglew_checkarray_int(L, 1));
	return 0;
}

// void glSecondaryColor3ub (GLubyte red, GLubyte green, GLubyte blue)
static int luaglew_glSecondaryColor3ub(lua_State *L) {
	glSecondaryColor3ub((GLubyte)luaL_checknumber(L, 1), (GLubyte)luaL_checknumber(L, 2), (GLubyte)luaL_checknumber(L, 3));
	return 0;
}

// void glSecondaryColor3ubv (const GLubyte *v)
static int luaglew_glSecondaryColor3ubv(lua_State *L) {
	glSecondaryColor3ubv((GLubyte *)luaglew_checkarray_ubyte(L, 1));
	return 0;
}

// void glSecondaryColor3ui (GLuint red, GLuint green, GLuint blue)
static int luaglew_glSecondaryColor3ui(lua_State *L) {
	glSecondaryColor3ui((GLuint)luaL_checkint(L, 1), (GLuint)luaL_checkint(L, 2), (GLuint)luaL_checkint(L, 3));
	return 0;
}

// void glSecondaryColor3uiv (const GLuint *v)
static int luaglew_glSecondaryColor3uiv(lua_State *L) {
	glSecondaryColor3uiv((GLuint *)luaglew_checkarray_int(L, 1));
	return 0;
}

// void glSecondaryColor3us (GLushort red, GLushort green, GLushort blue)
static int luaglew_glSecondaryColor3us(lua_State *L) {
	glSecondaryColor3us((GLushort)luaL_checkinteger(L, 1), (GLushort)luaL_checkinteger(L, 2), (GLushort)luaL_checkinteger(L, 3));
	return 0;
}

// void glSecondaryColor3usv (const GLushort *v)
static int luaglew_glSecondaryColor3usv(lua_State *L) {
	glSecondaryColor3usv((GLushort *)luaglew_checkarray_int(L, 1));
	return 0;
}

// void glSecondaryColorPointer (GLint size, GLenum type, GLsizei stride, GLvoid *pointer)
static int luaglew_glSecondaryColorPointer(lua_State *L) {
	glSecondaryColorPointer((GLint)luaL_checkint(L, 1), luaglew_checkenum(L, 2), (GLsizei)luaL_checklong(L, 3), luaglew_checkarray_int(L, 4));
	return 0;
}

// void glBlendFuncSeparate (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha)
static int luaglew_glBlendFuncSeparate(lua_State *L) {
	glBlendFuncSeparate(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), luaglew_checkenum(L, 3), luaglew_checkenum(L, 4));
	return 0;
}

// void glWindowPos2d (GLdouble x, GLdouble y)
static int luaglew_glWindowPos2d(lua_State *L) {
	glWindowPos2d((GLdouble)luaL_checknumber(L, 1), (GLdouble)luaL_checknumber(L, 2));
	return 0;
}

// void glWindowPos2f (GLfloat x, GLfloat y)
static int luaglew_glWindowPos2f(lua_State *L) {
	glWindowPos2f((GLfloat)luaL_checknumber(L, 1), (GLfloat)luaL_checknumber(L, 2));
	return 0;
}

// void glWindowPos2i (GLint x, GLint y)
static int luaglew_glWindowPos2i(lua_State *L) {
	glWindowPos2i((GLint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2));
	return 0;
}

// void glWindowPos2s (GLshort x, GLshort y)
static int luaglew_glWindowPos2s(lua_State *L) {
	glWindowPos2s((GLshort)luaL_checkinteger(L, 1), (GLshort)luaL_checkinteger(L, 2));
	return 0;
}

// void glWindowPos2dv (const GLdouble *p)
static int luaglew_glWindowPos2dv(lua_State *L) {
	glWindowPos2dv((GLdouble *)luaglew_checkarray_doublefloat(L, 1));
	return 0;
}

// void glWindowPos2fv (const GLfloat *p)
static int luaglew_glWindowPos2fv(lua_State *L) {
	glWindowPos2fv((GLfloat *)luaglew_checkarray_doublefloat(L, 1));
	return 0;
}

// void glWindowPos2iv (const GLint *p)
static int luaglew_glWindowPos2iv(lua_State *L) {
	glWindowPos2iv((GLint *)luaglew_checkarray_int(L, 1));
	return 0;
}

// void glWindowPos2sv (const GLshort *p)
static int luaglew_glWindowPos2sv(lua_State *L) {
	glWindowPos2sv((GLshort *)luaglew_checkarray_int(L, 1));
	return 0;
}

// void glWindowPos3d (GLdouble x, GLdouble y, GLdouble z)
static int luaglew_glWindowPos3d(lua_State *L) {
	glWindowPos3d((GLdouble)luaL_checknumber(L, 1), (GLdouble)luaL_checknumber(L, 2), (GLdouble)luaL_checknumber(L, 3));
	return 0;
}

// void glWindowPos3f (GLfloat x, GLfloat y, GLfloat z)
static int luaglew_glWindowPos3f(lua_State *L) {
	glWindowPos3f((GLfloat)luaL_checknumber(L, 1), (GLfloat)luaL_checknumber(L, 2), (GLfloat)luaL_checknumber(L, 3));
	return 0;
}

// void glWindowPos3i (GLint x, GLint y, GLint z)
static int luaglew_glWindowPos3i(lua_State *L) {
	glWindowPos3i((GLint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3));
	return 0;
}

// void glWindowPos3s (GLshort x, GLshort y, GLshort z)
static int luaglew_glWindowPos3s(lua_State *L) {
	glWindowPos3s((GLshort)luaL_checkinteger(L, 1), (GLshort)luaL_checkinteger(L, 2), (GLshort)luaL_checkinteger(L, 3));
	return 0;
}

// void glWindowPos3dv (const GLdouble *p)
static int luaglew_glWindowPos3dv(lua_State *L) {
	glWindowPos3dv((GLdouble *)luaglew_checkarray_doublefloat(L, 1));
	return 0;
}

// void glWindowPos3fv (const GLfloat *p)
static int luaglew_glWindowPos3fv(lua_State *L) {
	glWindowPos3fv((GLfloat *)luaglew_checkarray_doublefloat(L, 1));
	return 0;
}

// void glWindowPos3iv (const GLint *p)
static int luaglew_glWindowPos3iv(lua_State *L) {
	glWindowPos3iv((GLint *)luaglew_checkarray_int(L, 1));
	return 0;
}

// void glWindowPos3sv (const GLshort *p)
static int luaglew_glWindowPos3sv(lua_State *L) {
	glWindowPos3sv((GLshort *)luaglew_checkarray_int(L, 1));
	return 0;
}

// void glGenQueries (GLsizei n, GLuint* ids)
static int luaglew_glGenQueries(lua_State *L) {
	glGenQueries((GLsizei)luaL_checklong(L, 1), (GLuint *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glDeleteQueries (GLsizei n, const GLuint* ids)
static int luaglew_glDeleteQueries(lua_State *L) {
	glDeleteQueries((GLsizei)luaL_checklong(L, 1), (GLuint *)luaglew_checkarray_int(L, 2));
	return 0;
}

// GLboolean glIsQuery (GLuint id)
static int luaglew_glIsQuery(lua_State *L) {
	GLboolean return_value;
	return_value = glIsQuery((GLuint)luaL_checkint(L, 1));
	lua_pushboolean(L, return_value);
	return 1;
}

// void glBeginQuery (GLenum target, GLuint id)
static int luaglew_glBeginQuery(lua_State *L) {
	glBeginQuery(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2));
	return 0;
}

// void glEndQuery (GLenum target)
static int luaglew_glEndQuery(lua_State *L) {
	glEndQuery(luaglew_checkenum(L, 1));
	return 0;
}

// void glGetQueryiv (GLenum target, GLenum pname, GLint* params)
static int luaglew_glGetQueryiv(lua_State *L) {
	glGetQueryiv(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	return 0;
}

// void glGetQueryObjectiv (GLuint id, GLenum pname, GLint* params)
static int luaglew_glGetQueryObjectiv(lua_State *L) {
	glGetQueryObjectiv((GLuint)luaL_checkint(L, 1), luaglew_checkenum(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	return 0;
}

// void glGetQueryObjectuiv (GLuint id, GLenum pname, GLuint* params)
static int luaglew_glGetQueryObjectuiv(lua_State *L) {
	glGetQueryObjectuiv((GLuint)luaL_checkint(L, 1), luaglew_checkenum(L, 2), (GLuint *)luaglew_checkarray_int(L, 3));
	return 0;
}

// void glBindBuffer (GLenum target, GLuint buffer)
static int luaglew_glBindBuffer(lua_State *L) {
	glBindBuffer(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2));
	return 0;
}

// void glDeleteBuffers (GLsizei n, const GLuint* buffers)
static int luaglew_glDeleteBuffers(lua_State *L) {
	glDeleteBuffers((GLsizei)luaL_checklong(L, 1), (GLuint *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glGenBuffers (GLsizei n, GLuint* buffers)
static int luaglew_glGenBuffers(lua_State *L) {
	glGenBuffers((GLsizei)luaL_checklong(L, 1), (GLuint *)luaglew_checkarray_int(L, 2));
	return 0;
}

// GLboolean glIsBuffer (GLuint buffer)
static int luaglew_glIsBuffer(lua_State *L) {
	GLboolean return_value;
	return_value = glIsBuffer((GLuint)luaL_checkint(L, 1));
	lua_pushboolean(L, return_value);
	return 1;
}

// void glBufferData (GLenum target, GLsizeiptr size, const GLvoid* data, GLenum usage)
static int luaglew_glBufferData(lua_State *L) {
	glBufferData(luaglew_checkenum(L, 1), (GLsizei)luaL_checklong(L, 2), (GLvoid *)luaglew_checkarray_void(L, 3), luaglew_checkenum(L, 4));
	return 0;
}

// void glBufferSubData (GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid* data)
static int luaglew_glBufferSubData(lua_State *L) {
	glBufferSubData(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLvoid *)luaglew_checkarray_void(L, 4));
	return 0;
}

// void glGetBufferSubData (GLenum target, GLintptr offset, GLsizeiptr size, GLvoid* data)
static int luaglew_glGetBufferSubData(lua_State *L) {
	glGetBufferSubData(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLvoid *)luaglew_checkarray_void(L, 4));
	return 0;
}

// GLvoid* glMapBuffer (GLenum target, GLenum access)
static int luaglew_glMapBuffer(lua_State *L) {
	GLvoid* return_value;
	return_value = glMapBuffer(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2));
	(GLvoid *)luaglew_pusharray_void(L, return_value);
	return 1;
}

// GLboolean glUnmapBuffer (GLenum target)
static int luaglew_glUnmapBuffer(lua_State *L) {
	GLboolean return_value;
	return_value = glUnmapBuffer(luaglew_checkenum(L, 1));
	lua_pushboolean(L, return_value);
	return 1;
}

// void glGetBufferParameteriv (GLenum target, GLenum pname, GLint* params)
static int luaglew_glGetBufferParameteriv(lua_State *L) {
	glGetBufferParameteriv(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	return 0;
}

// void glGetBufferPointerv (GLenum target, GLenum pname, GLvoid** params)
static int luaglew_glGetBufferPointerv(lua_State *L) {
	glGetBufferPointerv(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), luaglew_checkarray_2void(L, 3));
	return 0;
}

// void glBlendEquationSeparate (GLenum, GLenum)
static int luaglew_glBlendEquationSeparate(lua_State *L) {
	glBlendEquationSeparate(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2));
	return 0;
}

// void glDrawBuffers (GLsizei n, const GLenum* bufs)
static int luaglew_glDrawBuffers(lua_State *L) {
	glDrawBuffers((GLsizei)luaL_checklong(L, 1), luaglew_checkarray_enum(L, 2));
	return 0;
}

// void glStencilOpSeparate (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass)
static int luaglew_glStencilOpSeparate(lua_State *L) {
	glStencilOpSeparate(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), luaglew_checkenum(L, 3), luaglew_checkenum(L, 4));
	return 0;
}

// void glStencilFuncSeparate (GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask)
static int luaglew_glStencilFuncSeparate(lua_State *L) {
	glStencilFuncSeparate(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLint)luaL_checkint(L, 3), (GLuint)luaL_checkint(L, 4));
	return 0;
}

// void glStencilMaskSeparate (GLenum, GLuint)
static int luaglew_glStencilMaskSeparate(lua_State *L) {
	glStencilMaskSeparate(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2));
	return 0;
}

// void glAttachShader (GLuint program, GLuint shader)
static int luaglew_glAttachShader(lua_State *L) {
	glAttachShader((GLuint)luaL_checkint(L, 1), (GLuint)luaL_checkint(L, 2));
	return 0;
}

// void glBindAttribLocation (GLuint program, GLuint index, const GLchar* name)
static int luaglew_glBindAttribLocation(lua_State *L) {
	glBindAttribLocation((GLuint)luaL_checkint(L, 1), (GLuint)luaL_checkint(L, 2), (GLchar *)luaglew_checkarray_char(L, 3));
	return 0;
}

// void glCompileShader (GLuint shader)
static int luaglew_glCompileShader(lua_State *L) {
	glCompileShader((GLuint)luaL_checkint(L, 1));
	return 0;
}

// GLuint glCreateProgram (void)
static int luaglew_glCreateProgram(lua_State *L) {
	GLuint return_value;
	return_value = glCreateProgram();
	lua_pushinteger(L, return_value);
	return 1;
}

// GLuint glCreateShader (GLenum type)
static int luaglew_glCreateShader(lua_State *L) {
	GLuint return_value;
	return_value = glCreateShader(luaglew_checkenum(L, 1));
	lua_pushinteger(L, return_value);
	return 1;
}

// void glDeleteProgram (GLuint program)
static int luaglew_glDeleteProgram(lua_State *L) {
	glDeleteProgram((GLuint)luaL_checkint(L, 1));
	return 0;
}

// void glDeleteShader (GLuint shader)
static int luaglew_glDeleteShader(lua_State *L) {
	glDeleteShader((GLuint)luaL_checkint(L, 1));
	return 0;
}

// void glDetachShader (GLuint program, GLuint shader)
static int luaglew_glDetachShader(lua_State *L) {
	glDetachShader((GLuint)luaL_checkint(L, 1), (GLuint)luaL_checkint(L, 2));
	return 0;
}

// void glDisableVertexAttribArray (GLuint)
static int luaglew_glDisableVertexAttribArray(lua_State *L) {
	glDisableVertexAttribArray((GLuint)luaL_checkint(L, 1));
	return 0;
}

// void glEnableVertexAttribArray (GLuint)
static int luaglew_glEnableVertexAttribArray(lua_State *L) {
	glEnableVertexAttribArray((GLuint)luaL_checkint(L, 1));
	return 0;
}

// void glGetActiveAttrib (GLuint program, GLuint index, GLsizei maxLength, GLsizei* length, GLint* size, GLenum* type, GLchar* name)
static int luaglew_glGetActiveAttrib(lua_State *L) {
	glGetActiveAttrib((GLuint)luaL_checkint(L, 1), (GLuint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLsizei *)luaglew_checkarray_int(L, 4), (GLint *)luaglew_checkarray_int(L, 5), luaglew_checkarray_enum(L, 6), (GLchar *)luaglew_checkarray_char(L, 7));
	return 0;
}

// void glGetActiveUniform (GLuint program, GLuint index, GLsizei maxLength, GLsizei* length, GLint* size, GLenum* type, GLchar* name)
static int luaglew_glGetActiveUniform(lua_State *L) {
	glGetActiveUniform((GLuint)luaL_checkint(L, 1), (GLuint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLsizei *)luaglew_checkarray_int(L, 4), (GLint *)luaglew_checkarray_int(L, 5), luaglew_checkarray_enum(L, 6), (GLchar *)luaglew_checkarray_char(L, 7));
	return 0;
}

// void glGetAttachedShaders (GLuint program, GLsizei maxCount, GLsizei* count, GLuint* shaders)
static int luaglew_glGetAttachedShaders(lua_State *L) {
	glGetAttachedShaders((GLuint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLsizei *)luaglew_checkarray_int(L, 3), (GLuint *)luaglew_checkarray_int(L, 4));
	return 0;
}

// GLint glGetAttribLocation (GLuint program, const GLchar* name)
static int luaglew_glGetAttribLocation(lua_State *L) {
	GLint return_value;
	return_value = glGetAttribLocation((GLuint)luaL_checkint(L, 1), (GLchar *)luaglew_checkarray_char(L, 2));
	lua_pushinteger(L, return_value);
	return 1;
}

// void glGetProgramiv (GLuint program, GLenum pname, GLint* param)
static int luaglew_glGetProgramiv(lua_State *L) {
	glGetProgramiv((GLuint)luaL_checkint(L, 1), luaglew_checkenum(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	return 0;
}

// void glGetProgramInfoLog (GLuint program, GLsizei bufSize, GLsizei* length, GLchar* infoLog)
static int luaglew_glGetProgramInfoLog(lua_State *L) {
	glGetProgramInfoLog((GLuint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLsizei *)luaglew_checkarray_int(L, 3), (GLchar *)luaglew_checkarray_char(L, 4));
	return 0;
}

// void glGetShaderiv (GLuint shader, GLenum pname, GLint* param)
static int luaglew_glGetShaderiv(lua_State *L) {
	glGetShaderiv((GLuint)luaL_checkint(L, 1), luaglew_checkenum(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	return 0;
}

// void glGetShaderInfoLog (GLuint shader, GLsizei bufSize, GLsizei* length, GLchar* infoLog)
static int luaglew_glGetShaderInfoLog(lua_State *L) {
	glGetShaderInfoLog((GLuint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLsizei *)luaglew_checkarray_int(L, 3), (GLchar *)luaglew_checkarray_char(L, 4));
	return 0;
}

// void glShaderSource (GLuint shader, GLsizei count, const GLchar** strings, const GLint* lengths)
static int luaglew_glShaderSource(lua_State *L) {
	glShaderSource((GLuint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLchar **)luaglew_checkarray_2char(L, 3), (GLint *)luaglew_checkarray_int(L, 4));
	return 0;
}

// GLint glGetUniformLocation (GLuint program, const GLchar* name)
static int luaglew_glGetUniformLocation(lua_State *L) {
	GLint return_value;
	return_value = glGetUniformLocation((GLuint)luaL_checkint(L, 1), (GLchar *)luaglew_checkarray_char(L, 2));
	lua_pushinteger(L, return_value);
	return 1;
}

// void glGetUniformfv (GLuint program, GLint location, GLfloat* params)
static int luaglew_glGetUniformfv(lua_State *L) {
	glGetUniformfv((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLfloat *)luaglew_checkarray_doublefloat(L, 3));
	return 0;
}

// void glGetUniformiv (GLuint program, GLint location, GLint* params)
static int luaglew_glGetUniformiv(lua_State *L) {
	glGetUniformiv((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	return 0;
}

// void glGetVertexAttribdv (GLuint, GLenum, GLdouble*)
static int luaglew_glGetVertexAttribdv(lua_State *L) {
	glGetVertexAttribdv((GLuint)luaL_checkint(L, 1), luaglew_checkenum(L, 2), (GLdouble *)luaglew_checkarray_doublefloat(L, 3));
	return 0;
}

// void glGetVertexAttribfv (GLuint, GLenum, GLfloat*)
static int luaglew_glGetVertexAttribfv(lua_State *L) {
	glGetVertexAttribfv((GLuint)luaL_checkint(L, 1), luaglew_checkenum(L, 2), (GLfloat *)luaglew_checkarray_doublefloat(L, 3));
	return 0;
}

// void glGetVertexAttribiv (GLuint, GLenum, GLint*)
static int luaglew_glGetVertexAttribiv(lua_State *L) {
	glGetVertexAttribiv((GLuint)luaL_checkint(L, 1), luaglew_checkenum(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	return 0;
}

// void glGetVertexAttribPointerv (GLuint, GLenum, GLvoid*)
static int luaglew_glGetVertexAttribPointerv(lua_State *L) {
	glGetVertexAttribPointerv((GLuint)luaL_checkint(L, 1), luaglew_checkenum(L, 2), (GLvoid *)luaglew_checkarray_void(L, 3));
	return 0;
}

// GLboolean glIsProgram (GLuint program)
static int luaglew_glIsProgram(lua_State *L) {
	GLboolean return_value;
	return_value = glIsProgram((GLuint)luaL_checkint(L, 1));
	lua_pushboolean(L, return_value);
	return 1;
}

// GLboolean glIsShader (GLuint shader)
static int luaglew_glIsShader(lua_State *L) {
	GLboolean return_value;
	return_value = glIsShader((GLuint)luaL_checkint(L, 1));
	lua_pushboolean(L, return_value);
	return 1;
}

// void glLinkProgram (GLuint program)
static int luaglew_glLinkProgram(lua_State *L) {
	glLinkProgram((GLuint)luaL_checkint(L, 1));
	return 0;
}

// void glGetShaderSource (GLint obj, GLsizei maxLength, GLsizei* length, GLchar* source)
static int luaglew_glGetShaderSource(lua_State *L) {
	glGetShaderSource((GLint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLsizei *)luaglew_checkarray_int(L, 3), (GLchar *)luaglew_checkarray_char(L, 4));
	return 0;
}

// void glUseProgram (GLuint program)
static int luaglew_glUseProgram(lua_State *L) {
	glUseProgram((GLuint)luaL_checkint(L, 1));
	return 0;
}

// void glUniform1f (GLint location, GLfloat v0)
static int luaglew_glUniform1f(lua_State *L) {
	glUniform1f((GLint)luaL_checkint(L, 1), (GLfloat)luaL_checknumber(L, 2));
	return 0;
}

// void glUniform1fv (GLint location, GLsizei count, const GLfloat* value)
static int luaglew_glUniform1fv(lua_State *L) {
	glUniform1fv((GLint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLfloat *)luaglew_checkarray_doublefloat(L, 3));
	return 0;
}

// void glUniform1i (GLint location, GLint v0)
static int luaglew_glUniform1i(lua_State *L) {
	glUniform1i((GLint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2));
	return 0;
}

// void glUniform1iv (GLint location, GLsizei count, const GLint* value)
static int luaglew_glUniform1iv(lua_State *L) {
	glUniform1iv((GLint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	return 0;
}

// void glUniform2f (GLint location, GLfloat v0, GLfloat v1)
static int luaglew_glUniform2f(lua_State *L) {
	glUniform2f((GLint)luaL_checkint(L, 1), (GLfloat)luaL_checknumber(L, 2), (GLfloat)luaL_checknumber(L, 3));
	return 0;
}

// void glUniform2fv (GLint location, GLsizei count, const GLfloat* value)
static int luaglew_glUniform2fv(lua_State *L) {
	glUniform2fv((GLint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLfloat *)luaglew_checkarray_doublefloat(L, 3));
	return 0;
}

// void glUniform2i (GLint location, GLint v0, GLint v1)
static int luaglew_glUniform2i(lua_State *L) {
	glUniform2i((GLint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3));
	return 0;
}

// void glUniform2iv (GLint location, GLsizei count, const GLint* value)
static int luaglew_glUniform2iv(lua_State *L) {
	glUniform2iv((GLint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	return 0;
}

// void glUniform3f (GLint location, GLfloat v0, GLfloat v1, GLfloat v2)
static int luaglew_glUniform3f(lua_State *L) {
	glUniform3f((GLint)luaL_checkint(L, 1), (GLfloat)luaL_checknumber(L, 2), (GLfloat)luaL_checknumber(L, 3), (GLfloat)luaL_checknumber(L, 4));
	return 0;
}

// void glUniform3fv (GLint location, GLsizei count, const GLfloat* value)
static int luaglew_glUniform3fv(lua_State *L) {
	glUniform3fv((GLint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLfloat *)luaglew_checkarray_doublefloat(L, 3));
	return 0;
}

// void glUniform3i (GLint location, GLint v0, GLint v1, GLint v2)
static int luaglew_glUniform3i(lua_State *L) {
	glUniform3i((GLint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4));
	return 0;
}

// void glUniform3iv (GLint location, GLsizei count, const GLint* value)
static int luaglew_glUniform3iv(lua_State *L) {
	glUniform3iv((GLint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	return 0;
}

// void glUniform4f (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3)
static int luaglew_glUniform4f(lua_State *L) {
	glUniform4f((GLint)luaL_checkint(L, 1), (GLfloat)luaL_checknumber(L, 2), (GLfloat)luaL_checknumber(L, 3), (GLfloat)luaL_checknumber(L, 4), (GLfloat)luaL_checknumber(L, 5));
	return 0;
}

// void glUniform4fv (GLint location, GLsizei count, const GLfloat* value)
static int luaglew_glUniform4fv(lua_State *L) {
	glUniform4fv((GLint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLfloat *)luaglew_checkarray_doublefloat(L, 3));
	return 0;
}

// void glUniform4i (GLint location, GLint v0, GLint v1, GLint v2, GLint v3)
static int luaglew_glUniform4i(lua_State *L) {
	glUniform4i((GLint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4), (GLint)luaL_checkint(L, 5));
	return 0;
}

// void glUniform4iv (GLint location, GLsizei count, const GLint* value)
static int luaglew_glUniform4iv(lua_State *L) {
	glUniform4iv((GLint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	return 0;
}

// void glUniformMatrix2fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat* value)
static int luaglew_glUniformMatrix2fv(lua_State *L) {
	glUniformMatrix2fv((GLint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLboolean)lua_toboolean(L, 3), (GLfloat *)luaglew_checkarray_doublefloat(L, 4));
	return 0;
}

// void glUniformMatrix3fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat* value)
static int luaglew_glUniformMatrix3fv(lua_State *L) {
	glUniformMatrix3fv((GLint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLboolean)lua_toboolean(L, 3), (GLfloat *)luaglew_checkarray_doublefloat(L, 4));
	return 0;
}

// void glUniformMatrix4fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat* value)
static int luaglew_glUniformMatrix4fv(lua_State *L) {
	glUniformMatrix4fv((GLint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLboolean)lua_toboolean(L, 3), (GLfloat *)luaglew_checkarray_doublefloat(L, 4));
	return 0;
}

// void glValidateProgram (GLuint program)
static int luaglew_glValidateProgram(lua_State *L) {
	glValidateProgram((GLuint)luaL_checkint(L, 1));
	return 0;
}

// void glVertexAttrib1d (GLuint index, GLdouble x)
static int luaglew_glVertexAttrib1d(lua_State *L) {
	glVertexAttrib1d((GLuint)luaL_checkint(L, 1), (GLdouble)luaL_checknumber(L, 2));
	return 0;
}

// void glVertexAttrib1dv (GLuint index, const GLdouble* v)
static int luaglew_glVertexAttrib1dv(lua_State *L) {
	glVertexAttrib1dv((GLuint)luaL_checkint(L, 1), (GLdouble *)luaglew_checkarray_doublefloat(L, 2));
	return 0;
}

// void glVertexAttrib1f (GLuint index, GLfloat x)
static int luaglew_glVertexAttrib1f(lua_State *L) {
	glVertexAttrib1f((GLuint)luaL_checkint(L, 1), (GLfloat)luaL_checknumber(L, 2));
	return 0;
}

// void glVertexAttrib1fv (GLuint index, const GLfloat* v)
static int luaglew_glVertexAttrib1fv(lua_State *L) {
	glVertexAttrib1fv((GLuint)luaL_checkint(L, 1), (GLfloat *)luaglew_checkarray_doublefloat(L, 2));
	return 0;
}

// void glVertexAttrib1s (GLuint index, GLshort x)
static int luaglew_glVertexAttrib1s(lua_State *L) {
	glVertexAttrib1s((GLuint)luaL_checkint(L, 1), (GLshort)luaL_checkinteger(L, 2));
	return 0;
}

// void glVertexAttrib1sv (GLuint index, const GLshort* v)
static int luaglew_glVertexAttrib1sv(lua_State *L) {
	glVertexAttrib1sv((GLuint)luaL_checkint(L, 1), (GLshort *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glVertexAttrib2d (GLuint index, GLdouble x, GLdouble y)
static int luaglew_glVertexAttrib2d(lua_State *L) {
	glVertexAttrib2d((GLuint)luaL_checkint(L, 1), (GLdouble)luaL_checknumber(L, 2), (GLdouble)luaL_checknumber(L, 3));
	return 0;
}

// void glVertexAttrib2dv (GLuint index, const GLdouble* v)
static int luaglew_glVertexAttrib2dv(lua_State *L) {
	glVertexAttrib2dv((GLuint)luaL_checkint(L, 1), (GLdouble *)luaglew_checkarray_doublefloat(L, 2));
	return 0;
}

// void glVertexAttrib2f (GLuint index, GLfloat x, GLfloat y)
static int luaglew_glVertexAttrib2f(lua_State *L) {
	glVertexAttrib2f((GLuint)luaL_checkint(L, 1), (GLfloat)luaL_checknumber(L, 2), (GLfloat)luaL_checknumber(L, 3));
	return 0;
}

// void glVertexAttrib2fv (GLuint index, const GLfloat* v)
static int luaglew_glVertexAttrib2fv(lua_State *L) {
	glVertexAttrib2fv((GLuint)luaL_checkint(L, 1), (GLfloat *)luaglew_checkarray_doublefloat(L, 2));
	return 0;
}

// void glVertexAttrib2s (GLuint index, GLshort x, GLshort y)
static int luaglew_glVertexAttrib2s(lua_State *L) {
	glVertexAttrib2s((GLuint)luaL_checkint(L, 1), (GLshort)luaL_checkinteger(L, 2), (GLshort)luaL_checkinteger(L, 3));
	return 0;
}

// void glVertexAttrib2sv (GLuint index, const GLshort* v)
static int luaglew_glVertexAttrib2sv(lua_State *L) {
	glVertexAttrib2sv((GLuint)luaL_checkint(L, 1), (GLshort *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glVertexAttrib3d (GLuint index, GLdouble x, GLdouble y, GLdouble z)
static int luaglew_glVertexAttrib3d(lua_State *L) {
	glVertexAttrib3d((GLuint)luaL_checkint(L, 1), (GLdouble)luaL_checknumber(L, 2), (GLdouble)luaL_checknumber(L, 3), (GLdouble)luaL_checknumber(L, 4));
	return 0;
}

// void glVertexAttrib3dv (GLuint index, const GLdouble* v)
static int luaglew_glVertexAttrib3dv(lua_State *L) {
	glVertexAttrib3dv((GLuint)luaL_checkint(L, 1), (GLdouble *)luaglew_checkarray_doublefloat(L, 2));
	return 0;
}

// void glVertexAttrib3f (GLuint index, GLfloat x, GLfloat y, GLfloat z)
static int luaglew_glVertexAttrib3f(lua_State *L) {
	glVertexAttrib3f((GLuint)luaL_checkint(L, 1), (GLfloat)luaL_checknumber(L, 2), (GLfloat)luaL_checknumber(L, 3), (GLfloat)luaL_checknumber(L, 4));
	return 0;
}

// void glVertexAttrib3fv (GLuint index, const GLfloat* v)
static int luaglew_glVertexAttrib3fv(lua_State *L) {
	glVertexAttrib3fv((GLuint)luaL_checkint(L, 1), (GLfloat *)luaglew_checkarray_doublefloat(L, 2));
	return 0;
}

// void glVertexAttrib3s (GLuint index, GLshort x, GLshort y, GLshort z)
static int luaglew_glVertexAttrib3s(lua_State *L) {
	glVertexAttrib3s((GLuint)luaL_checkint(L, 1), (GLshort)luaL_checkinteger(L, 2), (GLshort)luaL_checkinteger(L, 3), (GLshort)luaL_checkinteger(L, 4));
	return 0;
}

// void glVertexAttrib3sv (GLuint index, const GLshort* v)
static int luaglew_glVertexAttrib3sv(lua_State *L) {
	glVertexAttrib3sv((GLuint)luaL_checkint(L, 1), (GLshort *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glVertexAttrib4Nbv (GLuint index, const GLbyte* v)
static int luaglew_glVertexAttrib4Nbv(lua_State *L) {
	glVertexAttrib4Nbv((GLuint)luaL_checkint(L, 1), (GLbyte *)luaglew_checkarray_byte(L, 2));
	return 0;
}

// void glVertexAttrib4Niv (GLuint index, const GLint* v)
static int luaglew_glVertexAttrib4Niv(lua_State *L) {
	glVertexAttrib4Niv((GLuint)luaL_checkint(L, 1), (GLint *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glVertexAttrib4Nsv (GLuint index, const GLshort* v)
static int luaglew_glVertexAttrib4Nsv(lua_State *L) {
	glVertexAttrib4Nsv((GLuint)luaL_checkint(L, 1), (GLshort *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glVertexAttrib4Nub (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w)
static int luaglew_glVertexAttrib4Nub(lua_State *L) {
	glVertexAttrib4Nub((GLuint)luaL_checkint(L, 1), (GLubyte)luaL_checknumber(L, 2), (GLubyte)luaL_checknumber(L, 3), (GLubyte)luaL_checknumber(L, 4), (GLubyte)luaL_checknumber(L, 5));
	return 0;
}

// void glVertexAttrib4Nubv (GLuint index, const GLubyte* v)
static int luaglew_glVertexAttrib4Nubv(lua_State *L) {
	glVertexAttrib4Nubv((GLuint)luaL_checkint(L, 1), (GLubyte *)luaglew_checkarray_ubyte(L, 2));
	return 0;
}

// void glVertexAttrib4Nuiv (GLuint index, const GLuint* v)
static int luaglew_glVertexAttrib4Nuiv(lua_State *L) {
	glVertexAttrib4Nuiv((GLuint)luaL_checkint(L, 1), (GLuint *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glVertexAttrib4Nusv (GLuint index, const GLushort* v)
static int luaglew_glVertexAttrib4Nusv(lua_State *L) {
	glVertexAttrib4Nusv((GLuint)luaL_checkint(L, 1), (GLushort *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glVertexAttrib4bv (GLuint index, const GLbyte* v)
static int luaglew_glVertexAttrib4bv(lua_State *L) {
	glVertexAttrib4bv((GLuint)luaL_checkint(L, 1), (GLbyte *)luaglew_checkarray_byte(L, 2));
	return 0;
}

// void glVertexAttrib4d (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w)
static int luaglew_glVertexAttrib4d(lua_State *L) {
	glVertexAttrib4d((GLuint)luaL_checkint(L, 1), (GLdouble)luaL_checknumber(L, 2), (GLdouble)luaL_checknumber(L, 3), (GLdouble)luaL_checknumber(L, 4), (GLdouble)luaL_checknumber(L, 5));
	return 0;
}

// void glVertexAttrib4dv (GLuint index, const GLdouble* v)
static int luaglew_glVertexAttrib4dv(lua_State *L) {
	glVertexAttrib4dv((GLuint)luaL_checkint(L, 1), (GLdouble *)luaglew_checkarray_doublefloat(L, 2));
	return 0;
}

// void glVertexAttrib4f (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w)
static int luaglew_glVertexAttrib4f(lua_State *L) {
	glVertexAttrib4f((GLuint)luaL_checkint(L, 1), (GLfloat)luaL_checknumber(L, 2), (GLfloat)luaL_checknumber(L, 3), (GLfloat)luaL_checknumber(L, 4), (GLfloat)luaL_checknumber(L, 5));
	return 0;
}

// void glVertexAttrib4fv (GLuint index, const GLfloat* v)
static int luaglew_glVertexAttrib4fv(lua_State *L) {
	glVertexAttrib4fv((GLuint)luaL_checkint(L, 1), (GLfloat *)luaglew_checkarray_doublefloat(L, 2));
	return 0;
}

// void glVertexAttrib4iv (GLuint index, const GLint* v)
static int luaglew_glVertexAttrib4iv(lua_State *L) {
	glVertexAttrib4iv((GLuint)luaL_checkint(L, 1), (GLint *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glVertexAttrib4s (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w)
static int luaglew_glVertexAttrib4s(lua_State *L) {
	glVertexAttrib4s((GLuint)luaL_checkint(L, 1), (GLshort)luaL_checkinteger(L, 2), (GLshort)luaL_checkinteger(L, 3), (GLshort)luaL_checkinteger(L, 4), (GLshort)luaL_checkinteger(L, 5));
	return 0;
}

// void glVertexAttrib4sv (GLuint index, const GLshort* v)
static int luaglew_glVertexAttrib4sv(lua_State *L) {
	glVertexAttrib4sv((GLuint)luaL_checkint(L, 1), (GLshort *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glVertexAttrib4ubv (GLuint index, const GLubyte* v)
static int luaglew_glVertexAttrib4ubv(lua_State *L) {
	glVertexAttrib4ubv((GLuint)luaL_checkint(L, 1), (GLubyte *)luaglew_checkarray_ubyte(L, 2));
	return 0;
}

// void glVertexAttrib4uiv (GLuint index, const GLuint* v)
static int luaglew_glVertexAttrib4uiv(lua_State *L) {
	glVertexAttrib4uiv((GLuint)luaL_checkint(L, 1), (GLuint *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glVertexAttrib4usv (GLuint index, const GLushort* v)
static int luaglew_glVertexAttrib4usv(lua_State *L) {
	glVertexAttrib4usv((GLuint)luaL_checkint(L, 1), (GLushort *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glVertexAttribPointer (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid* pointer)
static int luaglew_glVertexAttribPointer(lua_State *L) {
	glVertexAttribPointer((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), luaglew_checkenum(L, 3), (GLboolean)lua_toboolean(L, 4), (GLsizei)luaL_checklong(L, 5), luaglew_checkarray_int(L, 6));
	return 0;
}

// void glUniformMatrix2x3fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
static int luaglew_glUniformMatrix2x3fv(lua_State *L) {
	glUniformMatrix2x3fv((GLint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLboolean)lua_toboolean(L, 3), (GLfloat *)luaglew_checkarray_doublefloat(L, 4));
	return 0;
}

// void glUniformMatrix3x2fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
static int luaglew_glUniformMatrix3x2fv(lua_State *L) {
	glUniformMatrix3x2fv((GLint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLboolean)lua_toboolean(L, 3), (GLfloat *)luaglew_checkarray_doublefloat(L, 4));
	return 0;
}

// void glUniformMatrix2x4fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
static int luaglew_glUniformMatrix2x4fv(lua_State *L) {
	glUniformMatrix2x4fv((GLint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLboolean)lua_toboolean(L, 3), (GLfloat *)luaglew_checkarray_doublefloat(L, 4));
	return 0;
}

// void glUniformMatrix4x2fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
static int luaglew_glUniformMatrix4x2fv(lua_State *L) {
	glUniformMatrix4x2fv((GLint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLboolean)lua_toboolean(L, 3), (GLfloat *)luaglew_checkarray_doublefloat(L, 4));
	return 0;
}

// void glUniformMatrix3x4fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
static int luaglew_glUniformMatrix3x4fv(lua_State *L) {
	glUniformMatrix3x4fv((GLint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLboolean)lua_toboolean(L, 3), (GLfloat *)luaglew_checkarray_doublefloat(L, 4));
	return 0;
}

// void glUniformMatrix4x3fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
static int luaglew_glUniformMatrix4x3fv(lua_State *L) {
	glUniformMatrix4x3fv((GLint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLboolean)lua_toboolean(L, 3), (GLfloat *)luaglew_checkarray_doublefloat(L, 4));
	return 0;
}

// void glColorMaski (GLuint param1, GLboolean param2, GLboolean param3, GLboolean param4, GLboolean param5)
static int luaglew_glColorMaski(lua_State *L) {
	glColorMaski((GLuint)luaL_checkint(L, 1), (GLboolean)lua_toboolean(L, 2), (GLboolean)lua_toboolean(L, 3), (GLboolean)lua_toboolean(L, 4), (GLboolean)lua_toboolean(L, 5));
	return 0;
}

// void glGetBooleani_v (GLenum param1, GLuint param2, GLboolean* param3)
static int luaglew_glGetBooleani_v(lua_State *L) {
	glGetBooleani_v(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2), (GLboolean *)luaglew_checkarray_boolean(L, 3));
	return 0;
}

// void glEnablei (GLenum param1, GLuint param2)
static int luaglew_glEnablei(lua_State *L) {
	glEnablei(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2));
	return 0;
}

// void glDisablei (GLenum param1, GLuint param2)
static int luaglew_glDisablei(lua_State *L) {
	glDisablei(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2));
	return 0;
}

// GLboolean glIsEnabledi (GLenum param1, GLuint param2)
static int luaglew_glIsEnabledi(lua_State *L) {
	GLboolean return_value;
	return_value = glIsEnabledi(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2));
	lua_pushboolean(L, return_value);
	return 1;
}

// void glBeginTransformFeedback (GLenum param1)
static int luaglew_glBeginTransformFeedback(lua_State *L) {
	glBeginTransformFeedback(luaglew_checkenum(L, 1));
	return 0;
}

// void glEndTransformFeedback (void)
static int luaglew_glEndTransformFeedback(lua_State *L) {
	glEndTransformFeedback();
	return 0;
}

// void glTransformFeedbackVaryings (GLuint param1, GLsizei param2, const GLchar ** param3, GLenum param4)
static int luaglew_glTransformFeedbackVaryings(lua_State *L) {
	glTransformFeedbackVaryings((GLuint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLchar **)luaglew_checkarray_2char(L, 3), luaglew_checkenum(L, 4));
	return 0;
}

// void glGetTransformFeedbackVarying (GLuint param1, GLuint param2, GLint* param3)
static int luaglew_glGetTransformFeedbackVarying(lua_State *L) {
	glGetTransformFeedbackVarying((GLuint)luaL_checkint(L, 1), (GLuint)luaL_checkint(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	return 0;
}

// void glClampColor (GLenum param1, GLenum param2)
static int luaglew_glClampColor(lua_State *L) {
	glClampColor(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2));
	return 0;
}

// void glBeginConditionalRender (GLuint param1, GLenum param2)
static int luaglew_glBeginConditionalRender(lua_State *L) {
	glBeginConditionalRender((GLuint)luaL_checkint(L, 1), luaglew_checkenum(L, 2));
	return 0;
}

// void glEndConditionalRender (void)
static int luaglew_glEndConditionalRender(lua_State *L) {
	glEndConditionalRender();
	return 0;
}

// void glVertexAttribI1i (GLuint param1, GLint param2)
static int luaglew_glVertexAttribI1i(lua_State *L) {
	glVertexAttribI1i((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2));
	return 0;
}

// void glVertexAttribI2i (GLuint param1, GLint param2, GLint param3)
static int luaglew_glVertexAttribI2i(lua_State *L) {
	glVertexAttribI2i((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3));
	return 0;
}

// void glVertexAttribI3i (GLuint param1, GLint param2, GLint param3, GLint param4)
static int luaglew_glVertexAttribI3i(lua_State *L) {
	glVertexAttribI3i((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4));
	return 0;
}

// void glVertexAttribI4i (GLuint param1, GLint param2, GLint param3, GLint param4, GLint param5)
static int luaglew_glVertexAttribI4i(lua_State *L) {
	glVertexAttribI4i((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4), (GLint)luaL_checkint(L, 5));
	return 0;
}

// void glVertexAttribI1ui (GLuint param1, GLuint param2)
static int luaglew_glVertexAttribI1ui(lua_State *L) {
	glVertexAttribI1ui((GLuint)luaL_checkint(L, 1), (GLuint)luaL_checkint(L, 2));
	return 0;
}

// void glVertexAttribI2ui (GLuint param1, GLuint param2, GLuint param3)
static int luaglew_glVertexAttribI2ui(lua_State *L) {
	glVertexAttribI2ui((GLuint)luaL_checkint(L, 1), (GLuint)luaL_checkint(L, 2), (GLuint)luaL_checkint(L, 3));
	return 0;
}

// void glVertexAttribI3ui (GLuint param1, GLuint param2, GLuint param3, GLuint param4)
static int luaglew_glVertexAttribI3ui(lua_State *L) {
	glVertexAttribI3ui((GLuint)luaL_checkint(L, 1), (GLuint)luaL_checkint(L, 2), (GLuint)luaL_checkint(L, 3), (GLuint)luaL_checkint(L, 4));
	return 0;
}

// void glVertexAttribI4ui (GLuint param1, GLuint param2, GLuint param3, GLuint param4, GLuint param5)
static int luaglew_glVertexAttribI4ui(lua_State *L) {
	glVertexAttribI4ui((GLuint)luaL_checkint(L, 1), (GLuint)luaL_checkint(L, 2), (GLuint)luaL_checkint(L, 3), (GLuint)luaL_checkint(L, 4), (GLuint)luaL_checkint(L, 5));
	return 0;
}

// void glVertexAttribI1iv (GLuint param1, const GLint* param2)
static int luaglew_glVertexAttribI1iv(lua_State *L) {
	glVertexAttribI1iv((GLuint)luaL_checkint(L, 1), (GLint *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glVertexAttribI2iv (GLuint param1, const GLint* param2)
static int luaglew_glVertexAttribI2iv(lua_State *L) {
	glVertexAttribI2iv((GLuint)luaL_checkint(L, 1), (GLint *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glVertexAttribI3iv (GLuint param1, const GLint* param2)
static int luaglew_glVertexAttribI3iv(lua_State *L) {
	glVertexAttribI3iv((GLuint)luaL_checkint(L, 1), (GLint *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glVertexAttribI4iv (GLuint param1, const GLint* param2)
static int luaglew_glVertexAttribI4iv(lua_State *L) {
	glVertexAttribI4iv((GLuint)luaL_checkint(L, 1), (GLint *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glVertexAttribI1uiv (GLuint param1, const GLuint* param2)
static int luaglew_glVertexAttribI1uiv(lua_State *L) {
	glVertexAttribI1uiv((GLuint)luaL_checkint(L, 1), (GLuint *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glVertexAttribI2uiv (GLuint param1, const GLuint* param2)
static int luaglew_glVertexAttribI2uiv(lua_State *L) {
	glVertexAttribI2uiv((GLuint)luaL_checkint(L, 1), (GLuint *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glVertexAttribI3uiv (GLuint param1, const GLuint* param2)
static int luaglew_glVertexAttribI3uiv(lua_State *L) {
	glVertexAttribI3uiv((GLuint)luaL_checkint(L, 1), (GLuint *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glVertexAttribI4uiv (GLuint param1, const GLuint* param2)
static int luaglew_glVertexAttribI4uiv(lua_State *L) {
	glVertexAttribI4uiv((GLuint)luaL_checkint(L, 1), (GLuint *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glVertexAttribI4bv (GLuint param1, const GLbyte* param2)
static int luaglew_glVertexAttribI4bv(lua_State *L) {
	glVertexAttribI4bv((GLuint)luaL_checkint(L, 1), (GLbyte *)luaglew_checkarray_byte(L, 2));
	return 0;
}

// void glVertexAttribI4sv (GLuint param1, const GLshort* param2)
static int luaglew_glVertexAttribI4sv(lua_State *L) {
	glVertexAttribI4sv((GLuint)luaL_checkint(L, 1), (GLshort *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glVertexAttribI4ubv (GLuint param1, const GLubyte* param2)
static int luaglew_glVertexAttribI4ubv(lua_State *L) {
	glVertexAttribI4ubv((GLuint)luaL_checkint(L, 1), (GLubyte *)luaglew_checkarray_ubyte(L, 2));
	return 0;
}

// void glVertexAttribI4usv (GLuint param1, const GLushort* param2)
static int luaglew_glVertexAttribI4usv(lua_State *L) {
	glVertexAttribI4usv((GLuint)luaL_checkint(L, 1), (GLushort *)luaglew_checkarray_int(L, 2));
	return 0;
}

// void glVertexAttribIPointer (GLuint param1, GLint param2, GLenum param3, GLsizei param4, const GLvoid* param5)
static int luaglew_glVertexAttribIPointer(lua_State *L) {
	glVertexAttribIPointer((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), luaglew_checkenum(L, 3), (GLsizei)luaL_checklong(L, 4), (GLvoid *)luaglew_checkarray_void(L, 5));
	return 0;
}

// void glGetVertexAttribIiv (GLuint param1, GLenum param2, GLint* param3)
static int luaglew_glGetVertexAttribIiv(lua_State *L) {
	glGetVertexAttribIiv((GLuint)luaL_checkint(L, 1), luaglew_checkenum(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	return 0;
}

// void glGetVertexAttribIuiv (GLuint param1, GLenum param2, GLuint* param3)
static int luaglew_glGetVertexAttribIuiv(lua_State *L) {
	glGetVertexAttribIuiv((GLuint)luaL_checkint(L, 1), luaglew_checkenum(L, 2), (GLuint *)luaglew_checkarray_int(L, 3));
	return 0;
}

// void glGetUniformuiv (GLuint param1, GLint param2, GLuint* param3)
static int luaglew_glGetUniformuiv(lua_State *L) {
	glGetUniformuiv((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLuint *)luaglew_checkarray_int(L, 3));
	return 0;
}

// void glBindFragDataLocation (GLuint param1, GLuint param2, const GLchar* param3)
static int luaglew_glBindFragDataLocation(lua_State *L) {
	glBindFragDataLocation((GLuint)luaL_checkint(L, 1), (GLuint)luaL_checkint(L, 2), (GLchar *)luaglew_checkarray_char(L, 3));
	return 0;
}

// GLint glGetFragDataLocation (GLuint param1, const GLchar* param2)
static int luaglew_glGetFragDataLocation(lua_State *L) {
	GLint return_value;
	return_value = glGetFragDataLocation((GLuint)luaL_checkint(L, 1), (GLchar *)luaglew_checkarray_char(L, 2));
	lua_pushinteger(L, return_value);
	return 1;
}

// void glUniform1ui (GLint param1, GLuint param2)
static int luaglew_glUniform1ui(lua_State *L) {
	glUniform1ui((GLint)luaL_checkint(L, 1), (GLuint)luaL_checkint(L, 2));
	return 0;
}

// void glUniform2ui (GLint param1, GLuint param2, GLuint param3)
static int luaglew_glUniform2ui(lua_State *L) {
	glUniform2ui((GLint)luaL_checkint(L, 1), (GLuint)luaL_checkint(L, 2), (GLuint)luaL_checkint(L, 3));
	return 0;
}

// void glUniform3ui (GLint param1, GLuint param2, GLuint param3, GLuint param4)
static int luaglew_glUniform3ui(lua_State *L) {
	glUniform3ui((GLint)luaL_checkint(L, 1), (GLuint)luaL_checkint(L, 2), (GLuint)luaL_checkint(L, 3), (GLuint)luaL_checkint(L, 4));
	return 0;
}

// void glUniform4ui (GLint param1, GLuint param2, GLuint param3, GLuint param4, GLuint param5)
static int luaglew_glUniform4ui(lua_State *L) {
	glUniform4ui((GLint)luaL_checkint(L, 1), (GLuint)luaL_checkint(L, 2), (GLuint)luaL_checkint(L, 3), (GLuint)luaL_checkint(L, 4), (GLuint)luaL_checkint(L, 5));
	return 0;
}

// void glUniform1uiv (GLint param1, GLsizei param2, const GLuint* param3)
static int luaglew_glUniform1uiv(lua_State *L) {
	glUniform1uiv((GLint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLuint *)luaglew_checkarray_int(L, 3));
	return 0;
}

// void glUniform2uiv (GLint param1, GLsizei param2, const GLuint* param3)
static int luaglew_glUniform2uiv(lua_State *L) {
	glUniform2uiv((GLint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLuint *)luaglew_checkarray_int(L, 3));
	return 0;
}

// void glUniform3uiv (GLint param1, GLsizei param2, const GLuint* param3)
static int luaglew_glUniform3uiv(lua_State *L) {
	glUniform3uiv((GLint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLuint *)luaglew_checkarray_int(L, 3));
	return 0;
}

// void glUniform4uiv (GLint param1, GLsizei param2, const GLuint* param3)
static int luaglew_glUniform4uiv(lua_State *L) {
	glUniform4uiv((GLint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLuint *)luaglew_checkarray_int(L, 3));
	return 0;
}

// void glTexParameterIiv (GLenum param1, GLenum param2, const GLint* param3)
static int luaglew_glTexParameterIiv(lua_State *L) {
	glTexParameterIiv(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	return 0;
}

// void glTexParameterIuiv (GLenum param1, GLenum param2, const GLuint* param3)
static int luaglew_glTexParameterIuiv(lua_State *L) {
	glTexParameterIuiv(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLuint *)luaglew_checkarray_int(L, 3));
	return 0;
}

// void glGetTexParameterIiv (GLenum param1, GLenum param2, GLint* param3)
static int luaglew_glGetTexParameterIiv(lua_State *L) {
	glGetTexParameterIiv(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	return 0;
}

// void glGetTexParameterIuiv (GLenum param1, GLenum param2, GLuint* param3)
static int luaglew_glGetTexParameterIuiv(lua_State *L) {
	glGetTexParameterIuiv(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLuint *)luaglew_checkarray_int(L, 3));
	return 0;
}

// void glClearBufferiv (GLenum param1, GLint param2, const GLint* param3)
static int luaglew_glClearBufferiv(lua_State *L) {
	glClearBufferiv(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	return 0;
}

// void glClearBufferuiv (GLenum param1, GLint param2, const GLuint* param3)
static int luaglew_glClearBufferuiv(lua_State *L) {
	glClearBufferuiv(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), (GLuint *)luaglew_checkarray_int(L, 3));
	return 0;
}

// void glClearBufferfv (GLenum param1, GLint param2, const GLfloat* param3)
static int luaglew_glClearBufferfv(lua_State *L) {
	glClearBufferfv(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), (GLfloat *)luaglew_checkarray_doublefloat(L, 3));
	return 0;
}

// void glClearBufferfi (GLenum param1, GLint param2, GLfloat param3, GLint param4)
static int luaglew_glClearBufferfi(lua_State *L) {
	glClearBufferfi(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), (GLfloat)luaL_checknumber(L, 3), (GLint)luaL_checkint(L, 4));
	return 0;
}

// const GLubyte* glGetStringi (GLenum param1, GLuint param2)
static int luaglew_glGetStringi(lua_State *L) {
	GLubyte*n return_value;
	return_value = glGetStringi(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2));
	luaglew_pusharray_GLubyte(L, return_value);
	return 1;
}

// void glDrawArraysInstanced (GLenum param1, GLint param2, GLsizei param3, GLsizei param4)
static int luaglew_glDrawArraysInstanced(lua_State *L) {
	glDrawArraysInstanced(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLsizei)luaL_checklong(L, 4));
	return 0;
}

// void glDrawElementsInstanced (GLenum param1, GLsizei param2, GLenum param3, const GLvoid* param4, GLsizei param5)
static int luaglew_glDrawElementsInstanced(lua_State *L) {
	glDrawElementsInstanced(luaglew_checkenum(L, 1), (GLsizei)luaL_checklong(L, 2), luaglew_checkenum(L, 3), (GLvoid *)luaglew_checkarray_void(L, 4), (GLsizei)luaL_checklong(L, 5));
	return 0;
}

// void glTexBuffer (GLenum param1, GLenum param2, GLuint param3)
static int luaglew_glTexBuffer(lua_State *L) {
	glTexBuffer(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLuint)luaL_checkint(L, 3));
	return 0;
}

// void glPrimitiveRestartIndex (GLuint param1)
static int luaglew_glPrimitiveRestartIndex(lua_State *L) {
	glPrimitiveRestartIndex((GLuint)luaL_checkint(L, 1));
	return 0;
}

// void glGetInteger64i_v (GLenum param1, GLuint param2, GLint64 * param3)
static int luaglew_glGetInteger64i_v(lua_State *L) {
	glGetInteger64i_v(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2), (GLint64 *)luaglew_checkarray_int(L, 3));
	return 0;
}

// void glGetBufferParameteri64v (GLenum param1, GLenum param2, GLint64 * param3)
static int luaglew_glGetBufferParameteri64v(lua_State *L) {
	glGetBufferParameteri64v(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLint64 *)luaglew_checkarray_int(L, 3));
	return 0;
}

// void glFramebufferTexture (GLenum param1, GLenum param2, GLuint param3, GLint param4)
static int luaglew_glFramebufferTexture(lua_State *L) {
	glFramebufferTexture(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLuint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4));
	return 0;
}

// void glVertexAttribDivisor (GLuint index, GLuint divisor)
static int luaglew_glVertexAttribDivisor(lua_State *L) {
	glVertexAttribDivisor((GLuint)luaL_checkint(L, 1), (GLuint)luaL_checkint(L, 2));
	return 0;
}

// void glMinSampleShading (GLclampf value)
static int luaglew_glMinSampleShading(lua_State *L) {
	glMinSampleShading((GLclampf)luaL_checknumber(L, 1));
	return 0;
}

// void glBlendEquationSeparatei (GLuint buf, GLenum modeRGB, GLenum modeAlpha)
static int luaglew_glBlendEquationSeparatei(lua_State *L) {
	glBlendEquationSeparatei((GLuint)luaL_checkint(L, 1), luaglew_checkenum(L, 2), luaglew_checkenum(L, 3));
	return 0;
}

// void glBlendEquationi (GLuint buf, GLenum mode)
static int luaglew_glBlendEquationi(lua_State *L) {
	glBlendEquationi((GLuint)luaL_checkint(L, 1), luaglew_checkenum(L, 2));
	return 0;
}

// void glBlendFuncSeparatei (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha)
static int luaglew_glBlendFuncSeparatei(lua_State *L) {
	glBlendFuncSeparatei((GLuint)luaL_checkint(L, 1), luaglew_checkenum(L, 2), luaglew_checkenum(L, 3), luaglew_checkenum(L, 4), luaglew_checkenum(L, 5));
	return 0;
}

// void glBlendFunci (GLuint buf, GLenum src, GLenum dst)
static int luaglew_glBlendFunci(lua_State *L) {
	glBlendFunci((GLuint)luaL_checkint(L, 1), luaglew_checkenum(L, 2), luaglew_checkenum(L, 3));
	return 0;
}

// void glActiveTextureARB (GLenum)
static int luaglew_glActiveTextureARB(lua_State *L) {
	glActiveTextureARB(luaglew_checkenum(L, 1));
	return 0;
}

// oid glClientActiveTextureARB (GLenum)
static int luaglew_glClientActiveTextureARB(lua_State *L) {
	oid return_value;
	return_value = glClientActiveTextureARB(luaglew_checkenum(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultiTexCoord1dARB (GLenum, GLdouble)
static int luaglew_glMultiTexCoord1dARB(lua_State *L) {
	oid return_value;
	return_value = glMultiTexCoord1dARB(luaglew_checkenum(L, 1), (GLdouble)luaL_checknumber(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultiTexCoord1dvARB (GLenum, const GLdouble *)
static int luaglew_glMultiTexCoord1dvARB(lua_State *L) {
	oid return_value;
	return_value = glMultiTexCoord1dvARB(luaglew_checkenum(L, 1), (GLdouble *)luaglew_checkarray_doublefloat(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultiTexCoord1fARB (GLenum, GLfloat)
static int luaglew_glMultiTexCoord1fARB(lua_State *L) {
	oid return_value;
	return_value = glMultiTexCoord1fARB(luaglew_checkenum(L, 1), (GLfloat)luaL_checknumber(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultiTexCoord1fvARB (GLenum, const GLfloat *)
static int luaglew_glMultiTexCoord1fvARB(lua_State *L) {
	oid return_value;
	return_value = glMultiTexCoord1fvARB(luaglew_checkenum(L, 1), (GLfloat *)luaglew_checkarray_doublefloat(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultiTexCoord1iARB (GLenum, GLint)
static int luaglew_glMultiTexCoord1iARB(lua_State *L) {
	oid return_value;
	return_value = glMultiTexCoord1iARB(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultiTexCoord1ivARB (GLenum, const GLint *)
static int luaglew_glMultiTexCoord1ivARB(lua_State *L) {
	oid return_value;
	return_value = glMultiTexCoord1ivARB(luaglew_checkenum(L, 1), (GLint *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultiTexCoord1sARB (GLenum, GLshort)
static int luaglew_glMultiTexCoord1sARB(lua_State *L) {
	oid return_value;
	return_value = glMultiTexCoord1sARB(luaglew_checkenum(L, 1), (GLshort)luaL_checkinteger(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultiTexCoord1svARB (GLenum, const GLshort *)
static int luaglew_glMultiTexCoord1svARB(lua_State *L) {
	oid return_value;
	return_value = glMultiTexCoord1svARB(luaglew_checkenum(L, 1), (GLshort *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultiTexCoord2dARB (GLenum, GLdouble, GLdouble)
static int luaglew_glMultiTexCoord2dARB(lua_State *L) {
	oid return_value;
	return_value = glMultiTexCoord2dARB(luaglew_checkenum(L, 1), (GLdouble)luaL_checknumber(L, 2), (GLdouble)luaL_checknumber(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultiTexCoord2dvARB (GLenum, const GLdouble *)
static int luaglew_glMultiTexCoord2dvARB(lua_State *L) {
	oid return_value;
	return_value = glMultiTexCoord2dvARB(luaglew_checkenum(L, 1), (GLdouble *)luaglew_checkarray_doublefloat(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultiTexCoord2fARB (GLenum, GLfloat, GLfloat)
static int luaglew_glMultiTexCoord2fARB(lua_State *L) {
	oid return_value;
	return_value = glMultiTexCoord2fARB(luaglew_checkenum(L, 1), (GLfloat)luaL_checknumber(L, 2), (GLfloat)luaL_checknumber(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultiTexCoord2fvARB (GLenum, const GLfloat *)
static int luaglew_glMultiTexCoord2fvARB(lua_State *L) {
	oid return_value;
	return_value = glMultiTexCoord2fvARB(luaglew_checkenum(L, 1), (GLfloat *)luaglew_checkarray_doublefloat(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultiTexCoord2iARB (GLenum, GLint, GLint)
static int luaglew_glMultiTexCoord2iARB(lua_State *L) {
	oid return_value;
	return_value = glMultiTexCoord2iARB(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultiTexCoord2ivARB (GLenum, const GLint *)
static int luaglew_glMultiTexCoord2ivARB(lua_State *L) {
	oid return_value;
	return_value = glMultiTexCoord2ivARB(luaglew_checkenum(L, 1), (GLint *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultiTexCoord2sARB (GLenum, GLshort, GLshort)
static int luaglew_glMultiTexCoord2sARB(lua_State *L) {
	oid return_value;
	return_value = glMultiTexCoord2sARB(luaglew_checkenum(L, 1), (GLshort)luaL_checkinteger(L, 2), (GLshort)luaL_checkinteger(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultiTexCoord2svARB (GLenum, const GLshort *)
static int luaglew_glMultiTexCoord2svARB(lua_State *L) {
	oid return_value;
	return_value = glMultiTexCoord2svARB(luaglew_checkenum(L, 1), (GLshort *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultiTexCoord3dARB (GLenum, GLdouble, GLdouble, GLdouble)
static int luaglew_glMultiTexCoord3dARB(lua_State *L) {
	oid return_value;
	return_value = glMultiTexCoord3dARB(luaglew_checkenum(L, 1), (GLdouble)luaL_checknumber(L, 2), (GLdouble)luaL_checknumber(L, 3), (GLdouble)luaL_checknumber(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultiTexCoord3dvARB (GLenum, const GLdouble *)
static int luaglew_glMultiTexCoord3dvARB(lua_State *L) {
	oid return_value;
	return_value = glMultiTexCoord3dvARB(luaglew_checkenum(L, 1), (GLdouble *)luaglew_checkarray_doublefloat(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultiTexCoord3fARB (GLenum, GLfloat, GLfloat, GLfloat)
static int luaglew_glMultiTexCoord3fARB(lua_State *L) {
	oid return_value;
	return_value = glMultiTexCoord3fARB(luaglew_checkenum(L, 1), (GLfloat)luaL_checknumber(L, 2), (GLfloat)luaL_checknumber(L, 3), (GLfloat)luaL_checknumber(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultiTexCoord3fvARB (GLenum, const GLfloat *)
static int luaglew_glMultiTexCoord3fvARB(lua_State *L) {
	oid return_value;
	return_value = glMultiTexCoord3fvARB(luaglew_checkenum(L, 1), (GLfloat *)luaglew_checkarray_doublefloat(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultiTexCoord3iARB (GLenum, GLint, GLint, GLint)
static int luaglew_glMultiTexCoord3iARB(lua_State *L) {
	oid return_value;
	return_value = glMultiTexCoord3iARB(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultiTexCoord3ivARB (GLenum, const GLint *)
static int luaglew_glMultiTexCoord3ivARB(lua_State *L) {
	oid return_value;
	return_value = glMultiTexCoord3ivARB(luaglew_checkenum(L, 1), (GLint *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultiTexCoord3sARB (GLenum, GLshort, GLshort, GLshort)
static int luaglew_glMultiTexCoord3sARB(lua_State *L) {
	oid return_value;
	return_value = glMultiTexCoord3sARB(luaglew_checkenum(L, 1), (GLshort)luaL_checkinteger(L, 2), (GLshort)luaL_checkinteger(L, 3), (GLshort)luaL_checkinteger(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultiTexCoord3svARB (GLenum, const GLshort *)
static int luaglew_glMultiTexCoord3svARB(lua_State *L) {
	oid return_value;
	return_value = glMultiTexCoord3svARB(luaglew_checkenum(L, 1), (GLshort *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultiTexCoord4dARB (GLenum, GLdouble, GLdouble, GLdouble, GLdouble)
static int luaglew_glMultiTexCoord4dARB(lua_State *L) {
	oid return_value;
	return_value = glMultiTexCoord4dARB(luaglew_checkenum(L, 1), (GLdouble)luaL_checknumber(L, 2), (GLdouble)luaL_checknumber(L, 3), (GLdouble)luaL_checknumber(L, 4), (GLdouble)luaL_checknumber(L, 5));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultiTexCoord4dvARB (GLenum, const GLdouble *)
static int luaglew_glMultiTexCoord4dvARB(lua_State *L) {
	oid return_value;
	return_value = glMultiTexCoord4dvARB(luaglew_checkenum(L, 1), (GLdouble *)luaglew_checkarray_doublefloat(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultiTexCoord4fARB (GLenum, GLfloat, GLfloat, GLfloat, GLfloat)
static int luaglew_glMultiTexCoord4fARB(lua_State *L) {
	oid return_value;
	return_value = glMultiTexCoord4fARB(luaglew_checkenum(L, 1), (GLfloat)luaL_checknumber(L, 2), (GLfloat)luaL_checknumber(L, 3), (GLfloat)luaL_checknumber(L, 4), (GLfloat)luaL_checknumber(L, 5));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultiTexCoord4fvARB (GLenum, const GLfloat *)
static int luaglew_glMultiTexCoord4fvARB(lua_State *L) {
	oid return_value;
	return_value = glMultiTexCoord4fvARB(luaglew_checkenum(L, 1), (GLfloat *)luaglew_checkarray_doublefloat(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultiTexCoord4iARB (GLenum, GLint, GLint, GLint, GLint)
static int luaglew_glMultiTexCoord4iARB(lua_State *L) {
	oid return_value;
	return_value = glMultiTexCoord4iARB(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4), (GLint)luaL_checkint(L, 5));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultiTexCoord4ivARB (GLenum, const GLint *)
static int luaglew_glMultiTexCoord4ivARB(lua_State *L) {
	oid return_value;
	return_value = glMultiTexCoord4ivARB(luaglew_checkenum(L, 1), (GLint *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultiTexCoord4sARB (GLenum, GLshort, GLshort, GLshort, GLshort)
static int luaglew_glMultiTexCoord4sARB(lua_State *L) {
	oid return_value;
	return_value = glMultiTexCoord4sARB(luaglew_checkenum(L, 1), (GLshort)luaL_checkinteger(L, 2), (GLshort)luaL_checkinteger(L, 3), (GLshort)luaL_checkinteger(L, 4), (GLshort)luaL_checkinteger(L, 5));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultiTexCoord4svARB (GLenum, const GLshort *)
static int luaglew_glMultiTexCoord4svARB(lua_State *L) {
	oid return_value;
	return_value = glMultiTexCoord4svARB(luaglew_checkenum(L, 1), (GLshort *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glLoadTransposeMatrixfARB (const GLfloat *)
static int luaglew_glLoadTransposeMatrixfARB(lua_State *L) {
	oid return_value;
	return_value = glLoadTransposeMatrixfARB((GLfloat *)luaglew_checkarray_doublefloat(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glLoadTransposeMatrixdARB (const GLdouble *)
static int luaglew_glLoadTransposeMatrixdARB(lua_State *L) {
	oid return_value;
	return_value = glLoadTransposeMatrixdARB((GLdouble *)luaglew_checkarray_doublefloat(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultTransposeMatrixfARB (const GLfloat *)
static int luaglew_glMultTransposeMatrixfARB(lua_State *L) {
	oid return_value;
	return_value = glMultTransposeMatrixfARB((GLfloat *)luaglew_checkarray_doublefloat(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultTransposeMatrixdARB (const GLdouble *)
static int luaglew_glMultTransposeMatrixdARB(lua_State *L) {
	oid return_value;
	return_value = glMultTransposeMatrixdARB((GLdouble *)luaglew_checkarray_doublefloat(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glSampleCoverageARB (GLclampf, GLboolean)
static int luaglew_glSampleCoverageARB(lua_State *L) {
	oid return_value;
	return_value = glSampleCoverageARB((GLclampf)luaL_checknumber(L, 1), (GLboolean)lua_toboolean(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glSamplePassARB (GLenum)
static int luaglew_glSamplePassARB(lua_State *L) {
	oid return_value;
	return_value = glSamplePassARB(luaglew_checkenum(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glCompressedTexImage3DARB (GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, const GLvoid *)
static int luaglew_glCompressedTexImage3DARB(lua_State *L) {
	oid return_value;
	return_value = glCompressedTexImage3DARB(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), luaglew_checkenum(L, 3), (GLsizei)luaL_checklong(L, 4), (GLsizei)luaL_checklong(L, 5), (GLsizei)luaL_checklong(L, 6), (GLint)luaL_checkint(L, 7), (GLsizei)luaL_checklong(L, 8), (GLvoid *)luaglew_checkarray_void(L, 9));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glCompressedTexImage2DARB (GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, const GLvoid *)
static int luaglew_glCompressedTexImage2DARB(lua_State *L) {
	oid return_value;
	return_value = glCompressedTexImage2DARB(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), luaglew_checkenum(L, 3), (GLsizei)luaL_checklong(L, 4), (GLsizei)luaL_checklong(L, 5), (GLint)luaL_checkint(L, 6), (GLsizei)luaL_checklong(L, 7), (GLvoid *)luaglew_checkarray_void(L, 8));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glCompressedTexImage1DARB (GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, const GLvoid *)
static int luaglew_glCompressedTexImage1DARB(lua_State *L) {
	oid return_value;
	return_value = glCompressedTexImage1DARB(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), luaglew_checkenum(L, 3), (GLsizei)luaL_checklong(L, 4), (GLint)luaL_checkint(L, 5), (GLsizei)luaL_checklong(L, 6), (GLvoid *)luaglew_checkarray_void(L, 7));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glCompressedTexSubImage3DARB (GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, const GLvoid *)
static int luaglew_glCompressedTexSubImage3DARB(lua_State *L) {
	oid return_value;
	return_value = glCompressedTexSubImage3DARB(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4), (GLint)luaL_checkint(L, 5), (GLsizei)luaL_checklong(L, 6), (GLsizei)luaL_checklong(L, 7), (GLsizei)luaL_checklong(L, 8), luaglew_checkenum(L, 9), (GLsizei)luaL_checklong(L, 10), (GLvoid *)luaglew_checkarray_void(L, 11));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glCompressedTexSubImage2DARB (GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, const GLvoid *)
static int luaglew_glCompressedTexSubImage2DARB(lua_State *L) {
	oid return_value;
	return_value = glCompressedTexSubImage2DARB(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4), (GLsizei)luaL_checklong(L, 5), (GLsizei)luaL_checklong(L, 6), luaglew_checkenum(L, 7), (GLsizei)luaL_checklong(L, 8), (GLvoid *)luaglew_checkarray_void(L, 9));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glCompressedTexSubImage1DARB (GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, const GLvoid *)
static int luaglew_glCompressedTexSubImage1DARB(lua_State *L) {
	oid return_value;
	return_value = glCompressedTexSubImage1DARB(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3), (GLsizei)luaL_checklong(L, 4), luaglew_checkenum(L, 5), (GLsizei)luaL_checklong(L, 6), (GLvoid *)luaglew_checkarray_void(L, 7));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetCompressedTexImageARB (GLenum, GLint, GLvoid *)
static int luaglew_glGetCompressedTexImageARB(lua_State *L) {
	oid return_value;
	return_value = glGetCompressedTexImageARB(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), (GLvoid *)luaglew_checkarray_void(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glWeightbvARB (GLint, const GLbyte *)
static int luaglew_glWeightbvARB(lua_State *L) {
	oid return_value;
	return_value = glWeightbvARB((GLint)luaL_checkint(L, 1), (GLbyte *)luaglew_checkarray_byte(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glWeightsvARB (GLint, const GLshort *)
static int luaglew_glWeightsvARB(lua_State *L) {
	oid return_value;
	return_value = glWeightsvARB((GLint)luaL_checkint(L, 1), (GLshort *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glWeightivARB (GLint, const GLint *)
static int luaglew_glWeightivARB(lua_State *L) {
	oid return_value;
	return_value = glWeightivARB((GLint)luaL_checkint(L, 1), (GLint *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glWeightfvARB (GLint, const GLfloat *)
static int luaglew_glWeightfvARB(lua_State *L) {
	oid return_value;
	return_value = glWeightfvARB((GLint)luaL_checkint(L, 1), (GLfloat *)luaglew_checkarray_doublefloat(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glWeightdvARB (GLint, const GLdouble *)
static int luaglew_glWeightdvARB(lua_State *L) {
	oid return_value;
	return_value = glWeightdvARB((GLint)luaL_checkint(L, 1), (GLdouble *)luaglew_checkarray_doublefloat(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glWeightubvARB (GLint, const GLubyte *)
static int luaglew_glWeightubvARB(lua_State *L) {
	oid return_value;
	return_value = glWeightubvARB((GLint)luaL_checkint(L, 1), (GLubyte *)luaglew_checkarray_ubyte(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glWeightusvARB (GLint, const GLushort *)
static int luaglew_glWeightusvARB(lua_State *L) {
	oid return_value;
	return_value = glWeightusvARB((GLint)luaL_checkint(L, 1), (GLushort *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glWeightuivARB (GLint, const GLuint *)
static int luaglew_glWeightuivARB(lua_State *L) {
	oid return_value;
	return_value = glWeightuivARB((GLint)luaL_checkint(L, 1), (GLuint *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glWeightPointerARB (GLint, GLenum, GLsizei, const GLvoid *)
static int luaglew_glWeightPointerARB(lua_State *L) {
	oid return_value;
	return_value = glWeightPointerARB((GLint)luaL_checkint(L, 1), luaglew_checkenum(L, 2), (GLsizei)luaL_checklong(L, 3), (GLvoid *)luaglew_checkarray_void(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexBlendARB (GLint)
static int luaglew_glVertexBlendARB(lua_State *L) {
	oid return_value;
	return_value = glVertexBlendARB((GLint)luaL_checkint(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glWindowPos2dARB (GLdouble, GLdouble)
static int luaglew_glWindowPos2dARB(lua_State *L) {
	oid return_value;
	return_value = glWindowPos2dARB((GLdouble)luaL_checknumber(L, 1), (GLdouble)luaL_checknumber(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glWindowPos2dvARB (const GLdouble *)
static int luaglew_glWindowPos2dvARB(lua_State *L) {
	oid return_value;
	return_value = glWindowPos2dvARB((GLdouble *)luaglew_checkarray_doublefloat(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glWindowPos2fARB (GLfloat, GLfloat)
static int luaglew_glWindowPos2fARB(lua_State *L) {
	oid return_value;
	return_value = glWindowPos2fARB((GLfloat)luaL_checknumber(L, 1), (GLfloat)luaL_checknumber(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glWindowPos2fvARB (const GLfloat *)
static int luaglew_glWindowPos2fvARB(lua_State *L) {
	oid return_value;
	return_value = glWindowPos2fvARB((GLfloat *)luaglew_checkarray_doublefloat(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glWindowPos2iARB (GLint, GLint)
static int luaglew_glWindowPos2iARB(lua_State *L) {
	oid return_value;
	return_value = glWindowPos2iARB((GLint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glWindowPos2ivARB (const GLint *)
static int luaglew_glWindowPos2ivARB(lua_State *L) {
	oid return_value;
	return_value = glWindowPos2ivARB((GLint *)luaglew_checkarray_int(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glWindowPos2sARB (GLshort, GLshort)
static int luaglew_glWindowPos2sARB(lua_State *L) {
	oid return_value;
	return_value = glWindowPos2sARB((GLshort)luaL_checkinteger(L, 1), (GLshort)luaL_checkinteger(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glWindowPos2svARB (const GLshort *)
static int luaglew_glWindowPos2svARB(lua_State *L) {
	oid return_value;
	return_value = glWindowPos2svARB((GLshort *)luaglew_checkarray_int(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glWindowPos3dARB (GLdouble, GLdouble, GLdouble)
static int luaglew_glWindowPos3dARB(lua_State *L) {
	oid return_value;
	return_value = glWindowPos3dARB((GLdouble)luaL_checknumber(L, 1), (GLdouble)luaL_checknumber(L, 2), (GLdouble)luaL_checknumber(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glWindowPos3dvARB (const GLdouble *)
static int luaglew_glWindowPos3dvARB(lua_State *L) {
	oid return_value;
	return_value = glWindowPos3dvARB((GLdouble *)luaglew_checkarray_doublefloat(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glWindowPos3fARB (GLfloat, GLfloat, GLfloat)
static int luaglew_glWindowPos3fARB(lua_State *L) {
	oid return_value;
	return_value = glWindowPos3fARB((GLfloat)luaL_checknumber(L, 1), (GLfloat)luaL_checknumber(L, 2), (GLfloat)luaL_checknumber(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glWindowPos3fvARB (const GLfloat *)
static int luaglew_glWindowPos3fvARB(lua_State *L) {
	oid return_value;
	return_value = glWindowPos3fvARB((GLfloat *)luaglew_checkarray_doublefloat(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glWindowPos3iARB (GLint, GLint, GLint)
static int luaglew_glWindowPos3iARB(lua_State *L) {
	oid return_value;
	return_value = glWindowPos3iARB((GLint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glWindowPos3ivARB (const GLint *)
static int luaglew_glWindowPos3ivARB(lua_State *L) {
	oid return_value;
	return_value = glWindowPos3ivARB((GLint *)luaglew_checkarray_int(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glWindowPos3sARB (GLshort, GLshort, GLshort)
static int luaglew_glWindowPos3sARB(lua_State *L) {
	oid return_value;
	return_value = glWindowPos3sARB((GLshort)luaL_checkinteger(L, 1), (GLshort)luaL_checkinteger(L, 2), (GLshort)luaL_checkinteger(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glWindowPos3svARB (const GLshort *)
static int luaglew_glWindowPos3svARB(lua_State *L) {
	oid return_value;
	return_value = glWindowPos3svARB((GLshort *)luaglew_checkarray_int(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGenQueriesARB (GLsizei n, GLuint *ids)
static int luaglew_glGenQueriesARB(lua_State *L) {
	oid return_value;
	return_value = glGenQueriesARB((GLsizei)luaL_checklong(L, 1), (GLuint *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glDeleteQueriesARB (GLsizei n, const GLuint *ids)
static int luaglew_glDeleteQueriesARB(lua_State *L) {
	oid return_value;
	return_value = glDeleteQueriesARB((GLsizei)luaL_checklong(L, 1), (GLuint *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// Lboolean glIsQueryARB (GLuint id)
static int luaglew_glIsQueryARB(lua_State *L) {
	Lboolean return_value;
	return_value = glIsQueryARB((GLuint)luaL_checkint(L, 1));
	push( ** nespracovany typ Lboolean ** );
	return 1;
}

// oid glBeginQueryARB (GLenum target, GLuint id)
static int luaglew_glBeginQueryARB(lua_State *L) {
	oid return_value;
	return_value = glBeginQueryARB(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glEndQueryARB (GLenum target)
static int luaglew_glEndQueryARB(lua_State *L) {
	oid return_value;
	return_value = glEndQueryARB(luaglew_checkenum(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetQueryivARB (GLenum target, GLenum pname, GLint *params)
static int luaglew_glGetQueryivARB(lua_State *L) {
	oid return_value;
	return_value = glGetQueryivARB(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetQueryObjectivARB (GLuint id, GLenum pname, GLint *params)
static int luaglew_glGetQueryObjectivARB(lua_State *L) {
	oid return_value;
	return_value = glGetQueryObjectivARB((GLuint)luaL_checkint(L, 1), luaglew_checkenum(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetQueryObjectuivARB (GLuint id, GLenum pname, GLuint *params)
static int luaglew_glGetQueryObjectuivARB(lua_State *L) {
	oid return_value;
	return_value = glGetQueryObjectuivARB((GLuint)luaL_checkint(L, 1), luaglew_checkenum(L, 2), (GLuint *)luaglew_checkarray_int(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glPointParameterfARB (GLenum pname, GLfloat param)
static int luaglew_glPointParameterfARB(lua_State *L) {
	oid return_value;
	return_value = glPointParameterfARB(luaglew_checkenum(L, 1), (GLfloat)luaL_checknumber(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glPointParameterfvARB (GLenum pname, const GLfloat *params)
static int luaglew_glPointParameterfvARB(lua_State *L) {
	oid return_value;
	return_value = glPointParameterfvARB(luaglew_checkenum(L, 1), (GLfloat *)luaglew_checkarray_doublefloat(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glBindProgramARB (GLenum target, GLuint program)
static int luaglew_glBindProgramARB(lua_State *L) {
	oid return_value;
	return_value = glBindProgramARB(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glDeleteProgramsARB (GLsizei n, const GLuint *programs)
static int luaglew_glDeleteProgramsARB(lua_State *L) {
	oid return_value;
	return_value = glDeleteProgramsARB((GLsizei)luaL_checklong(L, 1), (GLuint *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGenProgramsARB (GLsizei n, GLuint *programs)
static int luaglew_glGenProgramsARB(lua_State *L) {
	oid return_value;
	return_value = glGenProgramsARB((GLsizei)luaL_checklong(L, 1), (GLuint *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// Lboolean glIsProgramARB (GLuint program)
static int luaglew_glIsProgramARB(lua_State *L) {
	Lboolean return_value;
	return_value = glIsProgramARB((GLuint)luaL_checkint(L, 1));
	push( ** nespracovany typ Lboolean ** );
	return 1;
}

// oid glProgramEnvParameter4dARB (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w)
static int luaglew_glProgramEnvParameter4dARB(lua_State *L) {
	oid return_value;
	return_value = glProgramEnvParameter4dARB(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2), (GLdouble)luaL_checknumber(L, 3), (GLdouble)luaL_checknumber(L, 4), (GLdouble)luaL_checknumber(L, 5), (GLdouble)luaL_checknumber(L, 6));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glProgramEnvParameter4dvARB (GLenum target, GLuint index, const GLdouble *params)
static int luaglew_glProgramEnvParameter4dvARB(lua_State *L) {
	oid return_value;
	return_value = glProgramEnvParameter4dvARB(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2), (GLdouble *)luaglew_checkarray_doublefloat(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glProgramEnvParameter4fARB (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w)
static int luaglew_glProgramEnvParameter4fARB(lua_State *L) {
	oid return_value;
	return_value = glProgramEnvParameter4fARB(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2), (GLfloat)luaL_checknumber(L, 3), (GLfloat)luaL_checknumber(L, 4), (GLfloat)luaL_checknumber(L, 5), (GLfloat)luaL_checknumber(L, 6));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glProgramEnvParameter4fvARB (GLenum target, GLuint index, const GLfloat *params)
static int luaglew_glProgramEnvParameter4fvARB(lua_State *L) {
	oid return_value;
	return_value = glProgramEnvParameter4fvARB(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2), (GLfloat *)luaglew_checkarray_doublefloat(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glProgramLocalParameter4dARB (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w)
static int luaglew_glProgramLocalParameter4dARB(lua_State *L) {
	oid return_value;
	return_value = glProgramLocalParameter4dARB(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2), (GLdouble)luaL_checknumber(L, 3), (GLdouble)luaL_checknumber(L, 4), (GLdouble)luaL_checknumber(L, 5), (GLdouble)luaL_checknumber(L, 6));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glProgramLocalParameter4dvARB (GLenum target, GLuint index, const GLdouble *params)
static int luaglew_glProgramLocalParameter4dvARB(lua_State *L) {
	oid return_value;
	return_value = glProgramLocalParameter4dvARB(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2), (GLdouble *)luaglew_checkarray_doublefloat(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glProgramLocalParameter4fARB (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w)
static int luaglew_glProgramLocalParameter4fARB(lua_State *L) {
	oid return_value;
	return_value = glProgramLocalParameter4fARB(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2), (GLfloat)luaL_checknumber(L, 3), (GLfloat)luaL_checknumber(L, 4), (GLfloat)luaL_checknumber(L, 5), (GLfloat)luaL_checknumber(L, 6));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glProgramLocalParameter4fvARB (GLenum target, GLuint index, const GLfloat *params)
static int luaglew_glProgramLocalParameter4fvARB(lua_State *L) {
	oid return_value;
	return_value = glProgramLocalParameter4fvARB(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2), (GLfloat *)luaglew_checkarray_doublefloat(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetProgramEnvParameterdvARB (GLenum target, GLuint index, GLdouble *params)
static int luaglew_glGetProgramEnvParameterdvARB(lua_State *L) {
	oid return_value;
	return_value = glGetProgramEnvParameterdvARB(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2), (GLdouble *)luaglew_checkarray_doublefloat(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetProgramEnvParameterfvARB (GLenum target, GLuint index, GLfloat *params)
static int luaglew_glGetProgramEnvParameterfvARB(lua_State *L) {
	oid return_value;
	return_value = glGetProgramEnvParameterfvARB(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2), (GLfloat *)luaglew_checkarray_doublefloat(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glProgramEnvParameters4fvEXT (GLenum target, GLuint index, GLsizei count, const GLfloat *params)
static int luaglew_glProgramEnvParameters4fvEXT(lua_State *L) {
	oid return_value;
	return_value = glProgramEnvParameters4fvEXT(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLfloat *)luaglew_checkarray_doublefloat(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glProgramLocalParameters4fvEXT (GLenum target, GLuint index, GLsizei count, const GLfloat *params)
static int luaglew_glProgramLocalParameters4fvEXT(lua_State *L) {
	oid return_value;
	return_value = glProgramLocalParameters4fvEXT(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLfloat *)luaglew_checkarray_doublefloat(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetProgramLocalParameterdvARB (GLenum target, GLuint index, GLdouble *params)
static int luaglew_glGetProgramLocalParameterdvARB(lua_State *L) {
	oid return_value;
	return_value = glGetProgramLocalParameterdvARB(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2), (GLdouble *)luaglew_checkarray_doublefloat(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetProgramLocalParameterfvARB (GLenum target, GLuint index, GLfloat *params)
static int luaglew_glGetProgramLocalParameterfvARB(lua_State *L) {
	oid return_value;
	return_value = glGetProgramLocalParameterfvARB(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2), (GLfloat *)luaglew_checkarray_doublefloat(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glProgramStringARB (GLenum target, GLenum format, GLsizei len, const GLvoid *string)
static int luaglew_glProgramStringARB(lua_State *L) {
	oid return_value;
	return_value = glProgramStringARB(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLsizei)luaL_checklong(L, 3), (GLvoid *)luaglew_checkarray_void(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetProgramStringARB (GLenum target, GLenum pname, GLvoid *string)
static int luaglew_glGetProgramStringARB(lua_State *L) {
	oid return_value;
	return_value = glGetProgramStringARB(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLvoid *)luaglew_checkarray_void(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetProgramivARB (GLenum target, GLenum pname, GLint *params)
static int luaglew_glGetProgramivARB(lua_State *L) {
	oid return_value;
	return_value = glGetProgramivARB(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib1dARB (GLuint index, GLdouble x)
static int luaglew_glVertexAttrib1dARB(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib1dARB((GLuint)luaL_checkint(L, 1), (GLdouble)luaL_checknumber(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib1dvARB (GLuint index, const GLdouble *v)
static int luaglew_glVertexAttrib1dvARB(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib1dvARB((GLuint)luaL_checkint(L, 1), (GLdouble *)luaglew_checkarray_doublefloat(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib1fARB (GLuint index, GLfloat x)
static int luaglew_glVertexAttrib1fARB(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib1fARB((GLuint)luaL_checkint(L, 1), (GLfloat)luaL_checknumber(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib1fvARB (GLuint index, const GLfloat *v)
static int luaglew_glVertexAttrib1fvARB(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib1fvARB((GLuint)luaL_checkint(L, 1), (GLfloat *)luaglew_checkarray_doublefloat(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib1sARB (GLuint index, GLshort x)
static int luaglew_glVertexAttrib1sARB(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib1sARB((GLuint)luaL_checkint(L, 1), (GLshort)luaL_checkinteger(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib1svARB (GLuint index, const GLshort *v)
static int luaglew_glVertexAttrib1svARB(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib1svARB((GLuint)luaL_checkint(L, 1), (GLshort *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib2dARB (GLuint index, GLdouble x, GLdouble y)
static int luaglew_glVertexAttrib2dARB(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib2dARB((GLuint)luaL_checkint(L, 1), (GLdouble)luaL_checknumber(L, 2), (GLdouble)luaL_checknumber(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib2dvARB (GLuint index, const GLdouble *v)
static int luaglew_glVertexAttrib2dvARB(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib2dvARB((GLuint)luaL_checkint(L, 1), (GLdouble *)luaglew_checkarray_doublefloat(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib2fARB (GLuint index, GLfloat x, GLfloat y)
static int luaglew_glVertexAttrib2fARB(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib2fARB((GLuint)luaL_checkint(L, 1), (GLfloat)luaL_checknumber(L, 2), (GLfloat)luaL_checknumber(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib2fvARB (GLuint index, const GLfloat *v)
static int luaglew_glVertexAttrib2fvARB(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib2fvARB((GLuint)luaL_checkint(L, 1), (GLfloat *)luaglew_checkarray_doublefloat(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib2sARB (GLuint index, GLshort x, GLshort y)
static int luaglew_glVertexAttrib2sARB(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib2sARB((GLuint)luaL_checkint(L, 1), (GLshort)luaL_checkinteger(L, 2), (GLshort)luaL_checkinteger(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib2svARB (GLuint index, const GLshort *v)
static int luaglew_glVertexAttrib2svARB(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib2svARB((GLuint)luaL_checkint(L, 1), (GLshort *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib3dARB (GLuint index, GLdouble x, GLdouble y, GLdouble z)
static int luaglew_glVertexAttrib3dARB(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib3dARB((GLuint)luaL_checkint(L, 1), (GLdouble)luaL_checknumber(L, 2), (GLdouble)luaL_checknumber(L, 3), (GLdouble)luaL_checknumber(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib3dvARB (GLuint index, const GLdouble *v)
static int luaglew_glVertexAttrib3dvARB(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib3dvARB((GLuint)luaL_checkint(L, 1), (GLdouble *)luaglew_checkarray_doublefloat(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib3fARB (GLuint index, GLfloat x, GLfloat y, GLfloat z)
static int luaglew_glVertexAttrib3fARB(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib3fARB((GLuint)luaL_checkint(L, 1), (GLfloat)luaL_checknumber(L, 2), (GLfloat)luaL_checknumber(L, 3), (GLfloat)luaL_checknumber(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib3fvARB (GLuint index, const GLfloat *v)
static int luaglew_glVertexAttrib3fvARB(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib3fvARB((GLuint)luaL_checkint(L, 1), (GLfloat *)luaglew_checkarray_doublefloat(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib3sARB (GLuint index, GLshort x, GLshort y, GLshort z)
static int luaglew_glVertexAttrib3sARB(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib3sARB((GLuint)luaL_checkint(L, 1), (GLshort)luaL_checkinteger(L, 2), (GLshort)luaL_checkinteger(L, 3), (GLshort)luaL_checkinteger(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib3svARB (GLuint index, const GLshort *v)
static int luaglew_glVertexAttrib3svARB(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib3svARB((GLuint)luaL_checkint(L, 1), (GLshort *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib4NbvARB (GLuint index, const GLbyte *v)
static int luaglew_glVertexAttrib4NbvARB(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib4NbvARB((GLuint)luaL_checkint(L, 1), (GLbyte *)luaglew_checkarray_byte(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib4NivARB (GLuint index, const GLint *v)
static int luaglew_glVertexAttrib4NivARB(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib4NivARB((GLuint)luaL_checkint(L, 1), (GLint *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib4NsvARB (GLuint index, const GLshort *v)
static int luaglew_glVertexAttrib4NsvARB(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib4NsvARB((GLuint)luaL_checkint(L, 1), (GLshort *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib4NubARB (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w)
static int luaglew_glVertexAttrib4NubARB(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib4NubARB((GLuint)luaL_checkint(L, 1), (GLubyte)luaL_checknumber(L, 2), (GLubyte)luaL_checknumber(L, 3), (GLubyte)luaL_checknumber(L, 4), (GLubyte)luaL_checknumber(L, 5));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib4NubvARB (GLuint index, const GLubyte *v)
static int luaglew_glVertexAttrib4NubvARB(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib4NubvARB((GLuint)luaL_checkint(L, 1), (GLubyte *)luaglew_checkarray_ubyte(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib4NuivARB (GLuint index, const GLuint *v)
static int luaglew_glVertexAttrib4NuivARB(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib4NuivARB((GLuint)luaL_checkint(L, 1), (GLuint *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib4NusvARB (GLuint index, const GLushort *v)
static int luaglew_glVertexAttrib4NusvARB(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib4NusvARB((GLuint)luaL_checkint(L, 1), (GLushort *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib4bvARB (GLuint index, const GLbyte *v)
static int luaglew_glVertexAttrib4bvARB(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib4bvARB((GLuint)luaL_checkint(L, 1), (GLbyte *)luaglew_checkarray_byte(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib4dARB (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w)
static int luaglew_glVertexAttrib4dARB(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib4dARB((GLuint)luaL_checkint(L, 1), (GLdouble)luaL_checknumber(L, 2), (GLdouble)luaL_checknumber(L, 3), (GLdouble)luaL_checknumber(L, 4), (GLdouble)luaL_checknumber(L, 5));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib4dvARB (GLuint index, const GLdouble *v)
static int luaglew_glVertexAttrib4dvARB(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib4dvARB((GLuint)luaL_checkint(L, 1), (GLdouble *)luaglew_checkarray_doublefloat(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib4fARB (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w)
static int luaglew_glVertexAttrib4fARB(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib4fARB((GLuint)luaL_checkint(L, 1), (GLfloat)luaL_checknumber(L, 2), (GLfloat)luaL_checknumber(L, 3), (GLfloat)luaL_checknumber(L, 4), (GLfloat)luaL_checknumber(L, 5));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib4fvARB (GLuint index, const GLfloat *v)
static int luaglew_glVertexAttrib4fvARB(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib4fvARB((GLuint)luaL_checkint(L, 1), (GLfloat *)luaglew_checkarray_doublefloat(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib4ivARB (GLuint index, const GLint *v)
static int luaglew_glVertexAttrib4ivARB(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib4ivARB((GLuint)luaL_checkint(L, 1), (GLint *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib4sARB (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w)
static int luaglew_glVertexAttrib4sARB(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib4sARB((GLuint)luaL_checkint(L, 1), (GLshort)luaL_checkinteger(L, 2), (GLshort)luaL_checkinteger(L, 3), (GLshort)luaL_checkinteger(L, 4), (GLshort)luaL_checkinteger(L, 5));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib4svARB (GLuint index, const GLshort *v)
static int luaglew_glVertexAttrib4svARB(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib4svARB((GLuint)luaL_checkint(L, 1), (GLshort *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib4ubvARB (GLuint index, const GLubyte *v)
static int luaglew_glVertexAttrib4ubvARB(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib4ubvARB((GLuint)luaL_checkint(L, 1), (GLubyte *)luaglew_checkarray_ubyte(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib4uivARB (GLuint index, const GLuint *v)
static int luaglew_glVertexAttrib4uivARB(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib4uivARB((GLuint)luaL_checkint(L, 1), (GLuint *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib4usvARB (GLuint index, const GLushort *v)
static int luaglew_glVertexAttrib4usvARB(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib4usvARB((GLuint)luaL_checkint(L, 1), (GLushort *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttribPointerARB (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid *pointer)
static int luaglew_glVertexAttribPointerARB(lua_State *L) {
	oid return_value;
	return_value = glVertexAttribPointerARB((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), luaglew_checkenum(L, 3), (GLboolean)lua_toboolean(L, 4), (GLsizei)luaL_checklong(L, 5), luaglew_checkarray_int(L, 6));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glDisableVertexAttribArrayARB (GLuint index)
static int luaglew_glDisableVertexAttribArrayARB(lua_State *L) {
	oid return_value;
	return_value = glDisableVertexAttribArrayARB((GLuint)luaL_checkint(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glEnableVertexAttribArrayARB (GLuint index)
static int luaglew_glEnableVertexAttribArrayARB(lua_State *L) {
	oid return_value;
	return_value = glEnableVertexAttribArrayARB((GLuint)luaL_checkint(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetVertexAttribPointervARB (GLuint index, GLenum pname, GLvoid **pointer)
static int luaglew_glGetVertexAttribPointervARB(lua_State *L) {
	oid return_value;
	return_value = glGetVertexAttribPointervARB((GLuint)luaL_checkint(L, 1), luaglew_checkenum(L, 2), luaglew_checkarray_2void(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetVertexAttribdvARB (GLuint index, GLenum pname, GLdouble *params)
static int luaglew_glGetVertexAttribdvARB(lua_State *L) {
	oid return_value;
	return_value = glGetVertexAttribdvARB((GLuint)luaL_checkint(L, 1), luaglew_checkenum(L, 2), (GLdouble *)luaglew_checkarray_doublefloat(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetVertexAttribfvARB (GLuint index, GLenum pname, GLfloat *params)
static int luaglew_glGetVertexAttribfvARB(lua_State *L) {
	oid return_value;
	return_value = glGetVertexAttribfvARB((GLuint)luaL_checkint(L, 1), luaglew_checkenum(L, 2), (GLfloat *)luaglew_checkarray_doublefloat(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetVertexAttribivARB (GLuint index, GLenum pname, GLint *params)
static int luaglew_glGetVertexAttribivARB(lua_State *L) {
	oid return_value;
	return_value = glGetVertexAttribivARB((GLuint)luaL_checkint(L, 1), luaglew_checkenum(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glDeleteObjectARB (GLhandleARB obj)
static int luaglew_glDeleteObjectARB(lua_State *L) {
	oid return_value;
	return_value = glDeleteObjectARB(**check nespracovany typ GLhandleARB **);
	push( ** nespracovany typ oid ** );
	return 1;
}

// LhandleARB glGetHandleARB (GLenum pname)
static int luaglew_glGetHandleARB(lua_State *L) {
	LhandleARB return_value;
	return_value = glGetHandleARB(luaglew_checkenum(L, 1));
	push( ** nespracovany typ LhandleARB ** );
	return 1;
}

// oid glDetachObjectARB (GLhandleARB containerObj, GLhandleARB attachedObj)
static int luaglew_glDetachObjectARB(lua_State *L) {
	oid return_value;
	return_value = glDetachObjectARB(**check nespracovany typ GLhandleARB **, **check nespracovany typ GLhandleARB **);
	push( ** nespracovany typ oid ** );
	return 1;
}

// LhandleARB glCreateShaderObjectARB (GLenum shaderType)
static int luaglew_glCreateShaderObjectARB(lua_State *L) {
	LhandleARB return_value;
	return_value = glCreateShaderObjectARB(luaglew_checkenum(L, 1));
	push( ** nespracovany typ LhandleARB ** );
	return 1;
}

// oid glShaderSourceARB (GLhandleARB shaderObj, GLsizei count, const GLcharARB **string, const GLint *length)
static int luaglew_glShaderSourceARB(lua_State *L) {
	oid return_value;
	return_value = glShaderSourceARB(**check nespracovany typ GLhandleARB **, (GLsizei)luaL_checklong(L, 2), (GLchar **)luaglew_checkarray_2char(L, 3), (GLint *)luaglew_checkarray_int(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glCompileShaderARB (GLhandleARB shaderObj)
static int luaglew_glCompileShaderARB(lua_State *L) {
	oid return_value;
	return_value = glCompileShaderARB(**check nespracovany typ GLhandleARB **);
	push( ** nespracovany typ oid ** );
	return 1;
}

// LhandleARB glCreateProgramObjectARB (void)
static int luaglew_glCreateProgramObjectARB(lua_State *L) {
	LhandleARB return_value;
	return_value = glCreateProgramObjectARB();
	push( ** nespracovany typ LhandleARB ** );
	return 1;
}

// oid glAttachObjectARB (GLhandleARB containerObj, GLhandleARB obj)
static int luaglew_glAttachObjectARB(lua_State *L) {
	oid return_value;
	return_value = glAttachObjectARB(**check nespracovany typ GLhandleARB **, **check nespracovany typ GLhandleARB **);
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glLinkProgramARB (GLhandleARB programObj)
static int luaglew_glLinkProgramARB(lua_State *L) {
	oid return_value;
	return_value = glLinkProgramARB(**check nespracovany typ GLhandleARB **);
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glUseProgramObjectARB (GLhandleARB programObj)
static int luaglew_glUseProgramObjectARB(lua_State *L) {
	oid return_value;
	return_value = glUseProgramObjectARB(**check nespracovany typ GLhandleARB **);
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glValidateProgramARB (GLhandleARB programObj)
static int luaglew_glValidateProgramARB(lua_State *L) {
	oid return_value;
	return_value = glValidateProgramARB(**check nespracovany typ GLhandleARB **);
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glUniform1fARB (GLint location, GLfloat v0)
static int luaglew_glUniform1fARB(lua_State *L) {
	oid return_value;
	return_value = glUniform1fARB((GLint)luaL_checkint(L, 1), (GLfloat)luaL_checknumber(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glUniform2fARB (GLint location, GLfloat v0, GLfloat v1)
static int luaglew_glUniform2fARB(lua_State *L) {
	oid return_value;
	return_value = glUniform2fARB((GLint)luaL_checkint(L, 1), (GLfloat)luaL_checknumber(L, 2), (GLfloat)luaL_checknumber(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glUniform3fARB (GLint location, GLfloat v0, GLfloat v1, GLfloat v2)
static int luaglew_glUniform3fARB(lua_State *L) {
	oid return_value;
	return_value = glUniform3fARB((GLint)luaL_checkint(L, 1), (GLfloat)luaL_checknumber(L, 2), (GLfloat)luaL_checknumber(L, 3), (GLfloat)luaL_checknumber(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glUniform4fARB (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3)
static int luaglew_glUniform4fARB(lua_State *L) {
	oid return_value;
	return_value = glUniform4fARB((GLint)luaL_checkint(L, 1), (GLfloat)luaL_checknumber(L, 2), (GLfloat)luaL_checknumber(L, 3), (GLfloat)luaL_checknumber(L, 4), (GLfloat)luaL_checknumber(L, 5));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glUniform1iARB (GLint location, GLint v0)
static int luaglew_glUniform1iARB(lua_State *L) {
	oid return_value;
	return_value = glUniform1iARB((GLint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glUniform2iARB (GLint location, GLint v0, GLint v1)
static int luaglew_glUniform2iARB(lua_State *L) {
	oid return_value;
	return_value = glUniform2iARB((GLint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glUniform3iARB (GLint location, GLint v0, GLint v1, GLint v2)
static int luaglew_glUniform3iARB(lua_State *L) {
	oid return_value;
	return_value = glUniform3iARB((GLint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glUniform4iARB (GLint location, GLint v0, GLint v1, GLint v2, GLint v3)
static int luaglew_glUniform4iARB(lua_State *L) {
	oid return_value;
	return_value = glUniform4iARB((GLint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4), (GLint)luaL_checkint(L, 5));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glUniform1fvARB (GLint location, GLsizei count, const GLfloat *value)
static int luaglew_glUniform1fvARB(lua_State *L) {
	oid return_value;
	return_value = glUniform1fvARB((GLint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLfloat *)luaglew_checkarray_doublefloat(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glUniform2fvARB (GLint location, GLsizei count, const GLfloat *value)
static int luaglew_glUniform2fvARB(lua_State *L) {
	oid return_value;
	return_value = glUniform2fvARB((GLint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLfloat *)luaglew_checkarray_doublefloat(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glUniform3fvARB (GLint location, GLsizei count, const GLfloat *value)
static int luaglew_glUniform3fvARB(lua_State *L) {
	oid return_value;
	return_value = glUniform3fvARB((GLint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLfloat *)luaglew_checkarray_doublefloat(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glUniform4fvARB (GLint location, GLsizei count, const GLfloat *value)
static int luaglew_glUniform4fvARB(lua_State *L) {
	oid return_value;
	return_value = glUniform4fvARB((GLint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLfloat *)luaglew_checkarray_doublefloat(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glUniform1ivARB (GLint location, GLsizei count, const GLint *value)
static int luaglew_glUniform1ivARB(lua_State *L) {
	oid return_value;
	return_value = glUniform1ivARB((GLint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glUniform2ivARB (GLint location, GLsizei count, const GLint *value)
static int luaglew_glUniform2ivARB(lua_State *L) {
	oid return_value;
	return_value = glUniform2ivARB((GLint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glUniform3ivARB (GLint location, GLsizei count, const GLint *value)
static int luaglew_glUniform3ivARB(lua_State *L) {
	oid return_value;
	return_value = glUniform3ivARB((GLint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glUniform4ivARB (GLint location, GLsizei count, const GLint *value)
static int luaglew_glUniform4ivARB(lua_State *L) {
	oid return_value;
	return_value = glUniform4ivARB((GLint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glUniformMatrix2fvARB (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
static int luaglew_glUniformMatrix2fvARB(lua_State *L) {
	oid return_value;
	return_value = glUniformMatrix2fvARB((GLint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLboolean)lua_toboolean(L, 3), (GLfloat *)luaglew_checkarray_doublefloat(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glUniformMatrix3fvARB (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
static int luaglew_glUniformMatrix3fvARB(lua_State *L) {
	oid return_value;
	return_value = glUniformMatrix3fvARB((GLint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLboolean)lua_toboolean(L, 3), (GLfloat *)luaglew_checkarray_doublefloat(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glUniformMatrix4fvARB (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
static int luaglew_glUniformMatrix4fvARB(lua_State *L) {
	oid return_value;
	return_value = glUniformMatrix4fvARB((GLint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLboolean)lua_toboolean(L, 3), (GLfloat *)luaglew_checkarray_doublefloat(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetObjectParameterfvARB (GLhandleARB obj, GLenum pname, GLfloat *params)
static int luaglew_glGetObjectParameterfvARB(lua_State *L) {
	oid return_value;
	return_value = glGetObjectParameterfvARB(**check nespracovany typ GLhandleARB **, luaglew_checkenum(L, 2), (GLfloat *)luaglew_checkarray_doublefloat(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetObjectParameterivARB (GLhandleARB obj, GLenum pname, GLint *params)
static int luaglew_glGetObjectParameterivARB(lua_State *L) {
	oid return_value;
	return_value = glGetObjectParameterivARB(**check nespracovany typ GLhandleARB **, luaglew_checkenum(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetInfoLogARB (GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *infoLog)
static int luaglew_glGetInfoLogARB(lua_State *L) {
	oid return_value;
	return_value = glGetInfoLogARB(**check nespracovany typ GLhandleARB **, (GLsizei)luaL_checklong(L, 2), (GLsizei *)luaglew_checkarray_int(L, 3), (GLchar *)luaglew_checkarray_char(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetAttachedObjectsARB (GLhandleARB containerObj, GLsizei maxCount, GLsizei *count, GLhandleARB *obj)
static int luaglew_glGetAttachedObjectsARB(lua_State *L) {
	oid return_value;
	return_value = glGetAttachedObjectsARB(**check nespracovany typ GLhandleARB **, (GLsizei)luaL_checklong(L, 2), (GLsizei *)luaglew_checkarray_int(L, 3), **check 1-rozmerne pole typu GLhandleARB **);
	push( ** nespracovany typ oid ** );
	return 1;
}

// Lint glGetUniformLocationARB (GLhandleARB programObj, const GLcharARB *name)
static int luaglew_glGetUniformLocationARB(lua_State *L) {
	Lint return_value;
	return_value = glGetUniformLocationARB(**check nespracovany typ GLhandleARB **, (GLchar *)luaglew_checkarray_char(L, 2));
	lua_pushinteger(L, return_value);
	return 1;
}

// oid glGetActiveUniformARB (GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name)
static int luaglew_glGetActiveUniformARB(lua_State *L) {
	oid return_value;
	return_value = glGetActiveUniformARB(**check nespracovany typ GLhandleARB **, (GLuint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLsizei *)luaglew_checkarray_int(L, 4), (GLint *)luaglew_checkarray_int(L, 5), luaglew_checkarray_enum(L, 6), (GLchar *)luaglew_checkarray_char(L, 7));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetUniformfvARB (GLhandleARB programObj, GLint location, GLfloat *params)
static int luaglew_glGetUniformfvARB(lua_State *L) {
	oid return_value;
	return_value = glGetUniformfvARB(**check nespracovany typ GLhandleARB **, (GLint)luaL_checkint(L, 2), (GLfloat *)luaglew_checkarray_doublefloat(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetUniformivARB (GLhandleARB programObj, GLint location, GLint *params)
static int luaglew_glGetUniformivARB(lua_State *L) {
	oid return_value;
	return_value = glGetUniformivARB(**check nespracovany typ GLhandleARB **, (GLint)luaL_checkint(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetShaderSourceARB (GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *source)
static int luaglew_glGetShaderSourceARB(lua_State *L) {
	oid return_value;
	return_value = glGetShaderSourceARB(**check nespracovany typ GLhandleARB **, (GLsizei)luaL_checklong(L, 2), (GLsizei *)luaglew_checkarray_int(L, 3), (GLchar *)luaglew_checkarray_char(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glBindAttribLocationARB (GLhandleARB programObj, GLuint index, const GLcharARB *name)
static int luaglew_glBindAttribLocationARB(lua_State *L) {
	oid return_value;
	return_value = glBindAttribLocationARB(**check nespracovany typ GLhandleARB **, (GLuint)luaL_checkint(L, 2), (GLchar *)luaglew_checkarray_char(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetActiveAttribARB (GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name)
static int luaglew_glGetActiveAttribARB(lua_State *L) {
	oid return_value;
	return_value = glGetActiveAttribARB(**check nespracovany typ GLhandleARB **, (GLuint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLsizei *)luaglew_checkarray_int(L, 4), (GLint *)luaglew_checkarray_int(L, 5), luaglew_checkarray_enum(L, 6), (GLchar *)luaglew_checkarray_char(L, 7));
	push( ** nespracovany typ oid ** );
	return 1;
}

// Lint glGetAttribLocationARB (GLhandleARB programObj, const GLcharARB *name)
static int luaglew_glGetAttribLocationARB(lua_State *L) {
	Lint return_value;
	return_value = glGetAttribLocationARB(**check nespracovany typ GLhandleARB **, (GLchar *)luaglew_checkarray_char(L, 2));
	lua_pushinteger(L, return_value);
	return 1;
}

// oid glBindBufferARB (GLenum target, GLuint buffer)
static int luaglew_glBindBufferARB(lua_State *L) {
	oid return_value;
	return_value = glBindBufferARB(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glDeleteBuffersARB (GLsizei n, const GLuint *buffers)
static int luaglew_glDeleteBuffersARB(lua_State *L) {
	oid return_value;
	return_value = glDeleteBuffersARB((GLsizei)luaL_checklong(L, 1), (GLuint *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGenBuffersARB (GLsizei n, GLuint *buffers)
static int luaglew_glGenBuffersARB(lua_State *L) {
	oid return_value;
	return_value = glGenBuffersARB((GLsizei)luaL_checklong(L, 1), (GLuint *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// Lboolean glIsBufferARB (GLuint buffer)
static int luaglew_glIsBufferARB(lua_State *L) {
	Lboolean return_value;
	return_value = glIsBufferARB((GLuint)luaL_checkint(L, 1));
	push( ** nespracovany typ Lboolean ** );
	return 1;
}

// oid glBufferDataARB (GLenum target, GLsizeiptrARB size, const GLvoid *data, GLenum usage)
static int luaglew_glBufferDataARB(lua_State *L) {
	oid return_value;
	return_value = glBufferDataARB(luaglew_checkenum(L, 1), (GLsizei)luaL_checklong(L, 2), (GLvoid *)luaglew_checkarray_void(L, 3), luaglew_checkenum(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glBufferSubDataARB (GLenum target, GLintptrARB offset, GLsizeiptrARB size, const GLvoid *data)
static int luaglew_glBufferSubDataARB(lua_State *L) {
	oid return_value;
	return_value = glBufferSubDataARB(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLvoid *)luaglew_checkarray_void(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetBufferSubDataARB (GLenum target, GLintptrARB offset, GLsizeiptrARB size, GLvoid *data)
static int luaglew_glGetBufferSubDataARB(lua_State *L) {
	oid return_value;
	return_value = glGetBufferSubDataARB(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLvoid *)luaglew_checkarray_void(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// Lboolean glUnmapBufferARB (GLenum target)
static int luaglew_glUnmapBufferARB(lua_State *L) {
	Lboolean return_value;
	return_value = glUnmapBufferARB(luaglew_checkenum(L, 1));
	push( ** nespracovany typ Lboolean ** );
	return 1;
}

// oid glGetBufferParameterivARB (GLenum target, GLenum pname, GLint *params)
static int luaglew_glGetBufferParameterivARB(lua_State *L) {
	oid return_value;
	return_value = glGetBufferParameterivARB(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetBufferPointervARB (GLenum target, GLenum pname, GLvoid **params)
static int luaglew_glGetBufferPointervARB(lua_State *L) {
	oid return_value;
	return_value = glGetBufferPointervARB(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), luaglew_checkarray_2void(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glDrawBuffersARB (GLsizei n, const GLenum *bufs)
static int luaglew_glDrawBuffersARB(lua_State *L) {
	oid return_value;
	return_value = glDrawBuffersARB((GLsizei)luaL_checklong(L, 1), luaglew_checkarray_enum(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glClampColorARB (GLenum target, GLenum clamp)
static int luaglew_glClampColorARB(lua_State *L) {
	oid return_value;
	return_value = glClampColorARB(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glDrawArraysInstancedARB (GLenum mode, GLint first, GLsizei count, GLsizei primcount)
static int luaglew_glDrawArraysInstancedARB(lua_State *L) {
	oid return_value;
	return_value = glDrawArraysInstancedARB(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLsizei)luaL_checklong(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glDrawElementsInstancedARB (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei primcount)
static int luaglew_glDrawElementsInstancedARB(lua_State *L) {
	oid return_value;
	return_value = glDrawElementsInstancedARB(luaglew_checkenum(L, 1), (GLsizei)luaL_checklong(L, 2), luaglew_checkenum(L, 3), (GLvoid *)luaglew_checkarray_void(L, 4), (GLsizei)luaL_checklong(L, 5));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttribDivisorARB (GLuint index, GLuint divisor)
static int luaglew_glVertexAttribDivisorARB(lua_State *L) {
	oid return_value;
	return_value = glVertexAttribDivisorARB((GLuint)luaL_checkint(L, 1), (GLuint)luaL_checkint(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetUniformIndices (GLuint program, GLsizei uniformCount, const GLchar** uniformNames, GLuint* uniformIndices)
static int luaglew_glGetUniformIndices(lua_State *L) {
	oid return_value;
	return_value = glGetUniformIndices((GLuint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLchar **)luaglew_checkarray_2char(L, 3), (GLuint *)luaglew_checkarray_int(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetActiveUniformsiv (GLuint program, GLsizei uniformCount, const GLuint* uniformIndices, GLenum pname, GLint* params)
static int luaglew_glGetActiveUniformsiv(lua_State *L) {
	oid return_value;
	return_value = glGetActiveUniformsiv((GLuint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLuint *)luaglew_checkarray_int(L, 3), luaglew_checkenum(L, 4), (GLint *)luaglew_checkarray_int(L, 5));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetActiveUniformName (GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei* length, GLchar* uniformName)
static int luaglew_glGetActiveUniformName(lua_State *L) {
	oid return_value;
	return_value = glGetActiveUniformName((GLuint)luaL_checkint(L, 1), (GLuint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLsizei *)luaglew_checkarray_int(L, 4), (GLchar *)luaglew_checkarray_char(L, 5));
	push( ** nespracovany typ oid ** );
	return 1;
}

// Luint glGetUniformBlockIndex (GLuint program, const GLchar* uniformBlockName)
static int luaglew_glGetUniformBlockIndex(lua_State *L) {
	Luint return_value;
	return_value = glGetUniformBlockIndex((GLuint)luaL_checkint(L, 1), (GLchar *)luaglew_checkarray_char(L, 2));
	lua_pushinteger(L, return_value);
	return 1;
}

// oid glGetActiveUniformBlockiv (GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint* params)
static int luaglew_glGetActiveUniformBlockiv(lua_State *L) {
	oid return_value;
	return_value = glGetActiveUniformBlockiv((GLuint)luaL_checkint(L, 1), (GLuint)luaL_checkint(L, 2), luaglew_checkenum(L, 3), (GLint *)luaglew_checkarray_int(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetActiveUniformBlockName (GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei* length, GLchar* uniformBlockName)
static int luaglew_glGetActiveUniformBlockName(lua_State *L) {
	oid return_value;
	return_value = glGetActiveUniformBlockName((GLuint)luaL_checkint(L, 1), (GLuint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLsizei *)luaglew_checkarray_int(L, 4), (GLchar *)luaglew_checkarray_char(L, 5));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glBindBufferRange (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size)
static int luaglew_glBindBufferRange(lua_State *L) {
	oid return_value;
	return_value = glBindBufferRange(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2), (GLuint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4), (GLsizei)luaL_checklong(L, 5));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glBindBufferBase (GLenum target, GLuint index, GLuint buffer)
static int luaglew_glBindBufferBase(lua_State *L) {
	oid return_value;
	return_value = glBindBufferBase(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2), (GLuint)luaL_checkint(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetIntegeri_v (GLenum pname, GLuint index, GLint* data)
static int luaglew_glGetIntegeri_v(lua_State *L) {
	oid return_value;
	return_value = glGetIntegeri_v(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glUniformBlockBinding (GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding)
static int luaglew_glUniformBlockBinding(lua_State *L) {
	oid return_value;
	return_value = glUniformBlockBinding((GLuint)luaL_checkint(L, 1), (GLuint)luaL_checkint(L, 2), (GLuint)luaL_checkint(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glBlendColorEXT (GLclampf, GLclampf, GLclampf, GLclampf)
static int luaglew_glBlendColorEXT(lua_State *L) {
	oid return_value;
	return_value = glBlendColorEXT((GLclampf)luaL_checknumber(L, 1), (GLclampf)luaL_checknumber(L, 2), (GLclampf)luaL_checknumber(L, 3), (GLclampf)luaL_checknumber(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glBlendEquationEXT (GLenum)
static int luaglew_glBlendEquationEXT(lua_State *L) {
	oid return_value;
	return_value = glBlendEquationEXT(luaglew_checkenum(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glLockArraysEXT (GLint, GLsizei)
static int luaglew_glLockArraysEXT(lua_State *L) {
	oid return_value;
	return_value = glLockArraysEXT((GLint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glUnlockArraysEXT (void)
static int luaglew_glUnlockArraysEXT(lua_State *L) {
	oid return_value;
	return_value = glUnlockArraysEXT();
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glDrawRangeElementsEXT (GLenum, GLuint, GLuint, GLsizei, GLenum, const GLvoid *)
static int luaglew_glDrawRangeElementsEXT(lua_State *L) {
	oid return_value;
	return_value = glDrawRangeElementsEXT(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2), (GLuint)luaL_checkint(L, 3), (GLsizei)luaL_checklong(L, 4), luaglew_checkenum(L, 5), (GLvoid *)luaglew_checkarray_void(L, 6));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glSecondaryColor3bEXT (GLbyte, GLbyte, GLbyte)
static int luaglew_glSecondaryColor3bEXT(lua_State *L) {
	oid return_value;
	return_value = glSecondaryColor3bEXT((GLbyte)luaL_checknumber(L, 1), (GLbyte)luaL_checknumber(L, 2), (GLbyte)luaL_checknumber(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glSecondaryColor3bvEXT (const GLbyte *)
static int luaglew_glSecondaryColor3bvEXT(lua_State *L) {
	oid return_value;
	return_value = glSecondaryColor3bvEXT((GLbyte *)luaglew_checkarray_byte(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glSecondaryColor3dEXT (GLdouble, GLdouble, GLdouble)
static int luaglew_glSecondaryColor3dEXT(lua_State *L) {
	oid return_value;
	return_value = glSecondaryColor3dEXT((GLdouble)luaL_checknumber(L, 1), (GLdouble)luaL_checknumber(L, 2), (GLdouble)luaL_checknumber(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glSecondaryColor3dvEXT (const GLdouble *)
static int luaglew_glSecondaryColor3dvEXT(lua_State *L) {
	oid return_value;
	return_value = glSecondaryColor3dvEXT((GLdouble *)luaglew_checkarray_doublefloat(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glSecondaryColor3fEXT (GLfloat, GLfloat, GLfloat)
static int luaglew_glSecondaryColor3fEXT(lua_State *L) {
	oid return_value;
	return_value = glSecondaryColor3fEXT((GLfloat)luaL_checknumber(L, 1), (GLfloat)luaL_checknumber(L, 2), (GLfloat)luaL_checknumber(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glSecondaryColor3fvEXT (const GLfloat *)
static int luaglew_glSecondaryColor3fvEXT(lua_State *L) {
	oid return_value;
	return_value = glSecondaryColor3fvEXT((GLfloat *)luaglew_checkarray_doublefloat(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glSecondaryColor3iEXT (GLint, GLint, GLint)
static int luaglew_glSecondaryColor3iEXT(lua_State *L) {
	oid return_value;
	return_value = glSecondaryColor3iEXT((GLint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glSecondaryColor3ivEXT (const GLint *)
static int luaglew_glSecondaryColor3ivEXT(lua_State *L) {
	oid return_value;
	return_value = glSecondaryColor3ivEXT((GLint *)luaglew_checkarray_int(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glSecondaryColor3sEXT (GLshort, GLshort, GLshort)
static int luaglew_glSecondaryColor3sEXT(lua_State *L) {
	oid return_value;
	return_value = glSecondaryColor3sEXT((GLshort)luaL_checkinteger(L, 1), (GLshort)luaL_checkinteger(L, 2), (GLshort)luaL_checkinteger(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glSecondaryColor3svEXT (const GLshort *)
static int luaglew_glSecondaryColor3svEXT(lua_State *L) {
	oid return_value;
	return_value = glSecondaryColor3svEXT((GLshort *)luaglew_checkarray_int(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glSecondaryColor3ubEXT (GLubyte, GLubyte, GLubyte)
static int luaglew_glSecondaryColor3ubEXT(lua_State *L) {
	oid return_value;
	return_value = glSecondaryColor3ubEXT((GLubyte)luaL_checknumber(L, 1), (GLubyte)luaL_checknumber(L, 2), (GLubyte)luaL_checknumber(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glSecondaryColor3ubvEXT (const GLubyte *)
static int luaglew_glSecondaryColor3ubvEXT(lua_State *L) {
	oid return_value;
	return_value = glSecondaryColor3ubvEXT((GLubyte *)luaglew_checkarray_ubyte(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glSecondaryColor3uiEXT (GLuint, GLuint, GLuint)
static int luaglew_glSecondaryColor3uiEXT(lua_State *L) {
	oid return_value;
	return_value = glSecondaryColor3uiEXT((GLuint)luaL_checkint(L, 1), (GLuint)luaL_checkint(L, 2), (GLuint)luaL_checkint(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glSecondaryColor3uivEXT (const GLuint *)
static int luaglew_glSecondaryColor3uivEXT(lua_State *L) {
	oid return_value;
	return_value = glSecondaryColor3uivEXT((GLuint *)luaglew_checkarray_int(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glSecondaryColor3usEXT (GLushort, GLushort, GLushort)
static int luaglew_glSecondaryColor3usEXT(lua_State *L) {
	oid return_value;
	return_value = glSecondaryColor3usEXT((GLushort)luaL_checkinteger(L, 1), (GLushort)luaL_checkinteger(L, 2), (GLushort)luaL_checkinteger(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glSecondaryColor3usvEXT (const GLushort *)
static int luaglew_glSecondaryColor3usvEXT(lua_State *L) {
	oid return_value;
	return_value = glSecondaryColor3usvEXT((GLushort *)luaglew_checkarray_int(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glSecondaryColorPointerEXT (GLint, GLenum, GLsizei, const GLvoid *)
static int luaglew_glSecondaryColorPointerEXT(lua_State *L) {
	oid return_value;
	return_value = glSecondaryColorPointerEXT((GLint)luaL_checkint(L, 1), luaglew_checkenum(L, 2), (GLsizei)luaL_checklong(L, 3), (GLvoid *)luaglew_checkarray_void(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultiDrawArraysEXT (GLenum, const GLint *, const GLsizei *, GLsizei)
static int luaglew_glMultiDrawArraysEXT(lua_State *L) {
	oid return_value;
	return_value = glMultiDrawArraysEXT(luaglew_checkenum(L, 1), (GLint *)luaglew_checkarray_int(L, 2), (GLsizei *)luaglew_checkarray_int(L, 3), (GLsizei)luaL_checklong(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultiDrawElementsEXT (GLenum, const GLsizei *, GLenum, const GLvoid* *, GLsizei)
static int luaglew_glMultiDrawElementsEXT(lua_State *L) {
	oid return_value;
	return_value = glMultiDrawElementsEXT(luaglew_checkenum(L, 1), (GLsizei *)luaglew_checkarray_int(L, 2), luaglew_checkenum(L, 3), (GLvoid *)luaglew_checkarray_void(L, 4), (GLsizei)luaL_checklong(L, 5));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glFogCoordfEXT (GLfloat)
static int luaglew_glFogCoordfEXT(lua_State *L) {
	oid return_value;
	return_value = glFogCoordfEXT((GLfloat)luaL_checknumber(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glFogCoordfvEXT (const GLfloat *)
static int luaglew_glFogCoordfvEXT(lua_State *L) {
	oid return_value;
	return_value = glFogCoordfvEXT((GLfloat *)luaglew_checkarray_doublefloat(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glFogCoorddEXT (GLdouble)
static int luaglew_glFogCoorddEXT(lua_State *L) {
	oid return_value;
	return_value = glFogCoorddEXT((GLdouble)luaL_checknumber(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glFogCoorddvEXT (const GLdouble *)
static int luaglew_glFogCoorddvEXT(lua_State *L) {
	oid return_value;
	return_value = glFogCoorddvEXT((GLdouble *)luaglew_checkarray_doublefloat(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glFogCoordPointerEXT (GLenum, GLsizei, const GLvoid *)
static int luaglew_glFogCoordPointerEXT(lua_State *L) {
	oid return_value;
	return_value = glFogCoordPointerEXT(luaglew_checkenum(L, 1), (GLsizei)luaL_checklong(L, 2), (GLvoid *)luaglew_checkarray_void(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glBlendFuncSeparateEXT (GLenum, GLenum, GLenum, GLenum)
static int luaglew_glBlendFuncSeparateEXT(lua_State *L) {
	oid return_value;
	return_value = glBlendFuncSeparateEXT(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), luaglew_checkenum(L, 3), luaglew_checkenum(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glActiveStencilFaceEXT (GLenum face)
static int luaglew_glActiveStencilFaceEXT(lua_State *L) {
	oid return_value;
	return_value = glActiveStencilFaceEXT(luaglew_checkenum(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glDepthBoundsEXT (GLclampd zmin, GLclampd zmax)
static int luaglew_glDepthBoundsEXT(lua_State *L) {
	oid return_value;
	return_value = glDepthBoundsEXT((GLclampd)luaL_checknumber(L, 1), (GLclampd)luaL_checknumber(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glBlendEquationSeparateEXT (GLenum modeRGB, GLenum modeAlpha)
static int luaglew_glBlendEquationSeparateEXT(lua_State *L) {
	oid return_value;
	return_value = glBlendEquationSeparateEXT(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// Lboolean glIsRenderbufferEXT (GLuint renderbuffer)
static int luaglew_glIsRenderbufferEXT(lua_State *L) {
	Lboolean return_value;
	return_value = glIsRenderbufferEXT((GLuint)luaL_checkint(L, 1));
	push( ** nespracovany typ Lboolean ** );
	return 1;
}

// oid glBindRenderbufferEXT (GLenum target, GLuint renderbuffer)
static int luaglew_glBindRenderbufferEXT(lua_State *L) {
	oid return_value;
	return_value = glBindRenderbufferEXT(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glDeleteRenderbuffersEXT (GLsizei n, const GLuint *renderbuffers)
static int luaglew_glDeleteRenderbuffersEXT(lua_State *L) {
	oid return_value;
	return_value = glDeleteRenderbuffersEXT((GLsizei)luaL_checklong(L, 1), (GLuint *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGenRenderbuffersEXT (GLsizei n, GLuint *renderbuffers)
static int luaglew_glGenRenderbuffersEXT(lua_State *L) {
	oid return_value;
	return_value = glGenRenderbuffersEXT((GLsizei)luaL_checklong(L, 1), (GLuint *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glRenderbufferStorageEXT (GLenum target, GLenum internalformat, GLsizei width, GLsizei height)
static int luaglew_glRenderbufferStorageEXT(lua_State *L) {
	oid return_value;
	return_value = glRenderbufferStorageEXT(luaglew_checkenum(L, 1), luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLsizei)luaL_checklong(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetRenderbufferParameterivEXT (GLenum target, GLenum pname, GLint *params)
static int luaglew_glGetRenderbufferParameterivEXT(lua_State *L) {
	oid return_value;
	return_value = glGetRenderbufferParameterivEXT(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// Lboolean glIsFramebufferEXT (GLuint framebuffer)
static int luaglew_glIsFramebufferEXT(lua_State *L) {
	Lboolean return_value;
	return_value = glIsFramebufferEXT((GLuint)luaL_checkint(L, 1));
	push( ** nespracovany typ Lboolean ** );
	return 1;
}

// oid glBindFramebufferEXT (GLenum target, GLuint framebuffer)
static int luaglew_glBindFramebufferEXT(lua_State *L) {
	oid return_value;
	return_value = glBindFramebufferEXT(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glDeleteFramebuffersEXT (GLsizei n, const GLuint *framebuffers)
static int luaglew_glDeleteFramebuffersEXT(lua_State *L) {
	oid return_value;
	return_value = glDeleteFramebuffersEXT((GLsizei)luaL_checklong(L, 1), (GLuint *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGenFramebuffersEXT (GLsizei n, GLuint *framebuffers)
static int luaglew_glGenFramebuffersEXT(lua_State *L) {
	oid return_value;
	return_value = glGenFramebuffersEXT((GLsizei)luaL_checklong(L, 1), (GLuint *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// Lenum glCheckFramebufferStatusEXT (GLenum target)
static int luaglew_glCheckFramebufferStatusEXT(lua_State *L) {
	Lenum return_value;
	return_value = glCheckFramebufferStatusEXT(luaglew_checkenum(L, 1));
	push( ** nespracovany typ Lenum ** );
	return 1;
}

// oid glFramebufferTexture1DEXT (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level)
static int luaglew_glFramebufferTexture1DEXT(lua_State *L) {
	oid return_value;
	return_value = glFramebufferTexture1DEXT(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), luaglew_checkenum(L, 3), (GLuint)luaL_checkint(L, 4), (GLint)luaL_checkint(L, 5));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glFramebufferTexture2DEXT (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level)
static int luaglew_glFramebufferTexture2DEXT(lua_State *L) {
	oid return_value;
	return_value = glFramebufferTexture2DEXT(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), luaglew_checkenum(L, 3), (GLuint)luaL_checkint(L, 4), (GLint)luaL_checkint(L, 5));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glFramebufferTexture3DEXT (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset)
static int luaglew_glFramebufferTexture3DEXT(lua_State *L) {
	oid return_value;
	return_value = glFramebufferTexture3DEXT(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), luaglew_checkenum(L, 3), (GLuint)luaL_checkint(L, 4), (GLint)luaL_checkint(L, 5), (GLint)luaL_checkint(L, 6));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glFramebufferRenderbufferEXT (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer)
static int luaglew_glFramebufferRenderbufferEXT(lua_State *L) {
	oid return_value;
	return_value = glFramebufferRenderbufferEXT(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), luaglew_checkenum(L, 3), (GLuint)luaL_checkint(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetFramebufferAttachmentParameterivEXT (GLenum target, GLenum attachment, GLenum pname, GLint *params)
static int luaglew_glGetFramebufferAttachmentParameterivEXT(lua_State *L) {
	oid return_value;
	return_value = glGetFramebufferAttachmentParameterivEXT(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), luaglew_checkenum(L, 3), (GLint *)luaglew_checkarray_int(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGenerateMipmapEXT (GLenum target)
static int luaglew_glGenerateMipmapEXT(lua_State *L) {
	oid return_value;
	return_value = glGenerateMipmapEXT(luaglew_checkenum(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glBlitFramebufferEXT (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter)
static int luaglew_glBlitFramebufferEXT(lua_State *L) {
	oid return_value;
	return_value = glBlitFramebufferEXT((GLint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4), (GLint)luaL_checkint(L, 5), (GLint)luaL_checkint(L, 6), (GLint)luaL_checkint(L, 7), (GLint)luaL_checkint(L, 8), (GLbitfield)luaL_checkint(L, 9), luaglew_checkenum(L, 10));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glRenderbufferStorageMultisampleEXT (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height)
static int luaglew_glRenderbufferStorageMultisampleEXT(lua_State *L) {
	oid return_value;
	return_value = glRenderbufferStorageMultisampleEXT(luaglew_checkenum(L, 1), (GLsizei)luaL_checklong(L, 2), luaL_checkint(L, 3), (GLsizei)luaL_checklong(L, 4), (GLsizei)luaL_checklong(L, 5));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glProgramParameteriEXT (GLuint program, GLenum pname, GLint value)
static int luaglew_glProgramParameteriEXT(lua_State *L) {
	oid return_value;
	return_value = glProgramParameteriEXT((GLuint)luaL_checkint(L, 1), luaglew_checkenum(L, 2), (GLint)luaL_checkint(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glFramebufferTextureEXT (GLenum target, GLenum attachment, GLuint texture, GLint level)
static int luaglew_glFramebufferTextureEXT(lua_State *L) {
	oid return_value;
	return_value = glFramebufferTextureEXT(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLuint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glFramebufferTextureFaceEXT (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face)
static int luaglew_glFramebufferTextureFaceEXT(lua_State *L) {
	oid return_value;
	return_value = glFramebufferTextureFaceEXT(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLuint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4), luaglew_checkenum(L, 5));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glFramebufferTextureLayerEXT (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer)
static int luaglew_glFramebufferTextureLayerEXT(lua_State *L) {
	oid return_value;
	return_value = glFramebufferTextureLayerEXT(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLuint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4), (GLint)luaL_checkint(L, 5));
	push( ** nespracovany typ oid ** );
	return 1;
}

// Lboolean glIsRenderbuffer (GLuint)
static int luaglew_glIsRenderbuffer(lua_State *L) {
	Lboolean return_value;
	return_value = glIsRenderbuffer((GLuint)luaL_checkint(L, 1));
	push( ** nespracovany typ Lboolean ** );
	return 1;
}

// oid glBindRenderbuffer (GLenum, GLuint)
static int luaglew_glBindRenderbuffer(lua_State *L) {
	oid return_value;
	return_value = glBindRenderbuffer(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glDeleteRenderbuffers (GLsizei, const GLuint *)
static int luaglew_glDeleteRenderbuffers(lua_State *L) {
	oid return_value;
	return_value = glDeleteRenderbuffers((GLsizei)luaL_checklong(L, 1), (GLuint *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGenRenderbuffers (GLsizei, GLuint *)
static int luaglew_glGenRenderbuffers(lua_State *L) {
	oid return_value;
	return_value = glGenRenderbuffers((GLsizei)luaL_checklong(L, 1), (GLuint *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glRenderbufferStorage (GLenum, GLenum, GLsizei, GLsizei)
static int luaglew_glRenderbufferStorage(lua_State *L) {
	oid return_value;
	return_value = glRenderbufferStorage(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLsizei)luaL_checklong(L, 3), (GLsizei)luaL_checklong(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetRenderbufferParameteriv (GLenum, GLenum, GLint *)
static int luaglew_glGetRenderbufferParameteriv(lua_State *L) {
	oid return_value;
	return_value = glGetRenderbufferParameteriv(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// Lboolean glIsFramebuffer (GLuint)
static int luaglew_glIsFramebuffer(lua_State *L) {
	Lboolean return_value;
	return_value = glIsFramebuffer((GLuint)luaL_checkint(L, 1));
	push( ** nespracovany typ Lboolean ** );
	return 1;
}

// oid glBindFramebuffer (GLenum, GLuint)
static int luaglew_glBindFramebuffer(lua_State *L) {
	oid return_value;
	return_value = glBindFramebuffer(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glDeleteFramebuffers (GLsizei, const GLuint *)
static int luaglew_glDeleteFramebuffers(lua_State *L) {
	oid return_value;
	return_value = glDeleteFramebuffers((GLsizei)luaL_checklong(L, 1), (GLuint *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGenFramebuffers (GLsizei, GLuint *)
static int luaglew_glGenFramebuffers(lua_State *L) {
	oid return_value;
	return_value = glGenFramebuffers((GLsizei)luaL_checklong(L, 1), (GLuint *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// Lenum glCheckFramebufferStatus (GLenum)
static int luaglew_glCheckFramebufferStatus(lua_State *L) {
	Lenum return_value;
	return_value = glCheckFramebufferStatus(luaglew_checkenum(L, 1));
	push( ** nespracovany typ Lenum ** );
	return 1;
}

// oid glFramebufferTexture1D (GLenum, GLenum, GLenum, GLuint, GLint)
static int luaglew_glFramebufferTexture1D(lua_State *L) {
	oid return_value;
	return_value = glFramebufferTexture1D(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), luaglew_checkenum(L, 3), (GLuint)luaL_checkint(L, 4), (GLint)luaL_checkint(L, 5));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glFramebufferTexture2D (GLenum, GLenum, GLenum, GLuint, GLint)
static int luaglew_glFramebufferTexture2D(lua_State *L) {
	oid return_value;
	return_value = glFramebufferTexture2D(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), luaglew_checkenum(L, 3), (GLuint)luaL_checkint(L, 4), (GLint)luaL_checkint(L, 5));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glFramebufferTexture3D (GLenum, GLenum, GLenum, GLuint, GLint, GLint)
static int luaglew_glFramebufferTexture3D(lua_State *L) {
	oid return_value;
	return_value = glFramebufferTexture3D(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), luaglew_checkenum(L, 3), (GLuint)luaL_checkint(L, 4), (GLint)luaL_checkint(L, 5), (GLint)luaL_checkint(L, 6));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glFramebufferRenderbuffer (GLenum, GLenum, GLenum, GLuint)
static int luaglew_glFramebufferRenderbuffer(lua_State *L) {
	oid return_value;
	return_value = glFramebufferRenderbuffer(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), luaglew_checkenum(L, 3), (GLuint)luaL_checkint(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetFramebufferAttachmentParameteriv (GLenum, GLenum, GLenum, GLint *)
static int luaglew_glGetFramebufferAttachmentParameteriv(lua_State *L) {
	oid return_value;
	return_value = glGetFramebufferAttachmentParameteriv(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), luaglew_checkenum(L, 3), (GLint *)luaglew_checkarray_int(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGenerateMipmap (GLenum)
static int luaglew_glGenerateMipmap(lua_State *L) {
	oid return_value;
	return_value = glGenerateMipmap(luaglew_checkenum(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glBlitFramebuffer (GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum)
static int luaglew_glBlitFramebuffer(lua_State *L) {
	oid return_value;
	return_value = glBlitFramebuffer((GLint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4), (GLint)luaL_checkint(L, 5), (GLint)luaL_checkint(L, 6), (GLint)luaL_checkint(L, 7), (GLint)luaL_checkint(L, 8), (GLbitfield)luaL_checkint(L, 9), luaglew_checkenum(L, 10));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glRenderbufferStorageMultisample (GLenum, GLsizei, GLenum, GLsizei, GLsizei)
static int luaglew_glRenderbufferStorageMultisample(lua_State *L) {
	oid return_value;
	return_value = glRenderbufferStorageMultisample(luaglew_checkenum(L, 1), (GLsizei)luaL_checklong(L, 2), luaglew_checkenum(L, 3), (GLsizei)luaL_checklong(L, 4), (GLsizei)luaL_checklong(L, 5));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glFramebufferTextureLayer (GLenum, GLenum, GLuint, GLint, GLint)
static int luaglew_glFramebufferTextureLayer(lua_State *L) {
	oid return_value;
	return_value = glFramebufferTextureLayer(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLuint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4), (GLint)luaL_checkint(L, 5));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glBindBufferRangeEXT (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size)
static int luaglew_glBindBufferRangeEXT(lua_State *L) {
	oid return_value;
	return_value = glBindBufferRangeEXT(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2), (GLuint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4), (GLsizei)luaL_checklong(L, 5));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glBindBufferOffsetEXT (GLenum target, GLuint index, GLuint buffer, GLintptr offset)
static int luaglew_glBindBufferOffsetEXT(lua_State *L) {
	oid return_value;
	return_value = glBindBufferOffsetEXT(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2), (GLuint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glBindBufferBaseEXT (GLenum target, GLuint index, GLuint buffer)
static int luaglew_glBindBufferBaseEXT(lua_State *L) {
	oid return_value;
	return_value = glBindBufferBaseEXT(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2), (GLuint)luaL_checkint(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glBeginTransformFeedbackEXT (GLenum primitiveMode)
static int luaglew_glBeginTransformFeedbackEXT(lua_State *L) {
	oid return_value;
	return_value = glBeginTransformFeedbackEXT(luaglew_checkenum(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glEndTransformFeedbackEXT (void)
static int luaglew_glEndTransformFeedbackEXT(lua_State *L) {
	oid return_value;
	return_value = glEndTransformFeedbackEXT();
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glTransformFeedbackVaryingsEXT (GLuint program, GLsizei count, const GLchar **varyings, GLenum bufferMode)
static int luaglew_glTransformFeedbackVaryingsEXT(lua_State *L) {
	oid return_value;
	return_value = glTransformFeedbackVaryingsEXT((GLuint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLchar **)luaglew_checkarray_2char(L, 3), luaglew_checkenum(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetTransformFeedbackVaryingEXT (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name)
static int luaglew_glGetTransformFeedbackVaryingEXT(lua_State *L) {
	oid return_value;
	return_value = glGetTransformFeedbackVaryingEXT((GLuint)luaL_checkint(L, 1), (GLuint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLsizei *)luaglew_checkarray_int(L, 4), (GLsizei *)luaglew_checkarray_int(L, 5), luaglew_checkarray_enum(L, 6), (GLchar *)luaglew_checkarray_char(L, 7));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetIntegerIndexedvEXT (GLenum param, GLuint index, GLint *values)
static int luaglew_glGetIntegerIndexedvEXT(lua_State *L) {
	oid return_value;
	return_value = glGetIntegerIndexedvEXT(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetBooleanIndexedvEXT (GLenum param, GLuint index, GLboolean *values)
static int luaglew_glGetBooleanIndexedvEXT(lua_State *L) {
	oid return_value;
	return_value = glGetBooleanIndexedvEXT(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2), (GLboolean *)luaglew_checkarray_boolean(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glUniformBufferEXT (GLuint program, GLint location, GLuint buffer)
static int luaglew_glUniformBufferEXT(lua_State *L) {
	oid return_value;
	return_value = glUniformBufferEXT((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLuint)luaL_checkint(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// Lint glGetUniformBufferSizeEXT (GLuint program, GLint location)
static int luaglew_glGetUniformBufferSizeEXT(lua_State *L) {
	Lint return_value;
	return_value = glGetUniformBufferSizeEXT((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2));
	lua_pushinteger(L, return_value);
	return 1;
}

// Lintptr glGetUniformOffsetEXT (GLuint program, GLint location)
static int luaglew_glGetUniformOffsetEXT(lua_State *L) {
	Lintptr return_value;
	return_value = glGetUniformOffsetEXT((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2));
	lua_pushinteger(L, return_value);
	return 1;
}

// oid glClearColorIiEXT ( GLint r, GLint g, GLint b, GLint a )
static int luaglew_glClearColorIiEXT(lua_State *L) {
	oid return_value;
	return_value = glClearColorIiEXT((GLint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glClearColorIuiEXT ( GLuint r, GLuint g, GLuint b, GLuint a )
static int luaglew_glClearColorIuiEXT(lua_State *L) {
	oid return_value;
	return_value = glClearColorIuiEXT((GLuint)luaL_checkint(L, 1), (GLuint)luaL_checkint(L, 2), (GLuint)luaL_checkint(L, 3), (GLuint)luaL_checkint(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glTexParameterIivEXT ( GLenum target, GLenum pname, GLint *params )
static int luaglew_glTexParameterIivEXT(lua_State *L) {
	oid return_value;
	return_value = glTexParameterIivEXT(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glTexParameterIuivEXT ( GLenum target, GLenum pname, GLuint *params )
static int luaglew_glTexParameterIuivEXT(lua_State *L) {
	oid return_value;
	return_value = glTexParameterIuivEXT(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLuint *)luaglew_checkarray_int(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetTexParameterIivEXT ( GLenum target, GLenum pname, GLint *params)
static int luaglew_glGetTexParameterIivEXT(lua_State *L) {
	oid return_value;
	return_value = glGetTexParameterIivEXT(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetTexParameterIuivEXT ( GLenum target, GLenum pname, GLuint *params)
static int luaglew_glGetTexParameterIuivEXT(lua_State *L) {
	oid return_value;
	return_value = glGetTexParameterIuivEXT(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLuint *)luaglew_checkarray_int(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttribI1iEXT (GLuint index, GLint x)
static int luaglew_glVertexAttribI1iEXT(lua_State *L) {
	oid return_value;
	return_value = glVertexAttribI1iEXT((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttribI2iEXT (GLuint index, GLint x, GLint y)
static int luaglew_glVertexAttribI2iEXT(lua_State *L) {
	oid return_value;
	return_value = glVertexAttribI2iEXT((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttribI3iEXT (GLuint index, GLint x, GLint y, GLint z)
static int luaglew_glVertexAttribI3iEXT(lua_State *L) {
	oid return_value;
	return_value = glVertexAttribI3iEXT((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttribI4iEXT (GLuint index, GLint x, GLint y, GLint z, GLint w)
static int luaglew_glVertexAttribI4iEXT(lua_State *L) {
	oid return_value;
	return_value = glVertexAttribI4iEXT((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4), (GLint)luaL_checkint(L, 5));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttribI1uiEXT (GLuint index, GLuint x)
static int luaglew_glVertexAttribI1uiEXT(lua_State *L) {
	oid return_value;
	return_value = glVertexAttribI1uiEXT((GLuint)luaL_checkint(L, 1), (GLuint)luaL_checkint(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttribI2uiEXT (GLuint index, GLuint x, GLuint y)
static int luaglew_glVertexAttribI2uiEXT(lua_State *L) {
	oid return_value;
	return_value = glVertexAttribI2uiEXT((GLuint)luaL_checkint(L, 1), (GLuint)luaL_checkint(L, 2), (GLuint)luaL_checkint(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttribI3uiEXT (GLuint index, GLuint x, GLuint y, GLuint z)
static int luaglew_glVertexAttribI3uiEXT(lua_State *L) {
	oid return_value;
	return_value = glVertexAttribI3uiEXT((GLuint)luaL_checkint(L, 1), (GLuint)luaL_checkint(L, 2), (GLuint)luaL_checkint(L, 3), (GLuint)luaL_checkint(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttribI4uiEXT (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w)
static int luaglew_glVertexAttribI4uiEXT(lua_State *L) {
	oid return_value;
	return_value = glVertexAttribI4uiEXT((GLuint)luaL_checkint(L, 1), (GLuint)luaL_checkint(L, 2), (GLuint)luaL_checkint(L, 3), (GLuint)luaL_checkint(L, 4), (GLuint)luaL_checkint(L, 5));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttribI1ivEXT (GLuint index, const GLint *v)
static int luaglew_glVertexAttribI1ivEXT(lua_State *L) {
	oid return_value;
	return_value = glVertexAttribI1ivEXT((GLuint)luaL_checkint(L, 1), (GLint *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttribI2ivEXT (GLuint index, const GLint *v)
static int luaglew_glVertexAttribI2ivEXT(lua_State *L) {
	oid return_value;
	return_value = glVertexAttribI2ivEXT((GLuint)luaL_checkint(L, 1), (GLint *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttribI3ivEXT (GLuint index, const GLint *v)
static int luaglew_glVertexAttribI3ivEXT(lua_State *L) {
	oid return_value;
	return_value = glVertexAttribI3ivEXT((GLuint)luaL_checkint(L, 1), (GLint *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttribI4ivEXT (GLuint index, const GLint *v)
static int luaglew_glVertexAttribI4ivEXT(lua_State *L) {
	oid return_value;
	return_value = glVertexAttribI4ivEXT((GLuint)luaL_checkint(L, 1), (GLint *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttribI1uivEXT (GLuint index, const GLuint *v)
static int luaglew_glVertexAttribI1uivEXT(lua_State *L) {
	oid return_value;
	return_value = glVertexAttribI1uivEXT((GLuint)luaL_checkint(L, 1), (GLuint *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttribI2uivEXT (GLuint index, const GLuint *v)
static int luaglew_glVertexAttribI2uivEXT(lua_State *L) {
	oid return_value;
	return_value = glVertexAttribI2uivEXT((GLuint)luaL_checkint(L, 1), (GLuint *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttribI3uivEXT (GLuint index, const GLuint *v)
static int luaglew_glVertexAttribI3uivEXT(lua_State *L) {
	oid return_value;
	return_value = glVertexAttribI3uivEXT((GLuint)luaL_checkint(L, 1), (GLuint *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttribI4uivEXT (GLuint index, const GLuint *v)
static int luaglew_glVertexAttribI4uivEXT(lua_State *L) {
	oid return_value;
	return_value = glVertexAttribI4uivEXT((GLuint)luaL_checkint(L, 1), (GLuint *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttribI4bvEXT (GLuint index, const GLbyte *v)
static int luaglew_glVertexAttribI4bvEXT(lua_State *L) {
	oid return_value;
	return_value = glVertexAttribI4bvEXT((GLuint)luaL_checkint(L, 1), (GLbyte *)luaglew_checkarray_byte(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttribI4svEXT (GLuint index, const GLshort *v)
static int luaglew_glVertexAttribI4svEXT(lua_State *L) {
	oid return_value;
	return_value = glVertexAttribI4svEXT((GLuint)luaL_checkint(L, 1), (GLshort *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttribI4ubvEXT (GLuint index, const GLubyte *v)
static int luaglew_glVertexAttribI4ubvEXT(lua_State *L) {
	oid return_value;
	return_value = glVertexAttribI4ubvEXT((GLuint)luaL_checkint(L, 1), (GLubyte *)luaglew_checkarray_ubyte(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttribI4usvEXT (GLuint index, const GLushort *v)
static int luaglew_glVertexAttribI4usvEXT(lua_State *L) {
	oid return_value;
	return_value = glVertexAttribI4usvEXT((GLuint)luaL_checkint(L, 1), (GLushort *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttribIPointerEXT (GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)
static int luaglew_glVertexAttribIPointerEXT(lua_State *L) {
	oid return_value;
	return_value = glVertexAttribIPointerEXT((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), luaglew_checkenum(L, 3), (GLsizei)luaL_checklong(L, 4), luaglew_checkarray_int(L, 5));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetVertexAttribIivEXT (GLuint index, GLenum pname, GLint *params)
static int luaglew_glGetVertexAttribIivEXT(lua_State *L) {
	oid return_value;
	return_value = glGetVertexAttribIivEXT((GLuint)luaL_checkint(L, 1), luaglew_checkenum(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetVertexAttribIuivEXT (GLuint index, GLenum pname, GLuint *params)
static int luaglew_glGetVertexAttribIuivEXT(lua_State *L) {
	oid return_value;
	return_value = glGetVertexAttribIuivEXT((GLuint)luaL_checkint(L, 1), luaglew_checkenum(L, 2), (GLuint *)luaglew_checkarray_int(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glUniform1uiEXT (GLint location, GLuint v0)
static int luaglew_glUniform1uiEXT(lua_State *L) {
	oid return_value;
	return_value = glUniform1uiEXT((GLint)luaL_checkint(L, 1), (GLuint)luaL_checkint(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glUniform2uiEXT (GLint location, GLuint v0, GLuint v1)
static int luaglew_glUniform2uiEXT(lua_State *L) {
	oid return_value;
	return_value = glUniform2uiEXT((GLint)luaL_checkint(L, 1), (GLuint)luaL_checkint(L, 2), (GLuint)luaL_checkint(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glUniform3uiEXT (GLint location, GLuint v0, GLuint v1, GLuint v2)
static int luaglew_glUniform3uiEXT(lua_State *L) {
	oid return_value;
	return_value = glUniform3uiEXT((GLint)luaL_checkint(L, 1), (GLuint)luaL_checkint(L, 2), (GLuint)luaL_checkint(L, 3), (GLuint)luaL_checkint(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glUniform4uiEXT (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3)
static int luaglew_glUniform4uiEXT(lua_State *L) {
	oid return_value;
	return_value = glUniform4uiEXT((GLint)luaL_checkint(L, 1), (GLuint)luaL_checkint(L, 2), (GLuint)luaL_checkint(L, 3), (GLuint)luaL_checkint(L, 4), (GLuint)luaL_checkint(L, 5));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glUniform1uivEXT (GLint location, GLsizei count, const GLuint *value)
static int luaglew_glUniform1uivEXT(lua_State *L) {
	oid return_value;
	return_value = glUniform1uivEXT((GLint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLuint *)luaglew_checkarray_int(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glUniform2uivEXT (GLint location, GLsizei count, const GLuint *value)
static int luaglew_glUniform2uivEXT(lua_State *L) {
	oid return_value;
	return_value = glUniform2uivEXT((GLint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLuint *)luaglew_checkarray_int(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glUniform3uivEXT (GLint location, GLsizei count, const GLuint *value)
static int luaglew_glUniform3uivEXT(lua_State *L) {
	oid return_value;
	return_value = glUniform3uivEXT((GLint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLuint *)luaglew_checkarray_int(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glUniform4uivEXT (GLint location, GLsizei count, const GLuint *value)
static int luaglew_glUniform4uivEXT(lua_State *L) {
	oid return_value;
	return_value = glUniform4uivEXT((GLint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLuint *)luaglew_checkarray_int(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetUniformuivEXT (GLuint program, GLint location, GLuint *params)
static int luaglew_glGetUniformuivEXT(lua_State *L) {
	oid return_value;
	return_value = glGetUniformuivEXT((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLuint *)luaglew_checkarray_int(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glBindFragDataLocationEXT (GLuint program, GLuint colorNumber, const GLchar *name)
static int luaglew_glBindFragDataLocationEXT(lua_State *L) {
	oid return_value;
	return_value = glBindFragDataLocationEXT((GLuint)luaL_checkint(L, 1), (GLuint)luaL_checkint(L, 2), (GLchar *)luaglew_checkarray_char(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// Lint glGetFragDataLocationEXT (GLuint program, const GLchar *name)
static int luaglew_glGetFragDataLocationEXT(lua_State *L) {
	Lint return_value;
	return_value = glGetFragDataLocationEXT((GLuint)luaL_checkint(L, 1), (GLchar *)luaglew_checkarray_char(L, 2));
	lua_pushinteger(L, return_value);
	return 1;
}

// oid glColorMaskIndexedEXT (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a)
static int luaglew_glColorMaskIndexedEXT(lua_State *L) {
	oid return_value;
	return_value = glColorMaskIndexedEXT((GLuint)luaL_checkint(L, 1), (GLboolean)lua_toboolean(L, 2), (GLboolean)lua_toboolean(L, 3), (GLboolean)lua_toboolean(L, 4), (GLboolean)lua_toboolean(L, 5));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glEnableIndexedEXT (GLenum target, GLuint index)
static int luaglew_glEnableIndexedEXT(lua_State *L) {
	oid return_value;
	return_value = glEnableIndexedEXT(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glDisableIndexedEXT (GLenum target, GLuint index)
static int luaglew_glDisableIndexedEXT(lua_State *L) {
	oid return_value;
	return_value = glDisableIndexedEXT(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// Lboolean glIsEnabledIndexedEXT (GLenum target, GLuint index)
static int luaglew_glIsEnabledIndexedEXT(lua_State *L) {
	Lboolean return_value;
	return_value = glIsEnabledIndexedEXT(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2));
	push( ** nespracovany typ Lboolean ** );
	return 1;
}

// oid glProvokingVertexEXT (GLenum mode)
static int luaglew_glProvokingVertexEXT(lua_State *L) {
	oid return_value;
	return_value = glProvokingVertexEXT(luaglew_checkenum(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glTextureRangeAPPLE (GLenum target, GLsizei length, const GLvoid *pointer)
static int luaglew_glTextureRangeAPPLE(lua_State *L) {
	oid return_value;
	return_value = glTextureRangeAPPLE(luaglew_checkenum(L, 1), (GLsizei)luaL_checklong(L, 2), luaglew_checkarray_int(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetTexParameterPointervAPPLE (GLenum target, GLenum pname, GLvoid **params)
static int luaglew_glGetTexParameterPointervAPPLE(lua_State *L) {
	oid return_value;
	return_value = glGetTexParameterPointervAPPLE(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), luaglew_checkarray_2void(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexArrayRangeAPPLE (GLsizei length, const GLvoid *pointer)
static int luaglew_glVertexArrayRangeAPPLE(lua_State *L) {
	oid return_value;
	return_value = glVertexArrayRangeAPPLE((GLsizei)luaL_checklong(L, 1), luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glFlushVertexArrayRangeAPPLE (GLsizei length, const GLvoid *pointer)
static int luaglew_glFlushVertexArrayRangeAPPLE(lua_State *L) {
	oid return_value;
	return_value = glFlushVertexArrayRangeAPPLE((GLsizei)luaL_checklong(L, 1), luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexArrayParameteriAPPLE (GLenum pname, GLint param)
static int luaglew_glVertexArrayParameteriAPPLE(lua_State *L) {
	oid return_value;
	return_value = glVertexArrayParameteriAPPLE(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glBindVertexArrayAPPLE (GLuint id)
static int luaglew_glBindVertexArrayAPPLE(lua_State *L) {
	oid return_value;
	return_value = glBindVertexArrayAPPLE((GLuint)luaL_checkint(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glDeleteVertexArraysAPPLE (GLsizei n, const GLuint *ids)
static int luaglew_glDeleteVertexArraysAPPLE(lua_State *L) {
	oid return_value;
	return_value = glDeleteVertexArraysAPPLE((GLsizei)luaL_checklong(L, 1), (GLuint *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGenVertexArraysAPPLE (GLsizei n, GLuint *ids)
static int luaglew_glGenVertexArraysAPPLE(lua_State *L) {
	oid return_value;
	return_value = glGenVertexArraysAPPLE((GLsizei)luaL_checklong(L, 1), (GLuint *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// Lboolean glIsVertexArrayAPPLE (GLuint id)
static int luaglew_glIsVertexArrayAPPLE(lua_State *L) {
	Lboolean return_value;
	return_value = glIsVertexArrayAPPLE((GLuint)luaL_checkint(L, 1));
	push( ** nespracovany typ Lboolean ** );
	return 1;
}

// oid glGenFencesAPPLE (GLsizei n, GLuint *fences)
static int luaglew_glGenFencesAPPLE(lua_State *L) {
	oid return_value;
	return_value = glGenFencesAPPLE((GLsizei)luaL_checklong(L, 1), (GLuint *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glDeleteFencesAPPLE (GLsizei n, const GLuint *fences)
static int luaglew_glDeleteFencesAPPLE(lua_State *L) {
	oid return_value;
	return_value = glDeleteFencesAPPLE((GLsizei)luaL_checklong(L, 1), (GLuint *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glSetFenceAPPLE (GLuint fence)
static int luaglew_glSetFenceAPPLE(lua_State *L) {
	oid return_value;
	return_value = glSetFenceAPPLE((GLuint)luaL_checkint(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// Lboolean glIsFenceAPPLE (GLuint fence)
static int luaglew_glIsFenceAPPLE(lua_State *L) {
	Lboolean return_value;
	return_value = glIsFenceAPPLE((GLuint)luaL_checkint(L, 1));
	push( ** nespracovany typ Lboolean ** );
	return 1;
}

// Lboolean glTestFenceAPPLE (GLuint fence)
static int luaglew_glTestFenceAPPLE(lua_State *L) {
	Lboolean return_value;
	return_value = glTestFenceAPPLE((GLuint)luaL_checkint(L, 1));
	push( ** nespracovany typ Lboolean ** );
	return 1;
}

// oid glFinishFenceAPPLE (GLuint fence)
static int luaglew_glFinishFenceAPPLE(lua_State *L) {
	oid return_value;
	return_value = glFinishFenceAPPLE((GLuint)luaL_checkint(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// Lboolean glTestObjectAPPLE (GLenum object, GLuint name)
static int luaglew_glTestObjectAPPLE(lua_State *L) {
	Lboolean return_value;
	return_value = glTestObjectAPPLE(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2));
	push( ** nespracovany typ Lboolean ** );
	return 1;
}

// oid glFinishObjectAPPLE (GLenum object, GLuint name)
static int luaglew_glFinishObjectAPPLE(lua_State *L) {
	oid return_value;
	return_value = glFinishObjectAPPLE(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glElementPointerAPPLE (GLenum type, const GLvoid *pointer)
static int luaglew_glElementPointerAPPLE(lua_State *L) {
	oid return_value;
	return_value = glElementPointerAPPLE(luaglew_checkenum(L, 1), luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glDrawElementArrayAPPLE (GLenum mode, GLint first, GLsizei count)
static int luaglew_glDrawElementArrayAPPLE(lua_State *L) {
	oid return_value;
	return_value = glDrawElementArrayAPPLE(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glDrawRangeElementArrayAPPLE (GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count)
static int luaglew_glDrawRangeElementArrayAPPLE(lua_State *L) {
	oid return_value;
	return_value = glDrawRangeElementArrayAPPLE(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2), (GLuint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4), (GLsizei)luaL_checklong(L, 5));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultiDrawElementArrayAPPLE (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount)
static int luaglew_glMultiDrawElementArrayAPPLE(lua_State *L) {
	oid return_value;
	return_value = glMultiDrawElementArrayAPPLE(luaglew_checkenum(L, 1), (GLint *)luaglew_checkarray_int(L, 2), (GLsizei *)luaglew_checkarray_int(L, 3), (GLsizei)luaL_checklong(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultiDrawRangeElementArrayAPPLE (GLenum mode, GLuint start, GLuint end, const GLint *first, const GLsizei *count, GLsizei primcount)
static int luaglew_glMultiDrawRangeElementArrayAPPLE(lua_State *L) {
	oid return_value;
	return_value = glMultiDrawRangeElementArrayAPPLE(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2), (GLuint)luaL_checkint(L, 3), (GLint *)luaglew_checkarray_int(L, 4), (GLsizei *)luaglew_checkarray_int(L, 5), (GLsizei)luaL_checklong(L, 6));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glFlushRenderAPPLE (void)
static int luaglew_glFlushRenderAPPLE(lua_State *L) {
	oid return_value;
	return_value = glFlushRenderAPPLE();
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glFinishRenderAPPLE (void)
static int luaglew_glFinishRenderAPPLE(lua_State *L) {
	oid return_value;
	return_value = glFinishRenderAPPLE();
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glSwapAPPLE (void)
static int luaglew_glSwapAPPLE(lua_State *L) {
	oid return_value;
	return_value = glSwapAPPLE();
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glEnableVertexAttribAPPLE (GLuint index, GLenum pname)
static int luaglew_glEnableVertexAttribAPPLE(lua_State *L) {
	oid return_value;
	return_value = glEnableVertexAttribAPPLE((GLuint)luaL_checkint(L, 1), luaglew_checkenum(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glDisableVertexAttribAPPLE (GLuint index, GLenum pname)
static int luaglew_glDisableVertexAttribAPPLE(lua_State *L) {
	oid return_value;
	return_value = glDisableVertexAttribAPPLE((GLuint)luaL_checkint(L, 1), luaglew_checkenum(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// Lboolean glIsVertexAttribEnabledAPPLE (GLuint index, GLenum pname)
static int luaglew_glIsVertexAttribEnabledAPPLE(lua_State *L) {
	Lboolean return_value;
	return_value = glIsVertexAttribEnabledAPPLE((GLuint)luaL_checkint(L, 1), luaglew_checkenum(L, 2));
	push( ** nespracovany typ Lboolean ** );
	return 1;
}

// oid glMapVertexAttrib1dAPPLE (GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble *points)
static int luaglew_glMapVertexAttrib1dAPPLE(lua_State *L) {
	oid return_value;
	return_value = glMapVertexAttrib1dAPPLE((GLuint)luaL_checkint(L, 1), (GLuint)luaL_checkint(L, 2), (GLdouble)luaL_checknumber(L, 3), (GLdouble)luaL_checknumber(L, 4), (GLint)luaL_checkint(L, 5), (GLint)luaL_checkint(L, 6), (GLdouble *)luaglew_checkarray_doublefloat(L, 7));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMapVertexAttrib1fAPPLE (GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points)
static int luaglew_glMapVertexAttrib1fAPPLE(lua_State *L) {
	oid return_value;
	return_value = glMapVertexAttrib1fAPPLE((GLuint)luaL_checkint(L, 1), (GLuint)luaL_checkint(L, 2), (GLfloat)luaL_checknumber(L, 3), (GLfloat)luaL_checknumber(L, 4), (GLint)luaL_checkint(L, 5), (GLint)luaL_checkint(L, 6), (GLfloat *)luaglew_checkarray_doublefloat(L, 7));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMapVertexAttrib2dAPPLE (GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble *points)
static int luaglew_glMapVertexAttrib2dAPPLE(lua_State *L) {
	oid return_value;
	return_value = glMapVertexAttrib2dAPPLE((GLuint)luaL_checkint(L, 1), (GLuint)luaL_checkint(L, 2), (GLdouble)luaL_checknumber(L, 3), (GLdouble)luaL_checknumber(L, 4), (GLint)luaL_checkint(L, 5), (GLint)luaL_checkint(L, 6), (GLdouble)luaL_checknumber(L, 7), (GLdouble)luaL_checknumber(L, 8), (GLint)luaL_checkint(L, 9), (GLint)luaL_checkint(L, 10), (GLdouble *)luaglew_checkarray_doublefloat(L, 11));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMapVertexAttrib2fAPPLE (GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points)
static int luaglew_glMapVertexAttrib2fAPPLE(lua_State *L) {
	oid return_value;
	return_value = glMapVertexAttrib2fAPPLE((GLuint)luaL_checkint(L, 1), (GLuint)luaL_checkint(L, 2), (GLfloat)luaL_checknumber(L, 3), (GLfloat)luaL_checknumber(L, 4), (GLint)luaL_checkint(L, 5), (GLint)luaL_checkint(L, 6), (GLfloat)luaL_checknumber(L, 7), (GLfloat)luaL_checknumber(L, 8), (GLint)luaL_checkint(L, 9), (GLint)luaL_checkint(L, 10), (GLfloat *)luaglew_checkarray_doublefloat(L, 11));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glBufferParameteriAPPLE (GLenum target, GLenum pname, GLint param)
static int luaglew_glBufferParameteriAPPLE(lua_State *L) {
	oid return_value;
	return_value = glBufferParameteriAPPLE(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLint)luaL_checkint(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glFlushMappedBufferRangeAPPLE (GLenum target, GLintptr offset, GLsizeiptr size)
static int luaglew_glFlushMappedBufferRangeAPPLE(lua_State *L) {
	oid return_value;
	return_value = glFlushMappedBufferRangeAPPLE(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// Lenum glObjectPurgeableAPPLE (GLenum objectType, GLuint name, GLenum option)
static int luaglew_glObjectPurgeableAPPLE(lua_State *L) {
	Lenum return_value;
	return_value = glObjectPurgeableAPPLE(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2), luaglew_checkenum(L, 3));
	push( ** nespracovany typ Lenum ** );
	return 1;
}

// Lenum glObjectUnpurgeableAPPLE (GLenum objectType, GLuint name, GLenum option)
static int luaglew_glObjectUnpurgeableAPPLE(lua_State *L) {
	Lenum return_value;
	return_value = glObjectUnpurgeableAPPLE(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2), luaglew_checkenum(L, 3));
	push( ** nespracovany typ Lenum ** );
	return 1;
}

// oid glGetObjectParameterivAPPLE (GLenum objectType, GLuint name, GLenum pname, GLint* params)
static int luaglew_glGetObjectParameterivAPPLE(lua_State *L) {
	oid return_value;
	return_value = glGetObjectParameterivAPPLE(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2), luaglew_checkenum(L, 3), (GLint *)luaglew_checkarray_int(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glPNTrianglesiATI (GLenum pname, GLint param)
static int luaglew_glPNTrianglesiATI(lua_State *L) {
	oid return_value;
	return_value = glPNTrianglesiATI(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glPNTrianglesfATI (GLenum pname, GLfloat param)
static int luaglew_glPNTrianglesfATI(lua_State *L) {
	oid return_value;
	return_value = glPNTrianglesfATI(luaglew_checkenum(L, 1), (GLfloat)luaL_checknumber(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glBlendEquationSeparateATI (GLenum equationRGB, GLenum equationAlpha)
static int luaglew_glBlendEquationSeparateATI(lua_State *L) {
	oid return_value;
	return_value = glBlendEquationSeparateATI(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glStencilOpSeparateATI (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass)
static int luaglew_glStencilOpSeparateATI(lua_State *L) {
	oid return_value;
	return_value = glStencilOpSeparateATI(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), luaglew_checkenum(L, 3), luaglew_checkenum(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glStencilFuncSeparateATI (GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask)
static int luaglew_glStencilFuncSeparateATI(lua_State *L) {
	oid return_value;
	return_value = glStencilFuncSeparateATI(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLint)luaL_checkint(L, 3), (GLuint)luaL_checkint(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glPNTrianglesiATIX (GLenum pname, GLint param)
static int luaglew_glPNTrianglesiATIX(lua_State *L) {
	oid return_value;
	return_value = glPNTrianglesiATIX(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glPNTrianglesfATIX (GLenum pname, GLfloat param)
static int luaglew_glPNTrianglesfATIX(lua_State *L) {
	oid return_value;
	return_value = glPNTrianglesfATIX(luaglew_checkenum(L, 1), (GLfloat)luaL_checknumber(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glPointParameteriNV (GLenum pname, GLint param)
static int luaglew_glPointParameteriNV(lua_State *L) {
	oid return_value;
	return_value = glPointParameteriNV(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glPointParameterivNV (GLenum pname, const GLint *params)
static int luaglew_glPointParameterivNV(lua_State *L) {
	oid return_value;
	return_value = glPointParameterivNV(luaglew_checkenum(L, 1), (GLint *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glBeginConditionalRenderNV (GLuint id, GLenum mode)
static int luaglew_glBeginConditionalRenderNV(lua_State *L) {
	oid return_value;
	return_value = glBeginConditionalRenderNV((GLuint)luaL_checkint(L, 1), luaglew_checkenum(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glEndConditionalRenderNV (void)
static int luaglew_glEndConditionalRenderNV(lua_State *L) {
	oid return_value;
	return_value = glEndConditionalRenderNV();
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glAccum (GLenum op, GLfloat value)
static int luaglew_glAccum(lua_State *L) {
	oid return_value;
	return_value = glAccum(luaglew_checkenum(L, 1), (GLfloat)luaL_checknumber(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glAlphaFunc (GLenum func, GLclampf ref)
static int luaglew_glAlphaFunc(lua_State *L) {
	oid return_value;
	return_value = glAlphaFunc(luaglew_checkenum(L, 1), (GLclampf)luaL_checknumber(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// Lboolean glAreTexturesResident (GLsizei n, const GLuint *textures, GLboolean *residences)
static int luaglew_glAreTexturesResident(lua_State *L) {
	Lboolean return_value;
	return_value = glAreTexturesResident((GLsizei)luaL_checklong(L, 1), (GLuint *)luaglew_checkarray_int(L, 2), (GLboolean *)luaglew_checkarray_boolean(L, 3));
	push( ** nespracovany typ Lboolean ** );
	return 1;
}

// oid glArrayElement (GLint i)
static int luaglew_glArrayElement(lua_State *L) {
	oid return_value;
	return_value = glArrayElement((GLint)luaL_checkint(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glBegin (GLenum mode)
static int luaglew_glBegin(lua_State *L) {
	oid return_value;
	return_value = glBegin(luaglew_checkenum(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glBindTexture (GLenum target, GLuint texture)
static int luaglew_glBindTexture(lua_State *L) {
	oid return_value;
	return_value = glBindTexture(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glBitmap (GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, const GLubyte *bitmap)
static int luaglew_glBitmap(lua_State *L) {
	oid return_value;
	return_value = glBitmap((GLsizei)luaL_checklong(L, 1), (GLsizei)luaL_checklong(L, 2), (GLfloat)luaL_checknumber(L, 3), (GLfloat)luaL_checknumber(L, 4), (GLfloat)luaL_checknumber(L, 5), (GLfloat)luaL_checknumber(L, 6), (GLubyte *)luaglew_checkarray_ubyte(L, 7));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glBlendColor (GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha)
static int luaglew_glBlendColor(lua_State *L) {
	oid return_value;
	return_value = glBlendColor((GLclampf)luaL_checknumber(L, 1), (GLclampf)luaL_checknumber(L, 2), (GLclampf)luaL_checknumber(L, 3), (GLclampf)luaL_checknumber(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glBlendEquation (GLenum mode)
static int luaglew_glBlendEquation(lua_State *L) {
	oid return_value;
	return_value = glBlendEquation(luaglew_checkenum(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glBlendEquationSeparate (GLenum modeRGB, GLenum modeAlpha)
static int luaglew_glBlendEquationSeparate(lua_State *L) {
	oid return_value;
	return_value = glBlendEquationSeparate(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glBlendFunc (GLenum sfactor, GLenum dfactor)
static int luaglew_glBlendFunc(lua_State *L) {
	oid return_value;
	return_value = glBlendFunc(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glCallList (GLuint list)
static int luaglew_glCallList(lua_State *L) {
	oid return_value;
	return_value = glCallList((GLuint)luaL_checkint(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glCallLists (GLsizei n, GLenum type, const GLvoid *lists)
static int luaglew_glCallLists(lua_State *L) {
	oid return_value;
	return_value = glCallLists((GLsizei)luaL_checklong(L, 1), luaglew_checkenum(L, 2), (GLvoid *)luaglew_checkarray_void(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glClear (GLbitfield mask)
static int luaglew_glClear(lua_State *L) {
	oid return_value;
	return_value = glClear((GLbitfield)luaL_checkint(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glClearAccum (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha)
static int luaglew_glClearAccum(lua_State *L) {
	oid return_value;
	return_value = glClearAccum((GLfloat)luaL_checknumber(L, 1), (GLfloat)luaL_checknumber(L, 2), (GLfloat)luaL_checknumber(L, 3), (GLfloat)luaL_checknumber(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glClearColor (GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha)
static int luaglew_glClearColor(lua_State *L) {
	oid return_value;
	return_value = glClearColor((GLclampf)luaL_checknumber(L, 1), (GLclampf)luaL_checknumber(L, 2), (GLclampf)luaL_checknumber(L, 3), (GLclampf)luaL_checknumber(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glClearDepth (GLclampd depth)
static int luaglew_glClearDepth(lua_State *L) {
	oid return_value;
	return_value = glClearDepth((GLclampd)luaL_checknumber(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glClearIndex (GLfloat c)
static int luaglew_glClearIndex(lua_State *L) {
	oid return_value;
	return_value = glClearIndex((GLfloat)luaL_checknumber(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glClearStencil (GLint s)
static int luaglew_glClearStencil(lua_State *L) {
	oid return_value;
	return_value = glClearStencil((GLint)luaL_checkint(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glClipPlane (GLenum plane, const GLdouble *equation)
static int luaglew_glClipPlane(lua_State *L) {
	oid return_value;
	return_value = glClipPlane(luaglew_checkenum(L, 1), (GLdouble *)luaglew_checkarray_doublefloat(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glColor3b (GLbyte red, GLbyte green, GLbyte blue)
static int luaglew_glColor3b(lua_State *L) {
	oid return_value;
	return_value = glColor3b((GLbyte)luaL_checknumber(L, 1), (GLbyte)luaL_checknumber(L, 2), (GLbyte)luaL_checknumber(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glColor3bv (const GLbyte *v)
static int luaglew_glColor3bv(lua_State *L) {
	oid return_value;
	return_value = glColor3bv((GLbyte *)luaglew_checkarray_byte(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glColor3d (GLdouble red, GLdouble green, GLdouble blue)
static int luaglew_glColor3d(lua_State *L) {
	oid return_value;
	return_value = glColor3d((GLdouble)luaL_checknumber(L, 1), (GLdouble)luaL_checknumber(L, 2), (GLdouble)luaL_checknumber(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glColor3dv (const GLdouble *v)
static int luaglew_glColor3dv(lua_State *L) {
	oid return_value;
	return_value = glColor3dv((GLdouble *)luaglew_checkarray_doublefloat(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glColor3f (GLfloat red, GLfloat green, GLfloat blue)
static int luaglew_glColor3f(lua_State *L) {
	oid return_value;
	return_value = glColor3f((GLfloat)luaL_checknumber(L, 1), (GLfloat)luaL_checknumber(L, 2), (GLfloat)luaL_checknumber(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glColor3fv (const GLfloat *v)
static int luaglew_glColor3fv(lua_State *L) {
	oid return_value;
	return_value = glColor3fv((GLfloat *)luaglew_checkarray_doublefloat(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glColor3i (GLint red, GLint green, GLint blue)
static int luaglew_glColor3i(lua_State *L) {
	oid return_value;
	return_value = glColor3i((GLint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glColor3iv (const GLint *v)
static int luaglew_glColor3iv(lua_State *L) {
	oid return_value;
	return_value = glColor3iv((GLint *)luaglew_checkarray_int(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glColor3s (GLshort red, GLshort green, GLshort blue)
static int luaglew_glColor3s(lua_State *L) {
	oid return_value;
	return_value = glColor3s((GLshort)luaL_checkinteger(L, 1), (GLshort)luaL_checkinteger(L, 2), (GLshort)luaL_checkinteger(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glColor3sv (const GLshort *v)
static int luaglew_glColor3sv(lua_State *L) {
	oid return_value;
	return_value = glColor3sv((GLshort *)luaglew_checkarray_int(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glColor3ub (GLubyte red, GLubyte green, GLubyte blue)
static int luaglew_glColor3ub(lua_State *L) {
	oid return_value;
	return_value = glColor3ub((GLubyte)luaL_checknumber(L, 1), (GLubyte)luaL_checknumber(L, 2), (GLubyte)luaL_checknumber(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glColor3ubv (const GLubyte *v)
static int luaglew_glColor3ubv(lua_State *L) {
	oid return_value;
	return_value = glColor3ubv((GLubyte *)luaglew_checkarray_ubyte(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glColor3ui (GLuint red, GLuint green, GLuint blue)
static int luaglew_glColor3ui(lua_State *L) {
	oid return_value;
	return_value = glColor3ui((GLuint)luaL_checkint(L, 1), (GLuint)luaL_checkint(L, 2), (GLuint)luaL_checkint(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glColor3uiv (const GLuint *v)
static int luaglew_glColor3uiv(lua_State *L) {
	oid return_value;
	return_value = glColor3uiv((GLuint *)luaglew_checkarray_int(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glColor3us (GLushort red, GLushort green, GLushort blue)
static int luaglew_glColor3us(lua_State *L) {
	oid return_value;
	return_value = glColor3us((GLushort)luaL_checkinteger(L, 1), (GLushort)luaL_checkinteger(L, 2), (GLushort)luaL_checkinteger(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glColor3usv (const GLushort *v)
static int luaglew_glColor3usv(lua_State *L) {
	oid return_value;
	return_value = glColor3usv((GLushort *)luaglew_checkarray_int(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glColor4b (GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha)
static int luaglew_glColor4b(lua_State *L) {
	oid return_value;
	return_value = glColor4b((GLbyte)luaL_checknumber(L, 1), (GLbyte)luaL_checknumber(L, 2), (GLbyte)luaL_checknumber(L, 3), (GLbyte)luaL_checknumber(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glColor4bv (const GLbyte *v)
static int luaglew_glColor4bv(lua_State *L) {
	oid return_value;
	return_value = glColor4bv((GLbyte *)luaglew_checkarray_byte(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glColor4d (GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha)
static int luaglew_glColor4d(lua_State *L) {
	oid return_value;
	return_value = glColor4d((GLdouble)luaL_checknumber(L, 1), (GLdouble)luaL_checknumber(L, 2), (GLdouble)luaL_checknumber(L, 3), (GLdouble)luaL_checknumber(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glColor4dv (const GLdouble *v)
static int luaglew_glColor4dv(lua_State *L) {
	oid return_value;
	return_value = glColor4dv((GLdouble *)luaglew_checkarray_doublefloat(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glColor4f (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha)
static int luaglew_glColor4f(lua_State *L) {
	oid return_value;
	return_value = glColor4f((GLfloat)luaL_checknumber(L, 1), (GLfloat)luaL_checknumber(L, 2), (GLfloat)luaL_checknumber(L, 3), (GLfloat)luaL_checknumber(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glColor4fv (const GLfloat *v)
static int luaglew_glColor4fv(lua_State *L) {
	oid return_value;
	return_value = glColor4fv((GLfloat *)luaglew_checkarray_doublefloat(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glColor4i (GLint red, GLint green, GLint blue, GLint alpha)
static int luaglew_glColor4i(lua_State *L) {
	oid return_value;
	return_value = glColor4i((GLint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glColor4iv (const GLint *v)
static int luaglew_glColor4iv(lua_State *L) {
	oid return_value;
	return_value = glColor4iv((GLint *)luaglew_checkarray_int(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glColor4s (GLshort red, GLshort green, GLshort blue, GLshort alpha)
static int luaglew_glColor4s(lua_State *L) {
	oid return_value;
	return_value = glColor4s((GLshort)luaL_checkinteger(L, 1), (GLshort)luaL_checkinteger(L, 2), (GLshort)luaL_checkinteger(L, 3), (GLshort)luaL_checkinteger(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glColor4sv (const GLshort *v)
static int luaglew_glColor4sv(lua_State *L) {
	oid return_value;
	return_value = glColor4sv((GLshort *)luaglew_checkarray_int(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glColor4ub (GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha)
static int luaglew_glColor4ub(lua_State *L) {
	oid return_value;
	return_value = glColor4ub((GLubyte)luaL_checknumber(L, 1), (GLubyte)luaL_checknumber(L, 2), (GLubyte)luaL_checknumber(L, 3), (GLubyte)luaL_checknumber(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glColor4ubv (const GLubyte *v)
static int luaglew_glColor4ubv(lua_State *L) {
	oid return_value;
	return_value = glColor4ubv((GLubyte *)luaglew_checkarray_ubyte(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glColor4ui (GLuint red, GLuint green, GLuint blue, GLuint alpha)
static int luaglew_glColor4ui(lua_State *L) {
	oid return_value;
	return_value = glColor4ui((GLuint)luaL_checkint(L, 1), (GLuint)luaL_checkint(L, 2), (GLuint)luaL_checkint(L, 3), (GLuint)luaL_checkint(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glColor4uiv (const GLuint *v)
static int luaglew_glColor4uiv(lua_State *L) {
	oid return_value;
	return_value = glColor4uiv((GLuint *)luaglew_checkarray_int(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glColor4us (GLushort red, GLushort green, GLushort blue, GLushort alpha)
static int luaglew_glColor4us(lua_State *L) {
	oid return_value;
	return_value = glColor4us((GLushort)luaL_checkinteger(L, 1), (GLushort)luaL_checkinteger(L, 2), (GLushort)luaL_checkinteger(L, 3), (GLushort)luaL_checkinteger(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glColor4usv (const GLushort *v)
static int luaglew_glColor4usv(lua_State *L) {
	oid return_value;
	return_value = glColor4usv((GLushort *)luaglew_checkarray_int(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glColorMask (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha)
static int luaglew_glColorMask(lua_State *L) {
	oid return_value;
	return_value = glColorMask((GLboolean)lua_toboolean(L, 1), (GLboolean)lua_toboolean(L, 2), (GLboolean)lua_toboolean(L, 3), (GLboolean)lua_toboolean(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glColorMaterial (GLenum face, GLenum mode)
static int luaglew_glColorMaterial(lua_State *L) {
	oid return_value;
	return_value = glColorMaterial(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glColorPointer (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)
static int luaglew_glColorPointer(lua_State *L) {
	oid return_value;
	return_value = glColorPointer((GLint)luaL_checkint(L, 1), luaglew_checkenum(L, 2), (GLsizei)luaL_checklong(L, 3), luaglew_checkarray_int(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glColorSubTable (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const GLvoid *data)
static int luaglew_glColorSubTable(lua_State *L) {
	oid return_value;
	return_value = glColorSubTable(luaglew_checkenum(L, 1), (GLsizei)luaL_checklong(L, 2), (GLsizei)luaL_checklong(L, 3), luaglew_checkenum(L, 4), luaglew_checkenum(L, 5), (GLvoid *)luaglew_checkarray_void(L, 6));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glColorTable (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *table)
static int luaglew_glColorTable(lua_State *L) {
	oid return_value;
	return_value = glColorTable(luaglew_checkenum(L, 1), luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), luaglew_checkenum(L, 4), luaglew_checkenum(L, 5), (GLvoid *)luaglew_checkarray_void(L, 6));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glColorTableParameterfv (GLenum target, GLenum pname, const GLfloat *params)
static int luaglew_glColorTableParameterfv(lua_State *L) {
	oid return_value;
	return_value = glColorTableParameterfv(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLfloat *)luaglew_checkarray_doublefloat(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glColorTableParameteriv (GLenum target, GLenum pname, const GLint *params)
static int luaglew_glColorTableParameteriv(lua_State *L) {
	oid return_value;
	return_value = glColorTableParameteriv(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glConvolutionFilter1D (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *image)
static int luaglew_glConvolutionFilter1D(lua_State *L) {
	oid return_value;
	return_value = glConvolutionFilter1D(luaglew_checkenum(L, 1), luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), luaglew_checkenum(L, 4), luaglew_checkenum(L, 5), (GLvoid *)luaglew_checkarray_void(L, 6));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glConvolutionFilter2D (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *image)
static int luaglew_glConvolutionFilter2D(lua_State *L) {
	oid return_value;
	return_value = glConvolutionFilter2D(luaglew_checkenum(L, 1), luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLsizei)luaL_checklong(L, 4), luaglew_checkenum(L, 5), luaglew_checkenum(L, 6), (GLvoid *)luaglew_checkarray_void(L, 7));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glConvolutionParameterf (GLenum target, GLenum pname, GLfloat params)
static int luaglew_glConvolutionParameterf(lua_State *L) {
	oid return_value;
	return_value = glConvolutionParameterf(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLfloat)luaL_checknumber(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glConvolutionParameterfv (GLenum target, GLenum pname, const GLfloat *params)
static int luaglew_glConvolutionParameterfv(lua_State *L) {
	oid return_value;
	return_value = glConvolutionParameterfv(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLfloat *)luaglew_checkarray_doublefloat(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glConvolutionParameteri (GLenum target, GLenum pname, GLint params)
static int luaglew_glConvolutionParameteri(lua_State *L) {
	oid return_value;
	return_value = glConvolutionParameteri(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLint)luaL_checkint(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glConvolutionParameteriv (GLenum target, GLenum pname, const GLint *params)
static int luaglew_glConvolutionParameteriv(lua_State *L) {
	oid return_value;
	return_value = glConvolutionParameteriv(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glCopyColorSubTable (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width)
static int luaglew_glCopyColorSubTable(lua_State *L) {
	oid return_value;
	return_value = glCopyColorSubTable(luaglew_checkenum(L, 1), (GLsizei)luaL_checklong(L, 2), (GLint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4), (GLsizei)luaL_checklong(L, 5));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glCopyColorTable (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width)
static int luaglew_glCopyColorTable(lua_State *L) {
	oid return_value;
	return_value = glCopyColorTable(luaglew_checkenum(L, 1), luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4), (GLsizei)luaL_checklong(L, 5));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glCopyConvolutionFilter1D (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width)
static int luaglew_glCopyConvolutionFilter1D(lua_State *L) {
	oid return_value;
	return_value = glCopyConvolutionFilter1D(luaglew_checkenum(L, 1), luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4), (GLsizei)luaL_checklong(L, 5));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glCopyConvolutionFilter2D (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height)
static int luaglew_glCopyConvolutionFilter2D(lua_State *L) {
	oid return_value;
	return_value = glCopyConvolutionFilter2D(luaglew_checkenum(L, 1), luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4), (GLsizei)luaL_checklong(L, 5), (GLsizei)luaL_checklong(L, 6));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glCopyPixels (GLint x, GLint y, GLsizei width, GLsizei height, GLenum type)
static int luaglew_glCopyPixels(lua_State *L) {
	oid return_value;
	return_value = glCopyPixels((GLint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLsizei)luaL_checklong(L, 4), luaglew_checkenum(L, 5));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glCopyTexImage1D (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border)
static int luaglew_glCopyTexImage1D(lua_State *L) {
	oid return_value;
	return_value = glCopyTexImage1D(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4), (GLint)luaL_checkint(L, 5), (GLsizei)luaL_checklong(L, 6), (GLint)luaL_checkint(L, 7));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glCopyTexImage2D (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border)
static int luaglew_glCopyTexImage2D(lua_State *L) {
	oid return_value;
	return_value = glCopyTexImage2D(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4), (GLint)luaL_checkint(L, 5), (GLsizei)luaL_checklong(L, 6), (GLsizei)luaL_checklong(L, 7), (GLint)luaL_checkint(L, 8));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glCopyTexSubImage1D (GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width)
static int luaglew_glCopyTexSubImage1D(lua_State *L) {
	oid return_value;
	return_value = glCopyTexSubImage1D(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4), (GLint)luaL_checkint(L, 5), (GLsizei)luaL_checklong(L, 6));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glCopyTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height)
static int luaglew_glCopyTexSubImage2D(lua_State *L) {
	oid return_value;
	return_value = glCopyTexSubImage2D(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4), (GLint)luaL_checkint(L, 5), (GLint)luaL_checkint(L, 6), (GLsizei)luaL_checklong(L, 7), (GLsizei)luaL_checklong(L, 8));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glCopyTexSubImage3D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height)
static int luaglew_glCopyTexSubImage3D(lua_State *L) {
	oid return_value;
	return_value = glCopyTexSubImage3D(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4), (GLint)luaL_checkint(L, 5), (GLint)luaL_checkint(L, 6), (GLint)luaL_checkint(L, 7), (GLsizei)luaL_checklong(L, 8), (GLsizei)luaL_checklong(L, 9));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glCullFace (GLenum mode)
static int luaglew_glCullFace(lua_State *L) {
	oid return_value;
	return_value = glCullFace(luaglew_checkenum(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glDeleteLists (GLuint list, GLsizei range)
static int luaglew_glDeleteLists(lua_State *L) {
	oid return_value;
	return_value = glDeleteLists((GLuint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glDeleteTextures (GLsizei n, const GLuint *textures)
static int luaglew_glDeleteTextures(lua_State *L) {
	oid return_value;
	return_value = glDeleteTextures((GLsizei)luaL_checklong(L, 1), (GLuint *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glDepthFunc (GLenum func)
static int luaglew_glDepthFunc(lua_State *L) {
	oid return_value;
	return_value = glDepthFunc(luaglew_checkenum(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glDepthMask (GLboolean flag)
static int luaglew_glDepthMask(lua_State *L) {
	oid return_value;
	return_value = glDepthMask((GLboolean)lua_toboolean(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glDepthRange (GLclampd zNear, GLclampd zFar)
static int luaglew_glDepthRange(lua_State *L) {
	oid return_value;
	return_value = glDepthRange((GLclampd)luaL_checknumber(L, 1), (GLclampd)luaL_checknumber(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glDisable (GLenum cap)
static int luaglew_glDisable(lua_State *L) {
	oid return_value;
	return_value = glDisable(luaglew_checkenum(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glDisableClientState (GLenum array)
static int luaglew_glDisableClientState(lua_State *L) {
	oid return_value;
	return_value = glDisableClientState(luaglew_checkenum(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glDrawArrays (GLenum mode, GLint first, GLsizei count)
static int luaglew_glDrawArrays(lua_State *L) {
	oid return_value;
	return_value = glDrawArrays(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glDrawBuffer (GLenum mode)
static int luaglew_glDrawBuffer(lua_State *L) {
	oid return_value;
	return_value = glDrawBuffer(luaglew_checkenum(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glDrawElements (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices)
static int luaglew_glDrawElements(lua_State *L) {
	oid return_value;
	return_value = glDrawElements(luaglew_checkenum(L, 1), (GLsizei)luaL_checklong(L, 2), luaglew_checkenum(L, 3), (GLvoid *)luaglew_checkarray_void(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glDrawPixels (GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels)
static int luaglew_glDrawPixels(lua_State *L) {
	oid return_value;
	return_value = glDrawPixels((GLsizei)luaL_checklong(L, 1), (GLsizei)luaL_checklong(L, 2), luaglew_checkenum(L, 3), luaglew_checkenum(L, 4), (GLvoid *)luaglew_checkarray_void(L, 5));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glDrawRangeElements (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices)
static int luaglew_glDrawRangeElements(lua_State *L) {
	oid return_value;
	return_value = glDrawRangeElements(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2), (GLuint)luaL_checkint(L, 3), (GLsizei)luaL_checklong(L, 4), luaglew_checkenum(L, 5), (GLvoid *)luaglew_checkarray_void(L, 6));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glEdgeFlag (GLboolean flag)
static int luaglew_glEdgeFlag(lua_State *L) {
	oid return_value;
	return_value = glEdgeFlag((GLboolean)lua_toboolean(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glEdgeFlagPointer (GLsizei stride, const GLvoid *pointer)
static int luaglew_glEdgeFlagPointer(lua_State *L) {
	oid return_value;
	return_value = glEdgeFlagPointer((GLsizei)luaL_checklong(L, 1), luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glEdgeFlagv (const GLboolean *flag)
static int luaglew_glEdgeFlagv(lua_State *L) {
	oid return_value;
	return_value = glEdgeFlagv((GLboolean *)luaglew_checkarray_boolean(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glEnable (GLenum cap)
static int luaglew_glEnable(lua_State *L) {
	oid return_value;
	return_value = glEnable(luaglew_checkenum(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glEnableClientState (GLenum array)
static int luaglew_glEnableClientState(lua_State *L) {
	oid return_value;
	return_value = glEnableClientState(luaglew_checkenum(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glEnd (void)
static int luaglew_glEnd(lua_State *L) {
	oid return_value;
	return_value = glEnd();
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glEndList (void)
static int luaglew_glEndList(lua_State *L) {
	oid return_value;
	return_value = glEndList();
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glEvalCoord1d (GLdouble u)
static int luaglew_glEvalCoord1d(lua_State *L) {
	oid return_value;
	return_value = glEvalCoord1d((GLdouble)luaL_checknumber(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glEvalCoord1dv (const GLdouble *u)
static int luaglew_glEvalCoord1dv(lua_State *L) {
	oid return_value;
	return_value = glEvalCoord1dv((GLdouble *)luaglew_checkarray_doublefloat(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glEvalCoord1f (GLfloat u)
static int luaglew_glEvalCoord1f(lua_State *L) {
	oid return_value;
	return_value = glEvalCoord1f((GLfloat)luaL_checknumber(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glEvalCoord1fv (const GLfloat *u)
static int luaglew_glEvalCoord1fv(lua_State *L) {
	oid return_value;
	return_value = glEvalCoord1fv((GLfloat *)luaglew_checkarray_doublefloat(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glEvalCoord2d (GLdouble u, GLdouble v)
static int luaglew_glEvalCoord2d(lua_State *L) {
	oid return_value;
	return_value = glEvalCoord2d((GLdouble)luaL_checknumber(L, 1), (GLdouble)luaL_checknumber(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glEvalCoord2dv (const GLdouble *u)
static int luaglew_glEvalCoord2dv(lua_State *L) {
	oid return_value;
	return_value = glEvalCoord2dv((GLdouble *)luaglew_checkarray_doublefloat(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glEvalCoord2f (GLfloat u, GLfloat v)
static int luaglew_glEvalCoord2f(lua_State *L) {
	oid return_value;
	return_value = glEvalCoord2f((GLfloat)luaL_checknumber(L, 1), (GLfloat)luaL_checknumber(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glEvalCoord2fv (const GLfloat *u)
static int luaglew_glEvalCoord2fv(lua_State *L) {
	oid return_value;
	return_value = glEvalCoord2fv((GLfloat *)luaglew_checkarray_doublefloat(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glEvalMesh1 (GLenum mode, GLint i1, GLint i2)
static int luaglew_glEvalMesh1(lua_State *L) {
	oid return_value;
	return_value = glEvalMesh1(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glEvalMesh2 (GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2)
static int luaglew_glEvalMesh2(lua_State *L) {
	oid return_value;
	return_value = glEvalMesh2(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4), (GLint)luaL_checkint(L, 5));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glEvalPoint1 (GLint i)
static int luaglew_glEvalPoint1(lua_State *L) {
	oid return_value;
	return_value = glEvalPoint1((GLint)luaL_checkint(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glEvalPoint2 (GLint i, GLint j)
static int luaglew_glEvalPoint2(lua_State *L) {
	oid return_value;
	return_value = glEvalPoint2((GLint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glFeedbackBuffer (GLsizei size, GLenum type, GLfloat *buffer)
static int luaglew_glFeedbackBuffer(lua_State *L) {
	oid return_value;
	return_value = glFeedbackBuffer((GLsizei)luaL_checklong(L, 1), luaglew_checkenum(L, 2), (GLfloat *)luaglew_checkarray_doublefloat(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glFinish (void)
static int luaglew_glFinish(lua_State *L) {
	oid return_value;
	return_value = glFinish();
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glFlush (void)
static int luaglew_glFlush(lua_State *L) {
	oid return_value;
	return_value = glFlush();
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glFogf (GLenum pname, GLfloat param)
static int luaglew_glFogf(lua_State *L) {
	oid return_value;
	return_value = glFogf(luaglew_checkenum(L, 1), (GLfloat)luaL_checknumber(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glFogfv (GLenum pname, const GLfloat *params)
static int luaglew_glFogfv(lua_State *L) {
	oid return_value;
	return_value = glFogfv(luaglew_checkenum(L, 1), (GLfloat *)luaglew_checkarray_doublefloat(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glFogi (GLenum pname, GLint param)
static int luaglew_glFogi(lua_State *L) {
	oid return_value;
	return_value = glFogi(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glFogiv (GLenum pname, const GLint *params)
static int luaglew_glFogiv(lua_State *L) {
	oid return_value;
	return_value = glFogiv(luaglew_checkenum(L, 1), (GLint *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glFrontFace (GLenum mode)
static int luaglew_glFrontFace(lua_State *L) {
	oid return_value;
	return_value = glFrontFace(luaglew_checkenum(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glFrustum (GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar)
static int luaglew_glFrustum(lua_State *L) {
	oid return_value;
	return_value = glFrustum((GLdouble)luaL_checknumber(L, 1), (GLdouble)luaL_checknumber(L, 2), (GLdouble)luaL_checknumber(L, 3), (GLdouble)luaL_checknumber(L, 4), (GLdouble)luaL_checknumber(L, 5), (GLdouble)luaL_checknumber(L, 6));
	push( ** nespracovany typ oid ** );
	return 1;
}

// Luint glGenLists (GLsizei range)
static int luaglew_glGenLists(lua_State *L) {
	Luint return_value;
	return_value = glGenLists((GLsizei)luaL_checklong(L, 1));
	lua_pushinteger(L, return_value);
	return 1;
}

// oid glGenTextures (GLsizei n, GLuint *textures)
static int luaglew_glGenTextures(lua_State *L) {
	oid return_value;
	return_value = glGenTextures((GLsizei)luaL_checklong(L, 1), (GLuint *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetBooleanv (GLenum pname, GLboolean *params)
static int luaglew_glGetBooleanv(lua_State *L) {
	oid return_value;
	return_value = glGetBooleanv(luaglew_checkenum(L, 1), (GLboolean *)luaglew_checkarray_boolean(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetClipPlane (GLenum plane, GLdouble *equation)
static int luaglew_glGetClipPlane(lua_State *L) {
	oid return_value;
	return_value = glGetClipPlane(luaglew_checkenum(L, 1), (GLdouble *)luaglew_checkarray_doublefloat(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetColorTable (GLenum target, GLenum format, GLenum type, GLvoid *table)
static int luaglew_glGetColorTable(lua_State *L) {
	oid return_value;
	return_value = glGetColorTable(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), luaglew_checkenum(L, 3), (GLvoid *)luaglew_checkarray_void(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetColorTableParameterfv (GLenum target, GLenum pname, GLfloat *params)
static int luaglew_glGetColorTableParameterfv(lua_State *L) {
	oid return_value;
	return_value = glGetColorTableParameterfv(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLfloat *)luaglew_checkarray_doublefloat(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetColorTableParameteriv (GLenum target, GLenum pname, GLint *params)
static int luaglew_glGetColorTableParameteriv(lua_State *L) {
	oid return_value;
	return_value = glGetColorTableParameteriv(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetConvolutionFilter (GLenum target, GLenum format, GLenum type, GLvoid *image)
static int luaglew_glGetConvolutionFilter(lua_State *L) {
	oid return_value;
	return_value = glGetConvolutionFilter(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), luaglew_checkenum(L, 3), (GLvoid *)luaglew_checkarray_void(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetConvolutionParameterfv (GLenum target, GLenum pname, GLfloat *params)
static int luaglew_glGetConvolutionParameterfv(lua_State *L) {
	oid return_value;
	return_value = glGetConvolutionParameterfv(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLfloat *)luaglew_checkarray_doublefloat(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetConvolutionParameteriv (GLenum target, GLenum pname, GLint *params)
static int luaglew_glGetConvolutionParameteriv(lua_State *L) {
	oid return_value;
	return_value = glGetConvolutionParameteriv(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetDoublev (GLenum pname, GLdouble *params)
static int luaglew_glGetDoublev(lua_State *L) {
	oid return_value;
	return_value = glGetDoublev(luaglew_checkenum(L, 1), (GLdouble *)luaglew_checkarray_doublefloat(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// Lenum glGetError (void)
static int luaglew_glGetError(lua_State *L) {
	Lenum return_value;
	return_value = glGetError();
	push( ** nespracovany typ Lenum ** );
	return 1;
}

// oid glGetFloatv (GLenum pname, GLfloat *params)
static int luaglew_glGetFloatv(lua_State *L) {
	oid return_value;
	return_value = glGetFloatv(luaglew_checkenum(L, 1), (GLfloat *)luaglew_checkarray_doublefloat(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetHistogram (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values)
static int luaglew_glGetHistogram(lua_State *L) {
	oid return_value;
	return_value = glGetHistogram(luaglew_checkenum(L, 1), (GLboolean)lua_toboolean(L, 2), luaglew_checkenum(L, 3), luaglew_checkenum(L, 4), (GLvoid *)luaglew_checkarray_void(L, 5));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetHistogramParameterfv (GLenum target, GLenum pname, GLfloat *params)
static int luaglew_glGetHistogramParameterfv(lua_State *L) {
	oid return_value;
	return_value = glGetHistogramParameterfv(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLfloat *)luaglew_checkarray_doublefloat(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetHistogramParameteriv (GLenum target, GLenum pname, GLint *params)
static int luaglew_glGetHistogramParameteriv(lua_State *L) {
	oid return_value;
	return_value = glGetHistogramParameteriv(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetIntegerv (GLenum pname, GLint *params)
static int luaglew_glGetIntegerv(lua_State *L) {
	oid return_value;
	return_value = glGetIntegerv(luaglew_checkenum(L, 1), (GLint *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetLightfv (GLenum light, GLenum pname, GLfloat *params)
static int luaglew_glGetLightfv(lua_State *L) {
	oid return_value;
	return_value = glGetLightfv(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLfloat *)luaglew_checkarray_doublefloat(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetLightiv (GLenum light, GLenum pname, GLint *params)
static int luaglew_glGetLightiv(lua_State *L) {
	oid return_value;
	return_value = glGetLightiv(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetMapdv (GLenum target, GLenum query, GLdouble *v)
static int luaglew_glGetMapdv(lua_State *L) {
	oid return_value;
	return_value = glGetMapdv(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLdouble *)luaglew_checkarray_doublefloat(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetMapfv (GLenum target, GLenum query, GLfloat *v)
static int luaglew_glGetMapfv(lua_State *L) {
	oid return_value;
	return_value = glGetMapfv(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLfloat *)luaglew_checkarray_doublefloat(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetMapiv (GLenum target, GLenum query, GLint *v)
static int luaglew_glGetMapiv(lua_State *L) {
	oid return_value;
	return_value = glGetMapiv(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetMaterialfv (GLenum face, GLenum pname, GLfloat *params)
static int luaglew_glGetMaterialfv(lua_State *L) {
	oid return_value;
	return_value = glGetMaterialfv(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLfloat *)luaglew_checkarray_doublefloat(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetMaterialiv (GLenum face, GLenum pname, GLint *params)
static int luaglew_glGetMaterialiv(lua_State *L) {
	oid return_value;
	return_value = glGetMaterialiv(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetMinmax (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values)
static int luaglew_glGetMinmax(lua_State *L) {
	oid return_value;
	return_value = glGetMinmax(luaglew_checkenum(L, 1), (GLboolean)lua_toboolean(L, 2), luaglew_checkenum(L, 3), luaglew_checkenum(L, 4), (GLvoid *)luaglew_checkarray_void(L, 5));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetMinmaxParameterfv (GLenum target, GLenum pname, GLfloat *params)
static int luaglew_glGetMinmaxParameterfv(lua_State *L) {
	oid return_value;
	return_value = glGetMinmaxParameterfv(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLfloat *)luaglew_checkarray_doublefloat(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetMinmaxParameteriv (GLenum target, GLenum pname, GLint *params)
static int luaglew_glGetMinmaxParameteriv(lua_State *L) {
	oid return_value;
	return_value = glGetMinmaxParameteriv(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetPixelMapfv (GLenum map, GLfloat *values)
static int luaglew_glGetPixelMapfv(lua_State *L) {
	oid return_value;
	return_value = glGetPixelMapfv(luaglew_checkenum(L, 1), (GLfloat *)luaglew_checkarray_doublefloat(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetPixelMapuiv (GLenum map, GLuint *values)
static int luaglew_glGetPixelMapuiv(lua_State *L) {
	oid return_value;
	return_value = glGetPixelMapuiv(luaglew_checkenum(L, 1), (GLuint *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetPixelMapusv (GLenum map, GLushort *values)
static int luaglew_glGetPixelMapusv(lua_State *L) {
	oid return_value;
	return_value = glGetPixelMapusv(luaglew_checkenum(L, 1), (GLushort *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetPointerv (GLenum pname, GLvoid* *params)
static int luaglew_glGetPointerv(lua_State *L) {
	oid return_value;
	return_value = glGetPointerv(luaglew_checkenum(L, 1), (GLvoid *)luaglew_checkarray_void(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetPolygonStipple (GLubyte *mask)
static int luaglew_glGetPolygonStipple(lua_State *L) {
	oid return_value;
	return_value = glGetPolygonStipple((GLubyte *)luaglew_checkarray_ubyte(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetSeparableFilter (GLenum target, GLenum format, GLenum type, GLvoid *row, GLvoid *column, GLvoid *span)
static int luaglew_glGetSeparableFilter(lua_State *L) {
	oid return_value;
	return_value = glGetSeparableFilter(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), luaglew_checkenum(L, 3), (GLvoid *)luaglew_checkarray_void(L, 4), (GLvoid *)luaglew_checkarray_void(L, 5), (GLvoid *)luaglew_checkarray_void(L, 6));
	push( ** nespracovany typ oid ** );
	return 1;
}

// onst GLubyte * glGetString (GLenum name)
static int luaglew_GLubyte(lua_State *L) {
	onst return_value;
	return_value = GLubyte(luaglew_checkenum(L, 1));
	push( ** nespracovany typ onst ** );
	return 1;
}

// oid glGetTexEnvfv (GLenum target, GLenum pname, GLfloat *params)
static int luaglew_glGetTexEnvfv(lua_State *L) {
	oid return_value;
	return_value = glGetTexEnvfv(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLfloat *)luaglew_checkarray_doublefloat(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetTexEnviv (GLenum target, GLenum pname, GLint *params)
static int luaglew_glGetTexEnviv(lua_State *L) {
	oid return_value;
	return_value = glGetTexEnviv(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetTexGendv (GLenum coord, GLenum pname, GLdouble *params)
static int luaglew_glGetTexGendv(lua_State *L) {
	oid return_value;
	return_value = glGetTexGendv(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLdouble *)luaglew_checkarray_doublefloat(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetTexGenfv (GLenum coord, GLenum pname, GLfloat *params)
static int luaglew_glGetTexGenfv(lua_State *L) {
	oid return_value;
	return_value = glGetTexGenfv(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLfloat *)luaglew_checkarray_doublefloat(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetTexGeniv (GLenum coord, GLenum pname, GLint *params)
static int luaglew_glGetTexGeniv(lua_State *L) {
	oid return_value;
	return_value = glGetTexGeniv(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetTexImage (GLenum target, GLint level, GLenum format, GLenum type, GLvoid *pixels)
static int luaglew_glGetTexImage(lua_State *L) {
	oid return_value;
	return_value = glGetTexImage(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), luaglew_checkenum(L, 3), luaglew_checkenum(L, 4), (GLvoid *)luaglew_checkarray_void(L, 5));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetTexLevelParameterfv (GLenum target, GLint level, GLenum pname, GLfloat *params)
static int luaglew_glGetTexLevelParameterfv(lua_State *L) {
	oid return_value;
	return_value = glGetTexLevelParameterfv(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), luaglew_checkenum(L, 3), (GLfloat *)luaglew_checkarray_doublefloat(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetTexLevelParameteriv (GLenum target, GLint level, GLenum pname, GLint *params)
static int luaglew_glGetTexLevelParameteriv(lua_State *L) {
	oid return_value;
	return_value = glGetTexLevelParameteriv(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), luaglew_checkenum(L, 3), (GLint *)luaglew_checkarray_int(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetTexParameterfv (GLenum target, GLenum pname, GLfloat *params)
static int luaglew_glGetTexParameterfv(lua_State *L) {
	oid return_value;
	return_value = glGetTexParameterfv(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLfloat *)luaglew_checkarray_doublefloat(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetTexParameteriv (GLenum target, GLenum pname, GLint *params)
static int luaglew_glGetTexParameteriv(lua_State *L) {
	oid return_value;
	return_value = glGetTexParameteriv(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glHint (GLenum target, GLenum mode)
static int luaglew_glHint(lua_State *L) {
	oid return_value;
	return_value = glHint(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glHistogram (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink)
static int luaglew_glHistogram(lua_State *L) {
	oid return_value;
	return_value = glHistogram(luaglew_checkenum(L, 1), (GLsizei)luaL_checklong(L, 2), luaL_checkint(L, 3), (GLboolean)lua_toboolean(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glIndexMask (GLuint mask)
static int luaglew_glIndexMask(lua_State *L) {
	oid return_value;
	return_value = glIndexMask((GLuint)luaL_checkint(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glIndexPointer (GLenum type, GLsizei stride, const GLvoid *pointer)
static int luaglew_glIndexPointer(lua_State *L) {
	oid return_value;
	return_value = glIndexPointer(luaglew_checkenum(L, 1), (GLsizei)luaL_checklong(L, 2), luaglew_checkarray_int(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glIndexd (GLdouble c)
static int luaglew_glIndexd(lua_State *L) {
	oid return_value;
	return_value = glIndexd((GLdouble)luaL_checknumber(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glIndexdv (const GLdouble *c)
static int luaglew_glIndexdv(lua_State *L) {
	oid return_value;
	return_value = glIndexdv((GLdouble *)luaglew_checkarray_doublefloat(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glIndexf (GLfloat c)
static int luaglew_glIndexf(lua_State *L) {
	oid return_value;
	return_value = glIndexf((GLfloat)luaL_checknumber(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glIndexfv (const GLfloat *c)
static int luaglew_glIndexfv(lua_State *L) {
	oid return_value;
	return_value = glIndexfv((GLfloat *)luaglew_checkarray_doublefloat(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glIndexi (GLint c)
static int luaglew_glIndexi(lua_State *L) {
	oid return_value;
	return_value = glIndexi((GLint)luaL_checkint(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glIndexiv (const GLint *c)
static int luaglew_glIndexiv(lua_State *L) {
	oid return_value;
	return_value = glIndexiv((GLint *)luaglew_checkarray_int(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glIndexs (GLshort c)
static int luaglew_glIndexs(lua_State *L) {
	oid return_value;
	return_value = glIndexs((GLshort)luaL_checkinteger(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glIndexsv (const GLshort *c)
static int luaglew_glIndexsv(lua_State *L) {
	oid return_value;
	return_value = glIndexsv((GLshort *)luaglew_checkarray_int(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glIndexub (GLubyte c)
static int luaglew_glIndexub(lua_State *L) {
	oid return_value;
	return_value = glIndexub((GLubyte)luaL_checknumber(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glIndexubv (const GLubyte *c)
static int luaglew_glIndexubv(lua_State *L) {
	oid return_value;
	return_value = glIndexubv((GLubyte *)luaglew_checkarray_ubyte(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glInitNames (void)
static int luaglew_glInitNames(lua_State *L) {
	oid return_value;
	return_value = glInitNames();
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glInterleavedArrays (GLenum format, GLsizei stride, const GLvoid *pointer)
static int luaglew_glInterleavedArrays(lua_State *L) {
	oid return_value;
	return_value = glInterleavedArrays(luaglew_checkenum(L, 1), (GLsizei)luaL_checklong(L, 2), luaglew_checkarray_int(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// Lboolean glIsEnabled (GLenum cap)
static int luaglew_glIsEnabled(lua_State *L) {
	Lboolean return_value;
	return_value = glIsEnabled(luaglew_checkenum(L, 1));
	push( ** nespracovany typ Lboolean ** );
	return 1;
}

// Lboolean glIsList (GLuint list)
static int luaglew_glIsList(lua_State *L) {
	Lboolean return_value;
	return_value = glIsList((GLuint)luaL_checkint(L, 1));
	push( ** nespracovany typ Lboolean ** );
	return 1;
}

// Lboolean glIsTexture (GLuint texture)
static int luaglew_glIsTexture(lua_State *L) {
	Lboolean return_value;
	return_value = glIsTexture((GLuint)luaL_checkint(L, 1));
	push( ** nespracovany typ Lboolean ** );
	return 1;
}

// oid glLightModelf (GLenum pname, GLfloat param)
static int luaglew_glLightModelf(lua_State *L) {
	oid return_value;
	return_value = glLightModelf(luaglew_checkenum(L, 1), (GLfloat)luaL_checknumber(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glLightModelfv (GLenum pname, const GLfloat *params)
static int luaglew_glLightModelfv(lua_State *L) {
	oid return_value;
	return_value = glLightModelfv(luaglew_checkenum(L, 1), (GLfloat *)luaglew_checkarray_doublefloat(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glLightModeli (GLenum pname, GLint param)
static int luaglew_glLightModeli(lua_State *L) {
	oid return_value;
	return_value = glLightModeli(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glLightModeliv (GLenum pname, const GLint *params)
static int luaglew_glLightModeliv(lua_State *L) {
	oid return_value;
	return_value = glLightModeliv(luaglew_checkenum(L, 1), (GLint *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glLightf (GLenum light, GLenum pname, GLfloat param)
static int luaglew_glLightf(lua_State *L) {
	oid return_value;
	return_value = glLightf(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLfloat)luaL_checknumber(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glLightfv (GLenum light, GLenum pname, const GLfloat *params)
static int luaglew_glLightfv(lua_State *L) {
	oid return_value;
	return_value = glLightfv(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLfloat *)luaglew_checkarray_doublefloat(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glLighti (GLenum light, GLenum pname, GLint param)
static int luaglew_glLighti(lua_State *L) {
	oid return_value;
	return_value = glLighti(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLint)luaL_checkint(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glLightiv (GLenum light, GLenum pname, const GLint *params)
static int luaglew_glLightiv(lua_State *L) {
	oid return_value;
	return_value = glLightiv(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glLineStipple (GLint factor, GLushort pattern)
static int luaglew_glLineStipple(lua_State *L) {
	oid return_value;
	return_value = glLineStipple((GLint)luaL_checkint(L, 1), (GLushort)luaL_checkinteger(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glLineWidth (GLfloat width)
static int luaglew_glLineWidth(lua_State *L) {
	oid return_value;
	return_value = glLineWidth((GLfloat)luaL_checknumber(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glListBase (GLuint base)
static int luaglew_glListBase(lua_State *L) {
	oid return_value;
	return_value = glListBase((GLuint)luaL_checkint(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glLoadIdentity (void)
static int luaglew_glLoadIdentity(lua_State *L) {
	oid return_value;
	return_value = glLoadIdentity();
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glLoadMatrixd (const GLdouble *m)
static int luaglew_glLoadMatrixd(lua_State *L) {
	oid return_value;
	return_value = glLoadMatrixd((GLdouble *)luaglew_checkarray_doublefloat(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glLoadMatrixf (const GLfloat *m)
static int luaglew_glLoadMatrixf(lua_State *L) {
	oid return_value;
	return_value = glLoadMatrixf((GLfloat *)luaglew_checkarray_doublefloat(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glLoadName (GLuint name)
static int luaglew_glLoadName(lua_State *L) {
	oid return_value;
	return_value = glLoadName((GLuint)luaL_checkint(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glLogicOp (GLenum opcode)
static int luaglew_glLogicOp(lua_State *L) {
	oid return_value;
	return_value = glLogicOp(luaglew_checkenum(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMap1d (GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble *points)
static int luaglew_glMap1d(lua_State *L) {
	oid return_value;
	return_value = glMap1d(luaglew_checkenum(L, 1), (GLdouble)luaL_checknumber(L, 2), (GLdouble)luaL_checknumber(L, 3), (GLint)luaL_checkint(L, 4), (GLint)luaL_checkint(L, 5), (GLdouble *)luaglew_checkarray_doublefloat(L, 6));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMap1f (GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points)
static int luaglew_glMap1f(lua_State *L) {
	oid return_value;
	return_value = glMap1f(luaglew_checkenum(L, 1), (GLfloat)luaL_checknumber(L, 2), (GLfloat)luaL_checknumber(L, 3), (GLint)luaL_checkint(L, 4), (GLint)luaL_checkint(L, 5), (GLfloat *)luaglew_checkarray_doublefloat(L, 6));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMap2d (GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble *points)
static int luaglew_glMap2d(lua_State *L) {
	oid return_value;
	return_value = glMap2d(luaglew_checkenum(L, 1), (GLdouble)luaL_checknumber(L, 2), (GLdouble)luaL_checknumber(L, 3), (GLint)luaL_checkint(L, 4), (GLint)luaL_checkint(L, 5), (GLdouble)luaL_checknumber(L, 6), (GLdouble)luaL_checknumber(L, 7), (GLint)luaL_checkint(L, 8), (GLint)luaL_checkint(L, 9), (GLdouble *)luaglew_checkarray_doublefloat(L, 10));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMap2f (GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points)
static int luaglew_glMap2f(lua_State *L) {
	oid return_value;
	return_value = glMap2f(luaglew_checkenum(L, 1), (GLfloat)luaL_checknumber(L, 2), (GLfloat)luaL_checknumber(L, 3), (GLint)luaL_checkint(L, 4), (GLint)luaL_checkint(L, 5), (GLfloat)luaL_checknumber(L, 6), (GLfloat)luaL_checknumber(L, 7), (GLint)luaL_checkint(L, 8), (GLint)luaL_checkint(L, 9), (GLfloat *)luaglew_checkarray_doublefloat(L, 10));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMapGrid1d (GLint un, GLdouble u1, GLdouble u2)
static int luaglew_glMapGrid1d(lua_State *L) {
	oid return_value;
	return_value = glMapGrid1d((GLint)luaL_checkint(L, 1), (GLdouble)luaL_checknumber(L, 2), (GLdouble)luaL_checknumber(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMapGrid1f (GLint un, GLfloat u1, GLfloat u2)
static int luaglew_glMapGrid1f(lua_State *L) {
	oid return_value;
	return_value = glMapGrid1f((GLint)luaL_checkint(L, 1), (GLfloat)luaL_checknumber(L, 2), (GLfloat)luaL_checknumber(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMapGrid2d (GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2)
static int luaglew_glMapGrid2d(lua_State *L) {
	oid return_value;
	return_value = glMapGrid2d((GLint)luaL_checkint(L, 1), (GLdouble)luaL_checknumber(L, 2), (GLdouble)luaL_checknumber(L, 3), (GLint)luaL_checkint(L, 4), (GLdouble)luaL_checknumber(L, 5), (GLdouble)luaL_checknumber(L, 6));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMapGrid2f (GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2)
static int luaglew_glMapGrid2f(lua_State *L) {
	oid return_value;
	return_value = glMapGrid2f((GLint)luaL_checkint(L, 1), (GLfloat)luaL_checknumber(L, 2), (GLfloat)luaL_checknumber(L, 3), (GLint)luaL_checkint(L, 4), (GLfloat)luaL_checknumber(L, 5), (GLfloat)luaL_checknumber(L, 6));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMaterialf (GLenum face, GLenum pname, GLfloat param)
static int luaglew_glMaterialf(lua_State *L) {
	oid return_value;
	return_value = glMaterialf(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLfloat)luaL_checknumber(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMaterialfv (GLenum face, GLenum pname, const GLfloat *params)
static int luaglew_glMaterialfv(lua_State *L) {
	oid return_value;
	return_value = glMaterialfv(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLfloat *)luaglew_checkarray_doublefloat(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMateriali (GLenum face, GLenum pname, GLint param)
static int luaglew_glMateriali(lua_State *L) {
	oid return_value;
	return_value = glMateriali(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLint)luaL_checkint(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMaterialiv (GLenum face, GLenum pname, const GLint *params)
static int luaglew_glMaterialiv(lua_State *L) {
	oid return_value;
	return_value = glMaterialiv(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMatrixMode (GLenum mode)
static int luaglew_glMatrixMode(lua_State *L) {
	oid return_value;
	return_value = glMatrixMode(luaglew_checkenum(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMinmax (GLenum target, GLenum internalformat, GLboolean sink)
static int luaglew_glMinmax(lua_State *L) {
	oid return_value;
	return_value = glMinmax(luaglew_checkenum(L, 1), luaL_checkint(L, 2), (GLboolean)lua_toboolean(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultMatrixd (const GLdouble *m)
static int luaglew_glMultMatrixd(lua_State *L) {
	oid return_value;
	return_value = glMultMatrixd((GLdouble *)luaglew_checkarray_doublefloat(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultMatrixf (const GLfloat *m)
static int luaglew_glMultMatrixf(lua_State *L) {
	oid return_value;
	return_value = glMultMatrixf((GLfloat *)luaglew_checkarray_doublefloat(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glNewList (GLuint list, GLenum mode)
static int luaglew_glNewList(lua_State *L) {
	oid return_value;
	return_value = glNewList((GLuint)luaL_checkint(L, 1), luaglew_checkenum(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glNormal3b (GLbyte nx, GLbyte ny, GLbyte nz)
static int luaglew_glNormal3b(lua_State *L) {
	oid return_value;
	return_value = glNormal3b((GLbyte)luaL_checknumber(L, 1), (GLbyte)luaL_checknumber(L, 2), (GLbyte)luaL_checknumber(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glNormal3bv (const GLbyte *v)
static int luaglew_glNormal3bv(lua_State *L) {
	oid return_value;
	return_value = glNormal3bv((GLbyte *)luaglew_checkarray_byte(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glNormal3d (GLdouble nx, GLdouble ny, GLdouble nz)
static int luaglew_glNormal3d(lua_State *L) {
	oid return_value;
	return_value = glNormal3d((GLdouble)luaL_checknumber(L, 1), (GLdouble)luaL_checknumber(L, 2), (GLdouble)luaL_checknumber(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glNormal3dv (const GLdouble *v)
static int luaglew_glNormal3dv(lua_State *L) {
	oid return_value;
	return_value = glNormal3dv((GLdouble *)luaglew_checkarray_doublefloat(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glNormal3f (GLfloat nx, GLfloat ny, GLfloat nz)
static int luaglew_glNormal3f(lua_State *L) {
	oid return_value;
	return_value = glNormal3f((GLfloat)luaL_checknumber(L, 1), (GLfloat)luaL_checknumber(L, 2), (GLfloat)luaL_checknumber(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glNormal3fv (const GLfloat *v)
static int luaglew_glNormal3fv(lua_State *L) {
	oid return_value;
	return_value = glNormal3fv((GLfloat *)luaglew_checkarray_doublefloat(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glNormal3i (GLint nx, GLint ny, GLint nz)
static int luaglew_glNormal3i(lua_State *L) {
	oid return_value;
	return_value = glNormal3i((GLint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glNormal3iv (const GLint *v)
static int luaglew_glNormal3iv(lua_State *L) {
	oid return_value;
	return_value = glNormal3iv((GLint *)luaglew_checkarray_int(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glNormal3s (GLshort nx, GLshort ny, GLshort nz)
static int luaglew_glNormal3s(lua_State *L) {
	oid return_value;
	return_value = glNormal3s((GLshort)luaL_checkinteger(L, 1), (GLshort)luaL_checkinteger(L, 2), (GLshort)luaL_checkinteger(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glNormal3sv (const GLshort *v)
static int luaglew_glNormal3sv(lua_State *L) {
	oid return_value;
	return_value = glNormal3sv((GLshort *)luaglew_checkarray_int(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glNormalPointer (GLenum type, GLsizei stride, const GLvoid *pointer)
static int luaglew_glNormalPointer(lua_State *L) {
	oid return_value;
	return_value = glNormalPointer(luaglew_checkenum(L, 1), (GLsizei)luaL_checklong(L, 2), luaglew_checkarray_int(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glOrtho (GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar)
static int luaglew_glOrtho(lua_State *L) {
	oid return_value;
	return_value = glOrtho((GLdouble)luaL_checknumber(L, 1), (GLdouble)luaL_checknumber(L, 2), (GLdouble)luaL_checknumber(L, 3), (GLdouble)luaL_checknumber(L, 4), (GLdouble)luaL_checknumber(L, 5), (GLdouble)luaL_checknumber(L, 6));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glPassThrough (GLfloat token)
static int luaglew_glPassThrough(lua_State *L) {
	oid return_value;
	return_value = glPassThrough((GLfloat)luaL_checknumber(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glPixelMapfv (GLenum map, GLint mapsize, const GLfloat *values)
static int luaglew_glPixelMapfv(lua_State *L) {
	oid return_value;
	return_value = glPixelMapfv(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), (GLfloat *)luaglew_checkarray_doublefloat(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glPixelMapuiv (GLenum map, GLint mapsize, const GLuint *values)
static int luaglew_glPixelMapuiv(lua_State *L) {
	oid return_value;
	return_value = glPixelMapuiv(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), (GLuint *)luaglew_checkarray_int(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glPixelMapusv (GLenum map, GLint mapsize, const GLushort *values)
static int luaglew_glPixelMapusv(lua_State *L) {
	oid return_value;
	return_value = glPixelMapusv(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), (GLushort *)luaglew_checkarray_int(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glPixelStoref (GLenum pname, GLfloat param)
static int luaglew_glPixelStoref(lua_State *L) {
	oid return_value;
	return_value = glPixelStoref(luaglew_checkenum(L, 1), (GLfloat)luaL_checknumber(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glPixelStorei (GLenum pname, GLint param)
static int luaglew_glPixelStorei(lua_State *L) {
	oid return_value;
	return_value = glPixelStorei(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glPixelTransferf (GLenum pname, GLfloat param)
static int luaglew_glPixelTransferf(lua_State *L) {
	oid return_value;
	return_value = glPixelTransferf(luaglew_checkenum(L, 1), (GLfloat)luaL_checknumber(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glPixelTransferi (GLenum pname, GLint param)
static int luaglew_glPixelTransferi(lua_State *L) {
	oid return_value;
	return_value = glPixelTransferi(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glPixelZoom (GLfloat xfactor, GLfloat yfactor)
static int luaglew_glPixelZoom(lua_State *L) {
	oid return_value;
	return_value = glPixelZoom((GLfloat)luaL_checknumber(L, 1), (GLfloat)luaL_checknumber(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glPointSize (GLfloat size)
static int luaglew_glPointSize(lua_State *L) {
	oid return_value;
	return_value = glPointSize((GLfloat)luaL_checknumber(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glPolygonMode (GLenum face, GLenum mode)
static int luaglew_glPolygonMode(lua_State *L) {
	oid return_value;
	return_value = glPolygonMode(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glPolygonOffset (GLfloat factor, GLfloat units)
static int luaglew_glPolygonOffset(lua_State *L) {
	oid return_value;
	return_value = glPolygonOffset((GLfloat)luaL_checknumber(L, 1), (GLfloat)luaL_checknumber(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glPolygonStipple (const GLubyte *mask)
static int luaglew_glPolygonStipple(lua_State *L) {
	oid return_value;
	return_value = glPolygonStipple((GLubyte *)luaglew_checkarray_ubyte(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glPopAttrib (void)
static int luaglew_glPopAttrib(lua_State *L) {
	oid return_value;
	return_value = glPopAttrib();
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glPopClientAttrib (void)
static int luaglew_glPopClientAttrib(lua_State *L) {
	oid return_value;
	return_value = glPopClientAttrib();
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glPopMatrix (void)
static int luaglew_glPopMatrix(lua_State *L) {
	oid return_value;
	return_value = glPopMatrix();
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glPopName (void)
static int luaglew_glPopName(lua_State *L) {
	oid return_value;
	return_value = glPopName();
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glPrioritizeTextures (GLsizei n, const GLuint *textures, const GLclampf *priorities)
static int luaglew_glPrioritizeTextures(lua_State *L) {
	oid return_value;
	return_value = glPrioritizeTextures((GLsizei)luaL_checklong(L, 1), (GLuint *)luaglew_checkarray_int(L, 2), **check 1-rozmerne pole typu GLclampf **);
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glPushAttrib (GLbitfield mask)
static int luaglew_glPushAttrib(lua_State *L) {
	oid return_value;
	return_value = glPushAttrib((GLbitfield)luaL_checkint(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glPushClientAttrib (GLbitfield mask)
static int luaglew_glPushClientAttrib(lua_State *L) {
	oid return_value;
	return_value = glPushClientAttrib((GLbitfield)luaL_checkint(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glPushMatrix (void)
static int luaglew_glPushMatrix(lua_State *L) {
	oid return_value;
	return_value = glPushMatrix();
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glPushName (GLuint name)
static int luaglew_glPushName(lua_State *L) {
	oid return_value;
	return_value = glPushName((GLuint)luaL_checkint(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glRasterPos2d (GLdouble x, GLdouble y)
static int luaglew_glRasterPos2d(lua_State *L) {
	oid return_value;
	return_value = glRasterPos2d((GLdouble)luaL_checknumber(L, 1), (GLdouble)luaL_checknumber(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glRasterPos2dv (const GLdouble *v)
static int luaglew_glRasterPos2dv(lua_State *L) {
	oid return_value;
	return_value = glRasterPos2dv((GLdouble *)luaglew_checkarray_doublefloat(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glRasterPos2f (GLfloat x, GLfloat y)
static int luaglew_glRasterPos2f(lua_State *L) {
	oid return_value;
	return_value = glRasterPos2f((GLfloat)luaL_checknumber(L, 1), (GLfloat)luaL_checknumber(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glRasterPos2fv (const GLfloat *v)
static int luaglew_glRasterPos2fv(lua_State *L) {
	oid return_value;
	return_value = glRasterPos2fv((GLfloat *)luaglew_checkarray_doublefloat(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glRasterPos2i (GLint x, GLint y)
static int luaglew_glRasterPos2i(lua_State *L) {
	oid return_value;
	return_value = glRasterPos2i((GLint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glRasterPos2iv (const GLint *v)
static int luaglew_glRasterPos2iv(lua_State *L) {
	oid return_value;
	return_value = glRasterPos2iv((GLint *)luaglew_checkarray_int(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glRasterPos2s (GLshort x, GLshort y)
static int luaglew_glRasterPos2s(lua_State *L) {
	oid return_value;
	return_value = glRasterPos2s((GLshort)luaL_checkinteger(L, 1), (GLshort)luaL_checkinteger(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glRasterPos2sv (const GLshort *v)
static int luaglew_glRasterPos2sv(lua_State *L) {
	oid return_value;
	return_value = glRasterPos2sv((GLshort *)luaglew_checkarray_int(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glRasterPos3d (GLdouble x, GLdouble y, GLdouble z)
static int luaglew_glRasterPos3d(lua_State *L) {
	oid return_value;
	return_value = glRasterPos3d((GLdouble)luaL_checknumber(L, 1), (GLdouble)luaL_checknumber(L, 2), (GLdouble)luaL_checknumber(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glRasterPos3dv (const GLdouble *v)
static int luaglew_glRasterPos3dv(lua_State *L) {
	oid return_value;
	return_value = glRasterPos3dv((GLdouble *)luaglew_checkarray_doublefloat(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glRasterPos3f (GLfloat x, GLfloat y, GLfloat z)
static int luaglew_glRasterPos3f(lua_State *L) {
	oid return_value;
	return_value = glRasterPos3f((GLfloat)luaL_checknumber(L, 1), (GLfloat)luaL_checknumber(L, 2), (GLfloat)luaL_checknumber(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glRasterPos3fv (const GLfloat *v)
static int luaglew_glRasterPos3fv(lua_State *L) {
	oid return_value;
	return_value = glRasterPos3fv((GLfloat *)luaglew_checkarray_doublefloat(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glRasterPos3i (GLint x, GLint y, GLint z)
static int luaglew_glRasterPos3i(lua_State *L) {
	oid return_value;
	return_value = glRasterPos3i((GLint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glRasterPos3iv (const GLint *v)
static int luaglew_glRasterPos3iv(lua_State *L) {
	oid return_value;
	return_value = glRasterPos3iv((GLint *)luaglew_checkarray_int(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glRasterPos3s (GLshort x, GLshort y, GLshort z)
static int luaglew_glRasterPos3s(lua_State *L) {
	oid return_value;
	return_value = glRasterPos3s((GLshort)luaL_checkinteger(L, 1), (GLshort)luaL_checkinteger(L, 2), (GLshort)luaL_checkinteger(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glRasterPos3sv (const GLshort *v)
static int luaglew_glRasterPos3sv(lua_State *L) {
	oid return_value;
	return_value = glRasterPos3sv((GLshort *)luaglew_checkarray_int(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glRasterPos4d (GLdouble x, GLdouble y, GLdouble z, GLdouble w)
static int luaglew_glRasterPos4d(lua_State *L) {
	oid return_value;
	return_value = glRasterPos4d((GLdouble)luaL_checknumber(L, 1), (GLdouble)luaL_checknumber(L, 2), (GLdouble)luaL_checknumber(L, 3), (GLdouble)luaL_checknumber(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glRasterPos4dv (const GLdouble *v)
static int luaglew_glRasterPos4dv(lua_State *L) {
	oid return_value;
	return_value = glRasterPos4dv((GLdouble *)luaglew_checkarray_doublefloat(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glRasterPos4f (GLfloat x, GLfloat y, GLfloat z, GLfloat w)
static int luaglew_glRasterPos4f(lua_State *L) {
	oid return_value;
	return_value = glRasterPos4f((GLfloat)luaL_checknumber(L, 1), (GLfloat)luaL_checknumber(L, 2), (GLfloat)luaL_checknumber(L, 3), (GLfloat)luaL_checknumber(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glRasterPos4fv (const GLfloat *v)
static int luaglew_glRasterPos4fv(lua_State *L) {
	oid return_value;
	return_value = glRasterPos4fv((GLfloat *)luaglew_checkarray_doublefloat(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glRasterPos4i (GLint x, GLint y, GLint z, GLint w)
static int luaglew_glRasterPos4i(lua_State *L) {
	oid return_value;
	return_value = glRasterPos4i((GLint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glRasterPos4iv (const GLint *v)
static int luaglew_glRasterPos4iv(lua_State *L) {
	oid return_value;
	return_value = glRasterPos4iv((GLint *)luaglew_checkarray_int(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glRasterPos4s (GLshort x, GLshort y, GLshort z, GLshort w)
static int luaglew_glRasterPos4s(lua_State *L) {
	oid return_value;
	return_value = glRasterPos4s((GLshort)luaL_checkinteger(L, 1), (GLshort)luaL_checkinteger(L, 2), (GLshort)luaL_checkinteger(L, 3), (GLshort)luaL_checkinteger(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glRasterPos4sv (const GLshort *v)
static int luaglew_glRasterPos4sv(lua_State *L) {
	oid return_value;
	return_value = glRasterPos4sv((GLshort *)luaglew_checkarray_int(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glReadBuffer (GLenum mode)
static int luaglew_glReadBuffer(lua_State *L) {
	oid return_value;
	return_value = glReadBuffer(luaglew_checkenum(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glReadPixels (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid *pixels)
static int luaglew_glReadPixels(lua_State *L) {
	oid return_value;
	return_value = glReadPixels((GLint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLsizei)luaL_checklong(L, 4), luaglew_checkenum(L, 5), luaglew_checkenum(L, 6), (GLvoid *)luaglew_checkarray_void(L, 7));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glRectd (GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2)
static int luaglew_glRectd(lua_State *L) {
	oid return_value;
	return_value = glRectd((GLdouble)luaL_checknumber(L, 1), (GLdouble)luaL_checknumber(L, 2), (GLdouble)luaL_checknumber(L, 3), (GLdouble)luaL_checknumber(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glRectdv (const GLdouble *v1, const GLdouble *v2)
static int luaglew_glRectdv(lua_State *L) {
	oid return_value;
	return_value = glRectdv((GLdouble *)luaglew_checkarray_doublefloat(L, 1), (GLdouble *)luaglew_checkarray_doublefloat(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glRectf (GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2)
static int luaglew_glRectf(lua_State *L) {
	oid return_value;
	return_value = glRectf((GLfloat)luaL_checknumber(L, 1), (GLfloat)luaL_checknumber(L, 2), (GLfloat)luaL_checknumber(L, 3), (GLfloat)luaL_checknumber(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glRectfv (const GLfloat *v1, const GLfloat *v2)
static int luaglew_glRectfv(lua_State *L) {
	oid return_value;
	return_value = glRectfv((GLfloat *)luaglew_checkarray_doublefloat(L, 1), (GLfloat *)luaglew_checkarray_doublefloat(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glRecti (GLint x1, GLint y1, GLint x2, GLint y2)
static int luaglew_glRecti(lua_State *L) {
	oid return_value;
	return_value = glRecti((GLint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glRectiv (const GLint *v1, const GLint *v2)
static int luaglew_glRectiv(lua_State *L) {
	oid return_value;
	return_value = glRectiv((GLint *)luaglew_checkarray_int(L, 1), (GLint *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glRects (GLshort x1, GLshort y1, GLshort x2, GLshort y2)
static int luaglew_glRects(lua_State *L) {
	oid return_value;
	return_value = glRects((GLshort)luaL_checkinteger(L, 1), (GLshort)luaL_checkinteger(L, 2), (GLshort)luaL_checkinteger(L, 3), (GLshort)luaL_checkinteger(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glRectsv (const GLshort *v1, const GLshort *v2)
static int luaglew_glRectsv(lua_State *L) {
	oid return_value;
	return_value = glRectsv((GLshort *)luaglew_checkarray_int(L, 1), (GLshort *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// Lint glRenderMode (GLenum mode)
static int luaglew_glRenderMode(lua_State *L) {
	Lint return_value;
	return_value = glRenderMode(luaglew_checkenum(L, 1));
	lua_pushinteger(L, return_value);
	return 1;
}

// oid glResetHistogram (GLenum target)
static int luaglew_glResetHistogram(lua_State *L) {
	oid return_value;
	return_value = glResetHistogram(luaglew_checkenum(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glResetMinmax (GLenum target)
static int luaglew_glResetMinmax(lua_State *L) {
	oid return_value;
	return_value = glResetMinmax(luaglew_checkenum(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glRotated (GLdouble angle, GLdouble x, GLdouble y, GLdouble z)
static int luaglew_glRotated(lua_State *L) {
	oid return_value;
	return_value = glRotated((GLdouble)luaL_checknumber(L, 1), (GLdouble)luaL_checknumber(L, 2), (GLdouble)luaL_checknumber(L, 3), (GLdouble)luaL_checknumber(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glRotatef (GLfloat angle, GLfloat x, GLfloat y, GLfloat z)
static int luaglew_glRotatef(lua_State *L) {
	oid return_value;
	return_value = glRotatef((GLfloat)luaL_checknumber(L, 1), (GLfloat)luaL_checknumber(L, 2), (GLfloat)luaL_checknumber(L, 3), (GLfloat)luaL_checknumber(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glScaled (GLdouble x, GLdouble y, GLdouble z)
static int luaglew_glScaled(lua_State *L) {
	oid return_value;
	return_value = glScaled((GLdouble)luaL_checknumber(L, 1), (GLdouble)luaL_checknumber(L, 2), (GLdouble)luaL_checknumber(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glScalef (GLfloat x, GLfloat y, GLfloat z)
static int luaglew_glScalef(lua_State *L) {
	oid return_value;
	return_value = glScalef((GLfloat)luaL_checknumber(L, 1), (GLfloat)luaL_checknumber(L, 2), (GLfloat)luaL_checknumber(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glScissor (GLint x, GLint y, GLsizei width, GLsizei height)
static int luaglew_glScissor(lua_State *L) {
	oid return_value;
	return_value = glScissor((GLint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLsizei)luaL_checklong(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glSelectBuffer (GLsizei size, GLuint *buffer)
static int luaglew_glSelectBuffer(lua_State *L) {
	oid return_value;
	return_value = glSelectBuffer((GLsizei)luaL_checklong(L, 1), (GLuint *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glSeparableFilter2D (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *row, const GLvoid *column)
static int luaglew_glSeparableFilter2D(lua_State *L) {
	oid return_value;
	return_value = glSeparableFilter2D(luaglew_checkenum(L, 1), luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLsizei)luaL_checklong(L, 4), luaglew_checkenum(L, 5), luaglew_checkenum(L, 6), (GLvoid *)luaglew_checkarray_void(L, 7), (GLvoid *)luaglew_checkarray_void(L, 8));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glShadeModel (GLenum mode)
static int luaglew_glShadeModel(lua_State *L) {
	oid return_value;
	return_value = glShadeModel(luaglew_checkenum(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glStencilFunc (GLenum func, GLint ref, GLuint mask)
static int luaglew_glStencilFunc(lua_State *L) {
	oid return_value;
	return_value = glStencilFunc(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), (GLuint)luaL_checkint(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glStencilMask (GLuint mask)
static int luaglew_glStencilMask(lua_State *L) {
	oid return_value;
	return_value = glStencilMask((GLuint)luaL_checkint(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glStencilOp (GLenum fail, GLenum zfail, GLenum zpass)
static int luaglew_glStencilOp(lua_State *L) {
	oid return_value;
	return_value = glStencilOp(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), luaglew_checkenum(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glTexCoord1d (GLdouble s)
static int luaglew_glTexCoord1d(lua_State *L) {
	oid return_value;
	return_value = glTexCoord1d((GLdouble)luaL_checknumber(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glTexCoord1dv (const GLdouble *v)
static int luaglew_glTexCoord1dv(lua_State *L) {
	oid return_value;
	return_value = glTexCoord1dv((GLdouble *)luaglew_checkarray_doublefloat(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glTexCoord1f (GLfloat s)
static int luaglew_glTexCoord1f(lua_State *L) {
	oid return_value;
	return_value = glTexCoord1f((GLfloat)luaL_checknumber(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glTexCoord1fv (const GLfloat *v)
static int luaglew_glTexCoord1fv(lua_State *L) {
	oid return_value;
	return_value = glTexCoord1fv((GLfloat *)luaglew_checkarray_doublefloat(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glTexCoord1i (GLint s)
static int luaglew_glTexCoord1i(lua_State *L) {
	oid return_value;
	return_value = glTexCoord1i((GLint)luaL_checkint(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glTexCoord1iv (const GLint *v)
static int luaglew_glTexCoord1iv(lua_State *L) {
	oid return_value;
	return_value = glTexCoord1iv((GLint *)luaglew_checkarray_int(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glTexCoord1s (GLshort s)
static int luaglew_glTexCoord1s(lua_State *L) {
	oid return_value;
	return_value = glTexCoord1s((GLshort)luaL_checkinteger(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glTexCoord1sv (const GLshort *v)
static int luaglew_glTexCoord1sv(lua_State *L) {
	oid return_value;
	return_value = glTexCoord1sv((GLshort *)luaglew_checkarray_int(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glTexCoord2d (GLdouble s, GLdouble t)
static int luaglew_glTexCoord2d(lua_State *L) {
	oid return_value;
	return_value = glTexCoord2d((GLdouble)luaL_checknumber(L, 1), (GLdouble)luaL_checknumber(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glTexCoord2dv (const GLdouble *v)
static int luaglew_glTexCoord2dv(lua_State *L) {
	oid return_value;
	return_value = glTexCoord2dv((GLdouble *)luaglew_checkarray_doublefloat(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glTexCoord2f (GLfloat s, GLfloat t)
static int luaglew_glTexCoord2f(lua_State *L) {
	oid return_value;
	return_value = glTexCoord2f((GLfloat)luaL_checknumber(L, 1), (GLfloat)luaL_checknumber(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glTexCoord2fv (const GLfloat *v)
static int luaglew_glTexCoord2fv(lua_State *L) {
	oid return_value;
	return_value = glTexCoord2fv((GLfloat *)luaglew_checkarray_doublefloat(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glTexCoord2i (GLint s, GLint t)
static int luaglew_glTexCoord2i(lua_State *L) {
	oid return_value;
	return_value = glTexCoord2i((GLint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glTexCoord2iv (const GLint *v)
static int luaglew_glTexCoord2iv(lua_State *L) {
	oid return_value;
	return_value = glTexCoord2iv((GLint *)luaglew_checkarray_int(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glTexCoord2s (GLshort s, GLshort t)
static int luaglew_glTexCoord2s(lua_State *L) {
	oid return_value;
	return_value = glTexCoord2s((GLshort)luaL_checkinteger(L, 1), (GLshort)luaL_checkinteger(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glTexCoord2sv (const GLshort *v)
static int luaglew_glTexCoord2sv(lua_State *L) {
	oid return_value;
	return_value = glTexCoord2sv((GLshort *)luaglew_checkarray_int(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glTexCoord3d (GLdouble s, GLdouble t, GLdouble r)
static int luaglew_glTexCoord3d(lua_State *L) {
	oid return_value;
	return_value = glTexCoord3d((GLdouble)luaL_checknumber(L, 1), (GLdouble)luaL_checknumber(L, 2), (GLdouble)luaL_checknumber(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glTexCoord3dv (const GLdouble *v)
static int luaglew_glTexCoord3dv(lua_State *L) {
	oid return_value;
	return_value = glTexCoord3dv((GLdouble *)luaglew_checkarray_doublefloat(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glTexCoord3f (GLfloat s, GLfloat t, GLfloat r)
static int luaglew_glTexCoord3f(lua_State *L) {
	oid return_value;
	return_value = glTexCoord3f((GLfloat)luaL_checknumber(L, 1), (GLfloat)luaL_checknumber(L, 2), (GLfloat)luaL_checknumber(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glTexCoord3fv (const GLfloat *v)
static int luaglew_glTexCoord3fv(lua_State *L) {
	oid return_value;
	return_value = glTexCoord3fv((GLfloat *)luaglew_checkarray_doublefloat(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glTexCoord3i (GLint s, GLint t, GLint r)
static int luaglew_glTexCoord3i(lua_State *L) {
	oid return_value;
	return_value = glTexCoord3i((GLint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glTexCoord3iv (const GLint *v)
static int luaglew_glTexCoord3iv(lua_State *L) {
	oid return_value;
	return_value = glTexCoord3iv((GLint *)luaglew_checkarray_int(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glTexCoord3s (GLshort s, GLshort t, GLshort r)
static int luaglew_glTexCoord3s(lua_State *L) {
	oid return_value;
	return_value = glTexCoord3s((GLshort)luaL_checkinteger(L, 1), (GLshort)luaL_checkinteger(L, 2), (GLshort)luaL_checkinteger(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glTexCoord3sv (const GLshort *v)
static int luaglew_glTexCoord3sv(lua_State *L) {
	oid return_value;
	return_value = glTexCoord3sv((GLshort *)luaglew_checkarray_int(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glTexCoord4d (GLdouble s, GLdouble t, GLdouble r, GLdouble q)
static int luaglew_glTexCoord4d(lua_State *L) {
	oid return_value;
	return_value = glTexCoord4d((GLdouble)luaL_checknumber(L, 1), (GLdouble)luaL_checknumber(L, 2), (GLdouble)luaL_checknumber(L, 3), (GLdouble)luaL_checknumber(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glTexCoord4dv (const GLdouble *v)
static int luaglew_glTexCoord4dv(lua_State *L) {
	oid return_value;
	return_value = glTexCoord4dv((GLdouble *)luaglew_checkarray_doublefloat(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glTexCoord4f (GLfloat s, GLfloat t, GLfloat r, GLfloat q)
static int luaglew_glTexCoord4f(lua_State *L) {
	oid return_value;
	return_value = glTexCoord4f((GLfloat)luaL_checknumber(L, 1), (GLfloat)luaL_checknumber(L, 2), (GLfloat)luaL_checknumber(L, 3), (GLfloat)luaL_checknumber(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glTexCoord4fv (const GLfloat *v)
static int luaglew_glTexCoord4fv(lua_State *L) {
	oid return_value;
	return_value = glTexCoord4fv((GLfloat *)luaglew_checkarray_doublefloat(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glTexCoord4i (GLint s, GLint t, GLint r, GLint q)
static int luaglew_glTexCoord4i(lua_State *L) {
	oid return_value;
	return_value = glTexCoord4i((GLint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glTexCoord4iv (const GLint *v)
static int luaglew_glTexCoord4iv(lua_State *L) {
	oid return_value;
	return_value = glTexCoord4iv((GLint *)luaglew_checkarray_int(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glTexCoord4s (GLshort s, GLshort t, GLshort r, GLshort q)
static int luaglew_glTexCoord4s(lua_State *L) {
	oid return_value;
	return_value = glTexCoord4s((GLshort)luaL_checkinteger(L, 1), (GLshort)luaL_checkinteger(L, 2), (GLshort)luaL_checkinteger(L, 3), (GLshort)luaL_checkinteger(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glTexCoord4sv (const GLshort *v)
static int luaglew_glTexCoord4sv(lua_State *L) {
	oid return_value;
	return_value = glTexCoord4sv((GLshort *)luaglew_checkarray_int(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glTexCoordPointer (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)
static int luaglew_glTexCoordPointer(lua_State *L) {
	oid return_value;
	return_value = glTexCoordPointer((GLint)luaL_checkint(L, 1), luaglew_checkenum(L, 2), (GLsizei)luaL_checklong(L, 3), luaglew_checkarray_int(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glTexEnvf (GLenum target, GLenum pname, GLfloat param)
static int luaglew_glTexEnvf(lua_State *L) {
	oid return_value;
	return_value = glTexEnvf(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLfloat)luaL_checknumber(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glTexEnvfv (GLenum target, GLenum pname, const GLfloat *params)
static int luaglew_glTexEnvfv(lua_State *L) {
	oid return_value;
	return_value = glTexEnvfv(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLfloat *)luaglew_checkarray_doublefloat(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glTexEnvi (GLenum target, GLenum pname, GLint param)
static int luaglew_glTexEnvi(lua_State *L) {
	oid return_value;
	return_value = glTexEnvi(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLint)luaL_checkint(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glTexEnviv (GLenum target, GLenum pname, const GLint *params)
static int luaglew_glTexEnviv(lua_State *L) {
	oid return_value;
	return_value = glTexEnviv(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glTexGend (GLenum coord, GLenum pname, GLdouble param)
static int luaglew_glTexGend(lua_State *L) {
	oid return_value;
	return_value = glTexGend(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLdouble)luaL_checknumber(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glTexGendv (GLenum coord, GLenum pname, const GLdouble *params)
static int luaglew_glTexGendv(lua_State *L) {
	oid return_value;
	return_value = glTexGendv(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLdouble *)luaglew_checkarray_doublefloat(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glTexGenf (GLenum coord, GLenum pname, GLfloat param)
static int luaglew_glTexGenf(lua_State *L) {
	oid return_value;
	return_value = glTexGenf(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLfloat)luaL_checknumber(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glTexGenfv (GLenum coord, GLenum pname, const GLfloat *params)
static int luaglew_glTexGenfv(lua_State *L) {
	oid return_value;
	return_value = glTexGenfv(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLfloat *)luaglew_checkarray_doublefloat(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glTexGeni (GLenum coord, GLenum pname, GLint param)
static int luaglew_glTexGeni(lua_State *L) {
	oid return_value;
	return_value = glTexGeni(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLint)luaL_checkint(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glTexGeniv (GLenum coord, GLenum pname, const GLint *params)
static int luaglew_glTexGeniv(lua_State *L) {
	oid return_value;
	return_value = glTexGeniv(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glTexImage1D (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const GLvoid *pixels)
static int luaglew_glTexImage1D(lua_State *L) {
	oid return_value;
	return_value = glTexImage1D(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), luaL_checkint(L, 3), (GLsizei)luaL_checklong(L, 4), (GLint)luaL_checkint(L, 5), luaglew_checkenum(L, 6), luaglew_checkenum(L, 7), (GLvoid *)luaglew_checkarray_void(L, 8));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glTexImage2D (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels)
static int luaglew_glTexImage2D(lua_State *L) {
	oid return_value;
	return_value = glTexImage2D(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), luaL_checkint(L, 3), (GLsizei)luaL_checklong(L, 4), (GLsizei)luaL_checklong(L, 5), (GLint)luaL_checkint(L, 6), luaglew_checkenum(L, 7), luaglew_checkenum(L, 8), (GLvoid *)luaglew_checkarray_void(L, 9));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glTexImage3D (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels)
static int luaglew_glTexImage3D(lua_State *L) {
	oid return_value;
	return_value = glTexImage3D(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), luaL_checkint(L, 3), (GLsizei)luaL_checklong(L, 4), (GLsizei)luaL_checklong(L, 5), (GLsizei)luaL_checklong(L, 6), (GLint)luaL_checkint(L, 7), luaglew_checkenum(L, 8), luaglew_checkenum(L, 9), (GLvoid *)luaglew_checkarray_void(L, 10));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glTexParameterf (GLenum target, GLenum pname, GLfloat param)
static int luaglew_glTexParameterf(lua_State *L) {
	oid return_value;
	return_value = glTexParameterf(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLfloat)luaL_checknumber(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glTexParameterfv (GLenum target, GLenum pname, const GLfloat *params)
static int luaglew_glTexParameterfv(lua_State *L) {
	oid return_value;
	return_value = glTexParameterfv(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLfloat *)luaglew_checkarray_doublefloat(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glTexParameteri (GLenum target, GLenum pname, GLint param)
static int luaglew_glTexParameteri(lua_State *L) {
	oid return_value;
	return_value = glTexParameteri(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLint)luaL_checkint(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glTexParameteriv (GLenum target, GLenum pname, const GLint *params)
static int luaglew_glTexParameteriv(lua_State *L) {
	oid return_value;
	return_value = glTexParameteriv(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glTexSubImage1D (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid *pixels)
static int luaglew_glTexSubImage1D(lua_State *L) {
	oid return_value;
	return_value = glTexSubImage1D(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3), (GLsizei)luaL_checklong(L, 4), luaglew_checkenum(L, 5), luaglew_checkenum(L, 6), (GLvoid *)luaglew_checkarray_void(L, 7));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels)
static int luaglew_glTexSubImage2D(lua_State *L) {
	oid return_value;
	return_value = glTexSubImage2D(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4), (GLsizei)luaL_checklong(L, 5), (GLsizei)luaL_checklong(L, 6), luaglew_checkenum(L, 7), luaglew_checkenum(L, 8), (GLvoid *)luaglew_checkarray_void(L, 9));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glTexSubImage3D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels)
static int luaglew_glTexSubImage3D(lua_State *L) {
	oid return_value;
	return_value = glTexSubImage3D(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4), (GLint)luaL_checkint(L, 5), (GLsizei)luaL_checklong(L, 6), (GLsizei)luaL_checklong(L, 7), (GLsizei)luaL_checklong(L, 8), luaglew_checkenum(L, 9), luaglew_checkenum(L, 10), (GLvoid *)luaglew_checkarray_void(L, 11));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glTranslated (GLdouble x, GLdouble y, GLdouble z)
static int luaglew_glTranslated(lua_State *L) {
	oid return_value;
	return_value = glTranslated((GLdouble)luaL_checknumber(L, 1), (GLdouble)luaL_checknumber(L, 2), (GLdouble)luaL_checknumber(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glTranslatef (GLfloat x, GLfloat y, GLfloat z)
static int luaglew_glTranslatef(lua_State *L) {
	oid return_value;
	return_value = glTranslatef((GLfloat)luaL_checknumber(L, 1), (GLfloat)luaL_checknumber(L, 2), (GLfloat)luaL_checknumber(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertex2d (GLdouble x, GLdouble y)
static int luaglew_glVertex2d(lua_State *L) {
	oid return_value;
	return_value = glVertex2d((GLdouble)luaL_checknumber(L, 1), (GLdouble)luaL_checknumber(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertex2dv (const GLdouble *v)
static int luaglew_glVertex2dv(lua_State *L) {
	oid return_value;
	return_value = glVertex2dv((GLdouble *)luaglew_checkarray_doublefloat(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertex2f (GLfloat x, GLfloat y)
static int luaglew_glVertex2f(lua_State *L) {
	oid return_value;
	return_value = glVertex2f((GLfloat)luaL_checknumber(L, 1), (GLfloat)luaL_checknumber(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertex2fv (const GLfloat *v)
static int luaglew_glVertex2fv(lua_State *L) {
	oid return_value;
	return_value = glVertex2fv((GLfloat *)luaglew_checkarray_doublefloat(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertex2i (GLint x, GLint y)
static int luaglew_glVertex2i(lua_State *L) {
	oid return_value;
	return_value = glVertex2i((GLint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertex2iv (const GLint *v)
static int luaglew_glVertex2iv(lua_State *L) {
	oid return_value;
	return_value = glVertex2iv((GLint *)luaglew_checkarray_int(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertex2s (GLshort x, GLshort y)
static int luaglew_glVertex2s(lua_State *L) {
	oid return_value;
	return_value = glVertex2s((GLshort)luaL_checkinteger(L, 1), (GLshort)luaL_checkinteger(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertex2sv (const GLshort *v)
static int luaglew_glVertex2sv(lua_State *L) {
	oid return_value;
	return_value = glVertex2sv((GLshort *)luaglew_checkarray_int(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertex3d (GLdouble x, GLdouble y, GLdouble z)
static int luaglew_glVertex3d(lua_State *L) {
	oid return_value;
	return_value = glVertex3d((GLdouble)luaL_checknumber(L, 1), (GLdouble)luaL_checknumber(L, 2), (GLdouble)luaL_checknumber(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertex3dv (const GLdouble *v)
static int luaglew_glVertex3dv(lua_State *L) {
	oid return_value;
	return_value = glVertex3dv((GLdouble *)luaglew_checkarray_doublefloat(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertex3f (GLfloat x, GLfloat y, GLfloat z)
static int luaglew_glVertex3f(lua_State *L) {
	oid return_value;
	return_value = glVertex3f((GLfloat)luaL_checknumber(L, 1), (GLfloat)luaL_checknumber(L, 2), (GLfloat)luaL_checknumber(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertex3fv (const GLfloat *v)
static int luaglew_glVertex3fv(lua_State *L) {
	oid return_value;
	return_value = glVertex3fv((GLfloat *)luaglew_checkarray_doublefloat(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertex3i (GLint x, GLint y, GLint z)
static int luaglew_glVertex3i(lua_State *L) {
	oid return_value;
	return_value = glVertex3i((GLint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertex3iv (const GLint *v)
static int luaglew_glVertex3iv(lua_State *L) {
	oid return_value;
	return_value = glVertex3iv((GLint *)luaglew_checkarray_int(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertex3s (GLshort x, GLshort y, GLshort z)
static int luaglew_glVertex3s(lua_State *L) {
	oid return_value;
	return_value = glVertex3s((GLshort)luaL_checkinteger(L, 1), (GLshort)luaL_checkinteger(L, 2), (GLshort)luaL_checkinteger(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertex3sv (const GLshort *v)
static int luaglew_glVertex3sv(lua_State *L) {
	oid return_value;
	return_value = glVertex3sv((GLshort *)luaglew_checkarray_int(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertex4d (GLdouble x, GLdouble y, GLdouble z, GLdouble w)
static int luaglew_glVertex4d(lua_State *L) {
	oid return_value;
	return_value = glVertex4d((GLdouble)luaL_checknumber(L, 1), (GLdouble)luaL_checknumber(L, 2), (GLdouble)luaL_checknumber(L, 3), (GLdouble)luaL_checknumber(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertex4dv (const GLdouble *v)
static int luaglew_glVertex4dv(lua_State *L) {
	oid return_value;
	return_value = glVertex4dv((GLdouble *)luaglew_checkarray_doublefloat(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertex4f (GLfloat x, GLfloat y, GLfloat z, GLfloat w)
static int luaglew_glVertex4f(lua_State *L) {
	oid return_value;
	return_value = glVertex4f((GLfloat)luaL_checknumber(L, 1), (GLfloat)luaL_checknumber(L, 2), (GLfloat)luaL_checknumber(L, 3), (GLfloat)luaL_checknumber(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertex4fv (const GLfloat *v)
static int luaglew_glVertex4fv(lua_State *L) {
	oid return_value;
	return_value = glVertex4fv((GLfloat *)luaglew_checkarray_doublefloat(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertex4i (GLint x, GLint y, GLint z, GLint w)
static int luaglew_glVertex4i(lua_State *L) {
	oid return_value;
	return_value = glVertex4i((GLint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertex4iv (const GLint *v)
static int luaglew_glVertex4iv(lua_State *L) {
	oid return_value;
	return_value = glVertex4iv((GLint *)luaglew_checkarray_int(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertex4s (GLshort x, GLshort y, GLshort z, GLshort w)
static int luaglew_glVertex4s(lua_State *L) {
	oid return_value;
	return_value = glVertex4s((GLshort)luaL_checkinteger(L, 1), (GLshort)luaL_checkinteger(L, 2), (GLshort)luaL_checkinteger(L, 3), (GLshort)luaL_checkinteger(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertex4sv (const GLshort *v)
static int luaglew_glVertex4sv(lua_State *L) {
	oid return_value;
	return_value = glVertex4sv((GLshort *)luaglew_checkarray_int(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexPointer (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)
static int luaglew_glVertexPointer(lua_State *L) {
	oid return_value;
	return_value = glVertexPointer((GLint)luaL_checkint(L, 1), luaglew_checkenum(L, 2), (GLsizei)luaL_checklong(L, 3), luaglew_checkarray_int(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glViewport (GLint x, GLint y, GLsizei width, GLsizei height)
static int luaglew_glViewport(lua_State *L) {
	oid return_value;
	return_value = glViewport((GLint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLsizei)luaL_checklong(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glSampleCoverage (GLclampf value, GLboolean invert)
static int luaglew_glSampleCoverage(lua_State *L) {
	oid return_value;
	return_value = glSampleCoverage((GLclampf)luaL_checknumber(L, 1), (GLboolean)lua_toboolean(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glSamplePass (GLenum pass)
static int luaglew_glSamplePass(lua_State *L) {
	oid return_value;
	return_value = glSamplePass(luaglew_checkenum(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glLoadTransposeMatrixf (const GLfloat *m)
static int luaglew_glLoadTransposeMatrixf(lua_State *L) {
	oid return_value;
	return_value = glLoadTransposeMatrixf((GLfloat *)luaglew_checkarray_doublefloat(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glLoadTransposeMatrixd (const GLdouble *m)
static int luaglew_glLoadTransposeMatrixd(lua_State *L) {
	oid return_value;
	return_value = glLoadTransposeMatrixd((GLdouble *)luaglew_checkarray_doublefloat(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultTransposeMatrixf (const GLfloat *m)
static int luaglew_glMultTransposeMatrixf(lua_State *L) {
	oid return_value;
	return_value = glMultTransposeMatrixf((GLfloat *)luaglew_checkarray_doublefloat(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultTransposeMatrixd (const GLdouble *m)
static int luaglew_glMultTransposeMatrixd(lua_State *L) {
	oid return_value;
	return_value = glMultTransposeMatrixd((GLdouble *)luaglew_checkarray_doublefloat(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glCompressedTexImage3D (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data)
static int luaglew_glCompressedTexImage3D(lua_State *L) {
	oid return_value;
	return_value = glCompressedTexImage3D(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), luaL_checkint(L, 3), (GLsizei)luaL_checklong(L, 4), (GLsizei)luaL_checklong(L, 5), (GLsizei)luaL_checklong(L, 6), (GLint)luaL_checkint(L, 7), (GLsizei)luaL_checklong(L, 8), (GLvoid *)luaglew_checkarray_void(L, 9));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glCompressedTexImage2D (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data)
static int luaglew_glCompressedTexImage2D(lua_State *L) {
	oid return_value;
	return_value = glCompressedTexImage2D(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), luaL_checkint(L, 3), (GLsizei)luaL_checklong(L, 4), (GLsizei)luaL_checklong(L, 5), (GLint)luaL_checkint(L, 6), (GLsizei)luaL_checklong(L, 7), (GLvoid *)luaglew_checkarray_void(L, 8));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glCompressedTexImage1D (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data)
static int luaglew_glCompressedTexImage1D(lua_State *L) {
	oid return_value;
	return_value = glCompressedTexImage1D(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), luaL_checkint(L, 3), (GLsizei)luaL_checklong(L, 4), (GLint)luaL_checkint(L, 5), (GLsizei)luaL_checklong(L, 6), (GLvoid *)luaglew_checkarray_void(L, 7));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glCompressedTexSubImage3D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data)
static int luaglew_glCompressedTexSubImage3D(lua_State *L) {
	oid return_value;
	return_value = glCompressedTexSubImage3D(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4), (GLint)luaL_checkint(L, 5), (GLsizei)luaL_checklong(L, 6), (GLsizei)luaL_checklong(L, 7), (GLsizei)luaL_checklong(L, 8), luaglew_checkenum(L, 9), (GLsizei)luaL_checklong(L, 10), (GLvoid *)luaglew_checkarray_void(L, 11));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glCompressedTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data)
static int luaglew_glCompressedTexSubImage2D(lua_State *L) {
	oid return_value;
	return_value = glCompressedTexSubImage2D(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4), (GLsizei)luaL_checklong(L, 5), (GLsizei)luaL_checklong(L, 6), luaglew_checkenum(L, 7), (GLsizei)luaL_checklong(L, 8), (GLvoid *)luaglew_checkarray_void(L, 9));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glCompressedTexSubImage1D (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data)
static int luaglew_glCompressedTexSubImage1D(lua_State *L) {
	oid return_value;
	return_value = glCompressedTexSubImage1D(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3), (GLsizei)luaL_checklong(L, 4), luaglew_checkenum(L, 5), (GLsizei)luaL_checklong(L, 6), (GLvoid *)luaglew_checkarray_void(L, 7));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetCompressedTexImage (GLenum target, GLint lod, GLvoid *img)
static int luaglew_glGetCompressedTexImage(lua_State *L) {
	oid return_value;
	return_value = glGetCompressedTexImage(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), (GLvoid *)luaglew_checkarray_void(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glActiveTexture (GLenum texture)
static int luaglew_glActiveTexture(lua_State *L) {
	oid return_value;
	return_value = glActiveTexture(luaglew_checkenum(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glClientActiveTexture (GLenum texture)
static int luaglew_glClientActiveTexture(lua_State *L) {
	oid return_value;
	return_value = glClientActiveTexture(luaglew_checkenum(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultiTexCoord1d (GLenum target, GLdouble s)
static int luaglew_glMultiTexCoord1d(lua_State *L) {
	oid return_value;
	return_value = glMultiTexCoord1d(luaglew_checkenum(L, 1), (GLdouble)luaL_checknumber(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultiTexCoord1dv (GLenum target, const GLdouble *v)
static int luaglew_glMultiTexCoord1dv(lua_State *L) {
	oid return_value;
	return_value = glMultiTexCoord1dv(luaglew_checkenum(L, 1), (GLdouble *)luaglew_checkarray_doublefloat(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultiTexCoord1f (GLenum target, GLfloat s)
static int luaglew_glMultiTexCoord1f(lua_State *L) {
	oid return_value;
	return_value = glMultiTexCoord1f(luaglew_checkenum(L, 1), (GLfloat)luaL_checknumber(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultiTexCoord1fv (GLenum target, const GLfloat *v)
static int luaglew_glMultiTexCoord1fv(lua_State *L) {
	oid return_value;
	return_value = glMultiTexCoord1fv(luaglew_checkenum(L, 1), (GLfloat *)luaglew_checkarray_doublefloat(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultiTexCoord1i (GLenum target, GLint s)
static int luaglew_glMultiTexCoord1i(lua_State *L) {
	oid return_value;
	return_value = glMultiTexCoord1i(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultiTexCoord1iv (GLenum target, const GLint *v)
static int luaglew_glMultiTexCoord1iv(lua_State *L) {
	oid return_value;
	return_value = glMultiTexCoord1iv(luaglew_checkenum(L, 1), (GLint *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultiTexCoord1s (GLenum target, GLshort s)
static int luaglew_glMultiTexCoord1s(lua_State *L) {
	oid return_value;
	return_value = glMultiTexCoord1s(luaglew_checkenum(L, 1), (GLshort)luaL_checkinteger(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultiTexCoord1sv (GLenum target, const GLshort *v)
static int luaglew_glMultiTexCoord1sv(lua_State *L) {
	oid return_value;
	return_value = glMultiTexCoord1sv(luaglew_checkenum(L, 1), (GLshort *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultiTexCoord2d (GLenum target, GLdouble s, GLdouble t)
static int luaglew_glMultiTexCoord2d(lua_State *L) {
	oid return_value;
	return_value = glMultiTexCoord2d(luaglew_checkenum(L, 1), (GLdouble)luaL_checknumber(L, 2), (GLdouble)luaL_checknumber(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultiTexCoord2dv (GLenum target, const GLdouble *v)
static int luaglew_glMultiTexCoord2dv(lua_State *L) {
	oid return_value;
	return_value = glMultiTexCoord2dv(luaglew_checkenum(L, 1), (GLdouble *)luaglew_checkarray_doublefloat(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultiTexCoord2f (GLenum target, GLfloat s, GLfloat t)
static int luaglew_glMultiTexCoord2f(lua_State *L) {
	oid return_value;
	return_value = glMultiTexCoord2f(luaglew_checkenum(L, 1), (GLfloat)luaL_checknumber(L, 2), (GLfloat)luaL_checknumber(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultiTexCoord2fv (GLenum target, const GLfloat *v)
static int luaglew_glMultiTexCoord2fv(lua_State *L) {
	oid return_value;
	return_value = glMultiTexCoord2fv(luaglew_checkenum(L, 1), (GLfloat *)luaglew_checkarray_doublefloat(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultiTexCoord2i (GLenum target, GLint s, GLint t)
static int luaglew_glMultiTexCoord2i(lua_State *L) {
	oid return_value;
	return_value = glMultiTexCoord2i(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultiTexCoord2iv (GLenum target, const GLint *v)
static int luaglew_glMultiTexCoord2iv(lua_State *L) {
	oid return_value;
	return_value = glMultiTexCoord2iv(luaglew_checkenum(L, 1), (GLint *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultiTexCoord2s (GLenum target, GLshort s, GLshort t)
static int luaglew_glMultiTexCoord2s(lua_State *L) {
	oid return_value;
	return_value = glMultiTexCoord2s(luaglew_checkenum(L, 1), (GLshort)luaL_checkinteger(L, 2), (GLshort)luaL_checkinteger(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultiTexCoord2sv (GLenum target, const GLshort *v)
static int luaglew_glMultiTexCoord2sv(lua_State *L) {
	oid return_value;
	return_value = glMultiTexCoord2sv(luaglew_checkenum(L, 1), (GLshort *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultiTexCoord3d (GLenum target, GLdouble s, GLdouble t, GLdouble r)
static int luaglew_glMultiTexCoord3d(lua_State *L) {
	oid return_value;
	return_value = glMultiTexCoord3d(luaglew_checkenum(L, 1), (GLdouble)luaL_checknumber(L, 2), (GLdouble)luaL_checknumber(L, 3), (GLdouble)luaL_checknumber(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultiTexCoord3dv (GLenum target, const GLdouble *v)
static int luaglew_glMultiTexCoord3dv(lua_State *L) {
	oid return_value;
	return_value = glMultiTexCoord3dv(luaglew_checkenum(L, 1), (GLdouble *)luaglew_checkarray_doublefloat(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultiTexCoord3f (GLenum target, GLfloat s, GLfloat t, GLfloat r)
static int luaglew_glMultiTexCoord3f(lua_State *L) {
	oid return_value;
	return_value = glMultiTexCoord3f(luaglew_checkenum(L, 1), (GLfloat)luaL_checknumber(L, 2), (GLfloat)luaL_checknumber(L, 3), (GLfloat)luaL_checknumber(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultiTexCoord3fv (GLenum target, const GLfloat *v)
static int luaglew_glMultiTexCoord3fv(lua_State *L) {
	oid return_value;
	return_value = glMultiTexCoord3fv(luaglew_checkenum(L, 1), (GLfloat *)luaglew_checkarray_doublefloat(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultiTexCoord3i (GLenum target, GLint s, GLint t, GLint r)
static int luaglew_glMultiTexCoord3i(lua_State *L) {
	oid return_value;
	return_value = glMultiTexCoord3i(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultiTexCoord3iv (GLenum target, const GLint *v)
static int luaglew_glMultiTexCoord3iv(lua_State *L) {
	oid return_value;
	return_value = glMultiTexCoord3iv(luaglew_checkenum(L, 1), (GLint *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultiTexCoord3s (GLenum target, GLshort s, GLshort t, GLshort r)
static int luaglew_glMultiTexCoord3s(lua_State *L) {
	oid return_value;
	return_value = glMultiTexCoord3s(luaglew_checkenum(L, 1), (GLshort)luaL_checkinteger(L, 2), (GLshort)luaL_checkinteger(L, 3), (GLshort)luaL_checkinteger(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultiTexCoord3sv (GLenum target, const GLshort *v)
static int luaglew_glMultiTexCoord3sv(lua_State *L) {
	oid return_value;
	return_value = glMultiTexCoord3sv(luaglew_checkenum(L, 1), (GLshort *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultiTexCoord4d (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q)
static int luaglew_glMultiTexCoord4d(lua_State *L) {
	oid return_value;
	return_value = glMultiTexCoord4d(luaglew_checkenum(L, 1), (GLdouble)luaL_checknumber(L, 2), (GLdouble)luaL_checknumber(L, 3), (GLdouble)luaL_checknumber(L, 4), (GLdouble)luaL_checknumber(L, 5));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultiTexCoord4dv (GLenum target, const GLdouble *v)
static int luaglew_glMultiTexCoord4dv(lua_State *L) {
	oid return_value;
	return_value = glMultiTexCoord4dv(luaglew_checkenum(L, 1), (GLdouble *)luaglew_checkarray_doublefloat(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultiTexCoord4f (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q)
static int luaglew_glMultiTexCoord4f(lua_State *L) {
	oid return_value;
	return_value = glMultiTexCoord4f(luaglew_checkenum(L, 1), (GLfloat)luaL_checknumber(L, 2), (GLfloat)luaL_checknumber(L, 3), (GLfloat)luaL_checknumber(L, 4), (GLfloat)luaL_checknumber(L, 5));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultiTexCoord4fv (GLenum target, const GLfloat *v)
static int luaglew_glMultiTexCoord4fv(lua_State *L) {
	oid return_value;
	return_value = glMultiTexCoord4fv(luaglew_checkenum(L, 1), (GLfloat *)luaglew_checkarray_doublefloat(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultiTexCoord4i (GLenum target, GLint, GLint s, GLint t, GLint r)
static int luaglew_glMultiTexCoord4i(lua_State *L) {
	oid return_value;
	return_value = glMultiTexCoord4i(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4), (GLint)luaL_checkint(L, 5));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultiTexCoord4iv (GLenum target, const GLint *v)
static int luaglew_glMultiTexCoord4iv(lua_State *L) {
	oid return_value;
	return_value = glMultiTexCoord4iv(luaglew_checkenum(L, 1), (GLint *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultiTexCoord4s (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q)
static int luaglew_glMultiTexCoord4s(lua_State *L) {
	oid return_value;
	return_value = glMultiTexCoord4s(luaglew_checkenum(L, 1), (GLshort)luaL_checkinteger(L, 2), (GLshort)luaL_checkinteger(L, 3), (GLshort)luaL_checkinteger(L, 4), (GLshort)luaL_checkinteger(L, 5));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultiTexCoord4sv (GLenum target, const GLshort *v)
static int luaglew_glMultiTexCoord4sv(lua_State *L) {
	oid return_value;
	return_value = glMultiTexCoord4sv(luaglew_checkenum(L, 1), (GLshort *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glFogCoordf (GLfloat coord)
static int luaglew_glFogCoordf(lua_State *L) {
	oid return_value;
	return_value = glFogCoordf((GLfloat)luaL_checknumber(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glFogCoordfv (const GLfloat *coord)
static int luaglew_glFogCoordfv(lua_State *L) {
	oid return_value;
	return_value = glFogCoordfv((GLfloat *)luaglew_checkarray_doublefloat(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glFogCoordd (GLdouble coord)
static int luaglew_glFogCoordd(lua_State *L) {
	oid return_value;
	return_value = glFogCoordd((GLdouble)luaL_checknumber(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glFogCoorddv (const GLdouble * coord)
static int luaglew_glFogCoorddv(lua_State *L) {
	oid return_value;
	return_value = glFogCoorddv((GLdouble *)luaglew_checkarray_doublefloat(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glFogCoordPointer (GLenum type, GLsizei stride, const GLvoid *pointer)
static int luaglew_glFogCoordPointer(lua_State *L) {
	oid return_value;
	return_value = glFogCoordPointer(luaglew_checkenum(L, 1), (GLsizei)luaL_checklong(L, 2), luaglew_checkarray_int(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glSecondaryColor3b (GLbyte red, GLbyte green, GLbyte blue)
static int luaglew_glSecondaryColor3b(lua_State *L) {
	oid return_value;
	return_value = glSecondaryColor3b((GLbyte)luaL_checknumber(L, 1), (GLbyte)luaL_checknumber(L, 2), (GLbyte)luaL_checknumber(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glSecondaryColor3bv (const GLbyte *v)
static int luaglew_glSecondaryColor3bv(lua_State *L) {
	oid return_value;
	return_value = glSecondaryColor3bv((GLbyte *)luaglew_checkarray_byte(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glSecondaryColor3d (GLdouble red, GLdouble green, GLdouble blue)
static int luaglew_glSecondaryColor3d(lua_State *L) {
	oid return_value;
	return_value = glSecondaryColor3d((GLdouble)luaL_checknumber(L, 1), (GLdouble)luaL_checknumber(L, 2), (GLdouble)luaL_checknumber(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glSecondaryColor3dv (const GLdouble *v)
static int luaglew_glSecondaryColor3dv(lua_State *L) {
	oid return_value;
	return_value = glSecondaryColor3dv((GLdouble *)luaglew_checkarray_doublefloat(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glSecondaryColor3f (GLfloat red, GLfloat green, GLfloat blue)
static int luaglew_glSecondaryColor3f(lua_State *L) {
	oid return_value;
	return_value = glSecondaryColor3f((GLfloat)luaL_checknumber(L, 1), (GLfloat)luaL_checknumber(L, 2), (GLfloat)luaL_checknumber(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glSecondaryColor3fv (const GLfloat *v)
static int luaglew_glSecondaryColor3fv(lua_State *L) {
	oid return_value;
	return_value = glSecondaryColor3fv((GLfloat *)luaglew_checkarray_doublefloat(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glSecondaryColor3i (GLint red, GLint green, GLint blue)
static int luaglew_glSecondaryColor3i(lua_State *L) {
	oid return_value;
	return_value = glSecondaryColor3i((GLint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glSecondaryColor3iv (const GLint *v)
static int luaglew_glSecondaryColor3iv(lua_State *L) {
	oid return_value;
	return_value = glSecondaryColor3iv((GLint *)luaglew_checkarray_int(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glSecondaryColor3s (GLshort red, GLshort green, GLshort blue)
static int luaglew_glSecondaryColor3s(lua_State *L) {
	oid return_value;
	return_value = glSecondaryColor3s((GLshort)luaL_checkinteger(L, 1), (GLshort)luaL_checkinteger(L, 2), (GLshort)luaL_checkinteger(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glSecondaryColor3sv (const GLshort *v)
static int luaglew_glSecondaryColor3sv(lua_State *L) {
	oid return_value;
	return_value = glSecondaryColor3sv((GLshort *)luaglew_checkarray_int(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glSecondaryColor3ub (GLubyte red, GLubyte green, GLubyte blue)
static int luaglew_glSecondaryColor3ub(lua_State *L) {
	oid return_value;
	return_value = glSecondaryColor3ub((GLubyte)luaL_checknumber(L, 1), (GLubyte)luaL_checknumber(L, 2), (GLubyte)luaL_checknumber(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glSecondaryColor3ubv (const GLubyte *v)
static int luaglew_glSecondaryColor3ubv(lua_State *L) {
	oid return_value;
	return_value = glSecondaryColor3ubv((GLubyte *)luaglew_checkarray_ubyte(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glSecondaryColor3ui (GLuint red, GLuint green, GLuint blue)
static int luaglew_glSecondaryColor3ui(lua_State *L) {
	oid return_value;
	return_value = glSecondaryColor3ui((GLuint)luaL_checkint(L, 1), (GLuint)luaL_checkint(L, 2), (GLuint)luaL_checkint(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glSecondaryColor3uiv (const GLuint *v)
static int luaglew_glSecondaryColor3uiv(lua_State *L) {
	oid return_value;
	return_value = glSecondaryColor3uiv((GLuint *)luaglew_checkarray_int(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glSecondaryColor3us (GLushort red, GLushort green, GLushort blue)
static int luaglew_glSecondaryColor3us(lua_State *L) {
	oid return_value;
	return_value = glSecondaryColor3us((GLushort)luaL_checkinteger(L, 1), (GLushort)luaL_checkinteger(L, 2), (GLushort)luaL_checkinteger(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glSecondaryColor3usv (const GLushort *v)
static int luaglew_glSecondaryColor3usv(lua_State *L) {
	oid return_value;
	return_value = glSecondaryColor3usv((GLushort *)luaglew_checkarray_int(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glSecondaryColorPointer (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)
static int luaglew_glSecondaryColorPointer(lua_State *L) {
	oid return_value;
	return_value = glSecondaryColorPointer((GLint)luaL_checkint(L, 1), luaglew_checkenum(L, 2), (GLsizei)luaL_checklong(L, 3), luaglew_checkarray_int(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glPointParameterf (GLenum pname, GLfloat param)
static int luaglew_glPointParameterf(lua_State *L) {
	oid return_value;
	return_value = glPointParameterf(luaglew_checkenum(L, 1), (GLfloat)luaL_checknumber(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glPointParameterfv (GLenum pname, const GLfloat *params)
static int luaglew_glPointParameterfv(lua_State *L) {
	oid return_value;
	return_value = glPointParameterfv(luaglew_checkenum(L, 1), (GLfloat *)luaglew_checkarray_doublefloat(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glPointParameteri (GLenum pname, GLint param)
static int luaglew_glPointParameteri(lua_State *L) {
	oid return_value;
	return_value = glPointParameteri(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glPointParameteriv (GLenum pname, const GLint *params)
static int luaglew_glPointParameteriv(lua_State *L) {
	oid return_value;
	return_value = glPointParameteriv(luaglew_checkenum(L, 1), (GLint *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glBlendFuncSeparate (GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha)
static int luaglew_glBlendFuncSeparate(lua_State *L) {
	oid return_value;
	return_value = glBlendFuncSeparate(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), luaglew_checkenum(L, 3), luaglew_checkenum(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultiDrawArrays (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount)
static int luaglew_glMultiDrawArrays(lua_State *L) {
	oid return_value;
	return_value = glMultiDrawArrays(luaglew_checkenum(L, 1), (GLint *)luaglew_checkarray_int(L, 2), (GLsizei *)luaglew_checkarray_int(L, 3), (GLsizei)luaL_checklong(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glMultiDrawElements (GLenum mode, const GLsizei *count, GLenum type, const GLvoid* *indices, GLsizei primcount)
static int luaglew_glMultiDrawElements(lua_State *L) {
	oid return_value;
	return_value = glMultiDrawElements(luaglew_checkenum(L, 1), (GLsizei *)luaglew_checkarray_int(L, 2), luaglew_checkenum(L, 3), (GLvoid *)luaglew_checkarray_void(L, 4), (GLsizei)luaL_checklong(L, 5));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glWindowPos2d (GLdouble x, GLdouble y)
static int luaglew_glWindowPos2d(lua_State *L) {
	oid return_value;
	return_value = glWindowPos2d((GLdouble)luaL_checknumber(L, 1), (GLdouble)luaL_checknumber(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glWindowPos2dv (const GLdouble *v)
static int luaglew_glWindowPos2dv(lua_State *L) {
	oid return_value;
	return_value = glWindowPos2dv((GLdouble *)luaglew_checkarray_doublefloat(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glWindowPos2f (GLfloat x, GLfloat y)
static int luaglew_glWindowPos2f(lua_State *L) {
	oid return_value;
	return_value = glWindowPos2f((GLfloat)luaL_checknumber(L, 1), (GLfloat)luaL_checknumber(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glWindowPos2fv (const GLfloat *v)
static int luaglew_glWindowPos2fv(lua_State *L) {
	oid return_value;
	return_value = glWindowPos2fv((GLfloat *)luaglew_checkarray_doublefloat(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glWindowPos2i (GLint x, GLint y)
static int luaglew_glWindowPos2i(lua_State *L) {
	oid return_value;
	return_value = glWindowPos2i((GLint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glWindowPos2iv (const GLint *v)
static int luaglew_glWindowPos2iv(lua_State *L) {
	oid return_value;
	return_value = glWindowPos2iv((GLint *)luaglew_checkarray_int(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glWindowPos2s (GLshort x, GLshort y)
static int luaglew_glWindowPos2s(lua_State *L) {
	oid return_value;
	return_value = glWindowPos2s((GLshort)luaL_checkinteger(L, 1), (GLshort)luaL_checkinteger(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glWindowPos2sv (const GLshort *v)
static int luaglew_glWindowPos2sv(lua_State *L) {
	oid return_value;
	return_value = glWindowPos2sv((GLshort *)luaglew_checkarray_int(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glWindowPos3d (GLdouble x, GLdouble y, GLdouble z)
static int luaglew_glWindowPos3d(lua_State *L) {
	oid return_value;
	return_value = glWindowPos3d((GLdouble)luaL_checknumber(L, 1), (GLdouble)luaL_checknumber(L, 2), (GLdouble)luaL_checknumber(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glWindowPos3dv (const GLdouble *v)
static int luaglew_glWindowPos3dv(lua_State *L) {
	oid return_value;
	return_value = glWindowPos3dv((GLdouble *)luaglew_checkarray_doublefloat(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glWindowPos3f (GLfloat x, GLfloat y, GLfloat z)
static int luaglew_glWindowPos3f(lua_State *L) {
	oid return_value;
	return_value = glWindowPos3f((GLfloat)luaL_checknumber(L, 1), (GLfloat)luaL_checknumber(L, 2), (GLfloat)luaL_checknumber(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glWindowPos3fv (const GLfloat *v)
static int luaglew_glWindowPos3fv(lua_State *L) {
	oid return_value;
	return_value = glWindowPos3fv((GLfloat *)luaglew_checkarray_doublefloat(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glWindowPos3i (GLint x, GLint y, GLint z)
static int luaglew_glWindowPos3i(lua_State *L) {
	oid return_value;
	return_value = glWindowPos3i((GLint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glWindowPos3iv (const GLint *v)
static int luaglew_glWindowPos3iv(lua_State *L) {
	oid return_value;
	return_value = glWindowPos3iv((GLint *)luaglew_checkarray_int(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glWindowPos3s (GLshort x, GLshort y, GLshort z)
static int luaglew_glWindowPos3s(lua_State *L) {
	oid return_value;
	return_value = glWindowPos3s((GLshort)luaL_checkinteger(L, 1), (GLshort)luaL_checkinteger(L, 2), (GLshort)luaL_checkinteger(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glWindowPos3sv (const GLshort *v)
static int luaglew_glWindowPos3sv(lua_State *L) {
	oid return_value;
	return_value = glWindowPos3sv((GLshort *)luaglew_checkarray_int(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGenQueries (GLsizei n, GLuint *ids)
static int luaglew_glGenQueries(lua_State *L) {
	oid return_value;
	return_value = glGenQueries((GLsizei)luaL_checklong(L, 1), (GLuint *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glDeleteQueries (GLsizei n, const GLuint *ids)
static int luaglew_glDeleteQueries(lua_State *L) {
	oid return_value;
	return_value = glDeleteQueries((GLsizei)luaL_checklong(L, 1), (GLuint *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// Lboolean glIsQuery (GLuint id)
static int luaglew_glIsQuery(lua_State *L) {
	Lboolean return_value;
	return_value = glIsQuery((GLuint)luaL_checkint(L, 1));
	push( ** nespracovany typ Lboolean ** );
	return 1;
}

// oid glBeginQuery (GLenum target, GLuint id)
static int luaglew_glBeginQuery(lua_State *L) {
	oid return_value;
	return_value = glBeginQuery(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glEndQuery (GLenum target)
static int luaglew_glEndQuery(lua_State *L) {
	oid return_value;
	return_value = glEndQuery(luaglew_checkenum(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetQueryiv (GLenum target, GLenum pname, GLint *params)
static int luaglew_glGetQueryiv(lua_State *L) {
	oid return_value;
	return_value = glGetQueryiv(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetQueryObjectiv (GLuint id, GLenum pname, GLint *params)
static int luaglew_glGetQueryObjectiv(lua_State *L) {
	oid return_value;
	return_value = glGetQueryObjectiv((GLuint)luaL_checkint(L, 1), luaglew_checkenum(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetQueryObjectuiv (GLuint id, GLenum pname, GLuint *params)
static int luaglew_glGetQueryObjectuiv(lua_State *L) {
	oid return_value;
	return_value = glGetQueryObjectuiv((GLuint)luaL_checkint(L, 1), luaglew_checkenum(L, 2), (GLuint *)luaglew_checkarray_int(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glBindBuffer (GLenum target, GLuint buffer)
static int luaglew_glBindBuffer(lua_State *L) {
	oid return_value;
	return_value = glBindBuffer(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glDeleteBuffers (GLsizei n, const GLuint *buffers)
static int luaglew_glDeleteBuffers(lua_State *L) {
	oid return_value;
	return_value = glDeleteBuffers((GLsizei)luaL_checklong(L, 1), (GLuint *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGenBuffers (GLsizei n, GLuint *buffers)
static int luaglew_glGenBuffers(lua_State *L) {
	oid return_value;
	return_value = glGenBuffers((GLsizei)luaL_checklong(L, 1), (GLuint *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// Lboolean glIsBuffer (GLuint buffer)
static int luaglew_glIsBuffer(lua_State *L) {
	Lboolean return_value;
	return_value = glIsBuffer((GLuint)luaL_checkint(L, 1));
	push( ** nespracovany typ Lboolean ** );
	return 1;
}

// oid glBufferData (GLenum target, GLsizeiptr size, const GLvoid *data, GLenum usage)
static int luaglew_glBufferData(lua_State *L) {
	oid return_value;
	return_value = glBufferData(luaglew_checkenum(L, 1), (GLsizei)luaL_checklong(L, 2), (GLvoid *)luaglew_checkarray_void(L, 3), luaglew_checkenum(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glBufferSubData (GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid *data)
static int luaglew_glBufferSubData(lua_State *L) {
	oid return_value;
	return_value = glBufferSubData(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLvoid *)luaglew_checkarray_void(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetBufferSubData (GLenum target, GLintptr offset, GLsizeiptr size, GLvoid *data)
static int luaglew_glGetBufferSubData(lua_State *L) {
	oid return_value;
	return_value = glGetBufferSubData(luaglew_checkenum(L, 1), (GLint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLvoid *)luaglew_checkarray_void(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// Lvoid * glMapBuffer (GLenum target, GLenum access)
static int luaglew_glMapBuffer(lua_State *L) {
	Lvoid * return_value;
	return_value = glMapBuffer(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2));
	luaglew_pusharray_void(L, return_value);
	return 1;
}

// Lboolean glUnmapBuffer (GLenum target)
static int luaglew_glUnmapBuffer(lua_State *L) {
	Lboolean return_value;
	return_value = glUnmapBuffer(luaglew_checkenum(L, 1));
	push( ** nespracovany typ Lboolean ** );
	return 1;
}

// oid glGetBufferParameteriv (GLenum target, GLenum pname, GLint *params)
static int luaglew_glGetBufferParameteriv(lua_State *L) {
	oid return_value;
	return_value = glGetBufferParameteriv(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetBufferPointerv (GLenum target, GLenum pname, GLvoid **params)
static int luaglew_glGetBufferPointerv(lua_State *L) {
	oid return_value;
	return_value = glGetBufferPointerv(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), luaglew_checkarray_2void(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glDrawBuffers (GLsizei n, const GLenum *bufs)
static int luaglew_glDrawBuffers(lua_State *L) {
	oid return_value;
	return_value = glDrawBuffers((GLsizei)luaL_checklong(L, 1), luaglew_checkarray_enum(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib1d (GLuint index, GLdouble x)
static int luaglew_glVertexAttrib1d(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib1d((GLuint)luaL_checkint(L, 1), (GLdouble)luaL_checknumber(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib1dv (GLuint index, const GLdouble *v)
static int luaglew_glVertexAttrib1dv(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib1dv((GLuint)luaL_checkint(L, 1), (GLdouble *)luaglew_checkarray_doublefloat(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib1f (GLuint index, GLfloat x)
static int luaglew_glVertexAttrib1f(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib1f((GLuint)luaL_checkint(L, 1), (GLfloat)luaL_checknumber(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib1fv (GLuint index, const GLfloat *v)
static int luaglew_glVertexAttrib1fv(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib1fv((GLuint)luaL_checkint(L, 1), (GLfloat *)luaglew_checkarray_doublefloat(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib1s (GLuint index, GLshort x)
static int luaglew_glVertexAttrib1s(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib1s((GLuint)luaL_checkint(L, 1), (GLshort)luaL_checkinteger(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib1sv (GLuint index, const GLshort *v)
static int luaglew_glVertexAttrib1sv(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib1sv((GLuint)luaL_checkint(L, 1), (GLshort *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib2d (GLuint index, GLdouble x, GLdouble y)
static int luaglew_glVertexAttrib2d(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib2d((GLuint)luaL_checkint(L, 1), (GLdouble)luaL_checknumber(L, 2), (GLdouble)luaL_checknumber(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib2dv (GLuint index, const GLdouble *v)
static int luaglew_glVertexAttrib2dv(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib2dv((GLuint)luaL_checkint(L, 1), (GLdouble *)luaglew_checkarray_doublefloat(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib2f (GLuint index, GLfloat x, GLfloat y)
static int luaglew_glVertexAttrib2f(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib2f((GLuint)luaL_checkint(L, 1), (GLfloat)luaL_checknumber(L, 2), (GLfloat)luaL_checknumber(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib2fv (GLuint index, const GLfloat *v)
static int luaglew_glVertexAttrib2fv(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib2fv((GLuint)luaL_checkint(L, 1), (GLfloat *)luaglew_checkarray_doublefloat(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib2s (GLuint index, GLshort x, GLshort y)
static int luaglew_glVertexAttrib2s(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib2s((GLuint)luaL_checkint(L, 1), (GLshort)luaL_checkinteger(L, 2), (GLshort)luaL_checkinteger(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib2sv (GLuint index, const GLshort *v)
static int luaglew_glVertexAttrib2sv(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib2sv((GLuint)luaL_checkint(L, 1), (GLshort *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib3d (GLuint index, GLdouble x, GLdouble y, GLdouble z)
static int luaglew_glVertexAttrib3d(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib3d((GLuint)luaL_checkint(L, 1), (GLdouble)luaL_checknumber(L, 2), (GLdouble)luaL_checknumber(L, 3), (GLdouble)luaL_checknumber(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib3dv (GLuint index, const GLdouble *v)
static int luaglew_glVertexAttrib3dv(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib3dv((GLuint)luaL_checkint(L, 1), (GLdouble *)luaglew_checkarray_doublefloat(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib3f (GLuint index, GLfloat x, GLfloat y, GLfloat z)
static int luaglew_glVertexAttrib3f(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib3f((GLuint)luaL_checkint(L, 1), (GLfloat)luaL_checknumber(L, 2), (GLfloat)luaL_checknumber(L, 3), (GLfloat)luaL_checknumber(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib3fv (GLuint index, const GLfloat *v)
static int luaglew_glVertexAttrib3fv(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib3fv((GLuint)luaL_checkint(L, 1), (GLfloat *)luaglew_checkarray_doublefloat(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib3s (GLuint index, GLshort x, GLshort y, GLshort z)
static int luaglew_glVertexAttrib3s(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib3s((GLuint)luaL_checkint(L, 1), (GLshort)luaL_checkinteger(L, 2), (GLshort)luaL_checkinteger(L, 3), (GLshort)luaL_checkinteger(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib3sv (GLuint index, const GLshort *v)
static int luaglew_glVertexAttrib3sv(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib3sv((GLuint)luaL_checkint(L, 1), (GLshort *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib4Nbv (GLuint index, const GLbyte *v)
static int luaglew_glVertexAttrib4Nbv(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib4Nbv((GLuint)luaL_checkint(L, 1), (GLbyte *)luaglew_checkarray_byte(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib4Niv (GLuint index, const GLint *v)
static int luaglew_glVertexAttrib4Niv(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib4Niv((GLuint)luaL_checkint(L, 1), (GLint *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib4Nsv (GLuint index, const GLshort *v)
static int luaglew_glVertexAttrib4Nsv(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib4Nsv((GLuint)luaL_checkint(L, 1), (GLshort *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib4Nub (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w)
static int luaglew_glVertexAttrib4Nub(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib4Nub((GLuint)luaL_checkint(L, 1), (GLubyte)luaL_checknumber(L, 2), (GLubyte)luaL_checknumber(L, 3), (GLubyte)luaL_checknumber(L, 4), (GLubyte)luaL_checknumber(L, 5));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib4Nubv (GLuint index, const GLubyte *v)
static int luaglew_glVertexAttrib4Nubv(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib4Nubv((GLuint)luaL_checkint(L, 1), (GLubyte *)luaglew_checkarray_ubyte(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib4Nuiv (GLuint index, const GLuint *v)
static int luaglew_glVertexAttrib4Nuiv(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib4Nuiv((GLuint)luaL_checkint(L, 1), (GLuint *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib4Nusv (GLuint index, const GLushort *v)
static int luaglew_glVertexAttrib4Nusv(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib4Nusv((GLuint)luaL_checkint(L, 1), (GLushort *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib4bv (GLuint index, const GLbyte *v)
static int luaglew_glVertexAttrib4bv(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib4bv((GLuint)luaL_checkint(L, 1), (GLbyte *)luaglew_checkarray_byte(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib4d (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w)
static int luaglew_glVertexAttrib4d(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib4d((GLuint)luaL_checkint(L, 1), (GLdouble)luaL_checknumber(L, 2), (GLdouble)luaL_checknumber(L, 3), (GLdouble)luaL_checknumber(L, 4), (GLdouble)luaL_checknumber(L, 5));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib4dv (GLuint index, const GLdouble *v)
static int luaglew_glVertexAttrib4dv(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib4dv((GLuint)luaL_checkint(L, 1), (GLdouble *)luaglew_checkarray_doublefloat(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib4f (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w)
static int luaglew_glVertexAttrib4f(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib4f((GLuint)luaL_checkint(L, 1), (GLfloat)luaL_checknumber(L, 2), (GLfloat)luaL_checknumber(L, 3), (GLfloat)luaL_checknumber(L, 4), (GLfloat)luaL_checknumber(L, 5));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib4fv (GLuint index, const GLfloat *v)
static int luaglew_glVertexAttrib4fv(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib4fv((GLuint)luaL_checkint(L, 1), (GLfloat *)luaglew_checkarray_doublefloat(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib4iv (GLuint index, const GLint *v)
static int luaglew_glVertexAttrib4iv(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib4iv((GLuint)luaL_checkint(L, 1), (GLint *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib4s (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w)
static int luaglew_glVertexAttrib4s(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib4s((GLuint)luaL_checkint(L, 1), (GLshort)luaL_checkinteger(L, 2), (GLshort)luaL_checkinteger(L, 3), (GLshort)luaL_checkinteger(L, 4), (GLshort)luaL_checkinteger(L, 5));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib4sv (GLuint index, const GLshort *v)
static int luaglew_glVertexAttrib4sv(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib4sv((GLuint)luaL_checkint(L, 1), (GLshort *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib4ubv (GLuint index, const GLubyte *v)
static int luaglew_glVertexAttrib4ubv(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib4ubv((GLuint)luaL_checkint(L, 1), (GLubyte *)luaglew_checkarray_ubyte(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib4uiv (GLuint index, const GLuint *v)
static int luaglew_glVertexAttrib4uiv(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib4uiv((GLuint)luaL_checkint(L, 1), (GLuint *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttrib4usv (GLuint index, const GLushort *v)
static int luaglew_glVertexAttrib4usv(lua_State *L) {
	oid return_value;
	return_value = glVertexAttrib4usv((GLuint)luaL_checkint(L, 1), (GLushort *)luaglew_checkarray_int(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glVertexAttribPointer (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid *pointer)
static int luaglew_glVertexAttribPointer(lua_State *L) {
	oid return_value;
	return_value = glVertexAttribPointer((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), luaglew_checkenum(L, 3), (GLboolean)lua_toboolean(L, 4), (GLsizei)luaL_checklong(L, 5), luaglew_checkarray_int(L, 6));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glEnableVertexAttribArray (GLuint index)
static int luaglew_glEnableVertexAttribArray(lua_State *L) {
	oid return_value;
	return_value = glEnableVertexAttribArray((GLuint)luaL_checkint(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glDisableVertexAttribArray (GLuint index)
static int luaglew_glDisableVertexAttribArray(lua_State *L) {
	oid return_value;
	return_value = glDisableVertexAttribArray((GLuint)luaL_checkint(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetVertexAttribdv (GLuint index, GLenum pname, GLdouble *params)
static int luaglew_glGetVertexAttribdv(lua_State *L) {
	oid return_value;
	return_value = glGetVertexAttribdv((GLuint)luaL_checkint(L, 1), luaglew_checkenum(L, 2), (GLdouble *)luaglew_checkarray_doublefloat(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetVertexAttribfv (GLuint index, GLenum pname, GLfloat *params)
static int luaglew_glGetVertexAttribfv(lua_State *L) {
	oid return_value;
	return_value = glGetVertexAttribfv((GLuint)luaL_checkint(L, 1), luaglew_checkenum(L, 2), (GLfloat *)luaglew_checkarray_doublefloat(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetVertexAttribiv (GLuint index, GLenum pname, GLint *params)
static int luaglew_glGetVertexAttribiv(lua_State *L) {
	oid return_value;
	return_value = glGetVertexAttribiv((GLuint)luaL_checkint(L, 1), luaglew_checkenum(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetVertexAttribPointerv (GLuint index, GLenum pname, GLvoid* *pointer)
static int luaglew_glGetVertexAttribPointerv(lua_State *L) {
	oid return_value;
	return_value = glGetVertexAttribPointerv((GLuint)luaL_checkint(L, 1), luaglew_checkenum(L, 2), luaglew_checkarray_int(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glDeleteShader (GLuint shader)
static int luaglew_glDeleteShader(lua_State *L) {
	oid return_value;
	return_value = glDeleteShader((GLuint)luaL_checkint(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glDetachShader (GLuint program, GLuint shader)
static int luaglew_glDetachShader(lua_State *L) {
	oid return_value;
	return_value = glDetachShader((GLuint)luaL_checkint(L, 1), (GLuint)luaL_checkint(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// Luint glCreateShader (GLenum type)
static int luaglew_glCreateShader(lua_State *L) {
	Luint return_value;
	return_value = glCreateShader(luaglew_checkenum(L, 1));
	lua_pushinteger(L, return_value);
	return 1;
}

// oid glShaderSource (GLuint shader, GLsizei count, const GLchar* *string, const GLint *length)
static int luaglew_glShaderSource(lua_State *L) {
	oid return_value;
	return_value = glShaderSource((GLuint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLchar *)luaglew_checkarray_char(L, 3), (GLint *)luaglew_checkarray_int(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glCompileShader (GLuint shader)
static int luaglew_glCompileShader(lua_State *L) {
	oid return_value;
	return_value = glCompileShader((GLuint)luaL_checkint(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// Luint glCreateProgram (void)
static int luaglew_glCreateProgram(lua_State *L) {
	Luint return_value;
	return_value = glCreateProgram();
	lua_pushinteger(L, return_value);
	return 1;
}

// oid glAttachShader (GLuint program, GLuint shader)
static int luaglew_glAttachShader(lua_State *L) {
	oid return_value;
	return_value = glAttachShader((GLuint)luaL_checkint(L, 1), (GLuint)luaL_checkint(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glLinkProgram (GLuint program)
static int luaglew_glLinkProgram(lua_State *L) {
	oid return_value;
	return_value = glLinkProgram((GLuint)luaL_checkint(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glUseProgram (GLuint program)
static int luaglew_glUseProgram(lua_State *L) {
	oid return_value;
	return_value = glUseProgram((GLuint)luaL_checkint(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glDeleteProgram (GLuint program)
static int luaglew_glDeleteProgram(lua_State *L) {
	oid return_value;
	return_value = glDeleteProgram((GLuint)luaL_checkint(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glValidateProgram (GLuint program)
static int luaglew_glValidateProgram(lua_State *L) {
	oid return_value;
	return_value = glValidateProgram((GLuint)luaL_checkint(L, 1));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glUniform1f (GLint location, GLfloat v0)
static int luaglew_glUniform1f(lua_State *L) {
	oid return_value;
	return_value = glUniform1f((GLint)luaL_checkint(L, 1), (GLfloat)luaL_checknumber(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glUniform2f (GLint location, GLfloat v0, GLfloat v1)
static int luaglew_glUniform2f(lua_State *L) {
	oid return_value;
	return_value = glUniform2f((GLint)luaL_checkint(L, 1), (GLfloat)luaL_checknumber(L, 2), (GLfloat)luaL_checknumber(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glUniform3f (GLint location, GLfloat v0, GLfloat v1, GLfloat v2)
static int luaglew_glUniform3f(lua_State *L) {
	oid return_value;
	return_value = glUniform3f((GLint)luaL_checkint(L, 1), (GLfloat)luaL_checknumber(L, 2), (GLfloat)luaL_checknumber(L, 3), (GLfloat)luaL_checknumber(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glUniform4f (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3)
static int luaglew_glUniform4f(lua_State *L) {
	oid return_value;
	return_value = glUniform4f((GLint)luaL_checkint(L, 1), (GLfloat)luaL_checknumber(L, 2), (GLfloat)luaL_checknumber(L, 3), (GLfloat)luaL_checknumber(L, 4), (GLfloat)luaL_checknumber(L, 5));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glUniform1i (GLint location, GLint v0)
static int luaglew_glUniform1i(lua_State *L) {
	oid return_value;
	return_value = glUniform1i((GLint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glUniform2i (GLint location, GLint v0, GLint v1)
static int luaglew_glUniform2i(lua_State *L) {
	oid return_value;
	return_value = glUniform2i((GLint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glUniform3i (GLint location, GLint v0, GLint v1, GLint v2)
static int luaglew_glUniform3i(lua_State *L) {
	oid return_value;
	return_value = glUniform3i((GLint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glUniform4i (GLint location, GLint v0, GLint v1, GLint v2, GLint v3)
static int luaglew_glUniform4i(lua_State *L) {
	oid return_value;
	return_value = glUniform4i((GLint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLint)luaL_checkint(L, 3), (GLint)luaL_checkint(L, 4), (GLint)luaL_checkint(L, 5));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glUniform1fv (GLint location, GLsizei count, const GLfloat *value)
static int luaglew_glUniform1fv(lua_State *L) {
	oid return_value;
	return_value = glUniform1fv((GLint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLfloat *)luaglew_checkarray_doublefloat(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glUniform2fv (GLint location, GLsizei count, const GLfloat *value)
static int luaglew_glUniform2fv(lua_State *L) {
	oid return_value;
	return_value = glUniform2fv((GLint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLfloat *)luaglew_checkarray_doublefloat(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glUniform3fv (GLint location, GLsizei count, const GLfloat *value)
static int luaglew_glUniform3fv(lua_State *L) {
	oid return_value;
	return_value = glUniform3fv((GLint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLfloat *)luaglew_checkarray_doublefloat(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glUniform4fv (GLint location, GLsizei count, const GLfloat *value)
static int luaglew_glUniform4fv(lua_State *L) {
	oid return_value;
	return_value = glUniform4fv((GLint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLfloat *)luaglew_checkarray_doublefloat(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glUniform1iv (GLint location, GLsizei count, const GLint *value)
static int luaglew_glUniform1iv(lua_State *L) {
	oid return_value;
	return_value = glUniform1iv((GLint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glUniform2iv (GLint location, GLsizei count, const GLint *value)
static int luaglew_glUniform2iv(lua_State *L) {
	oid return_value;
	return_value = glUniform2iv((GLint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glUniform3iv (GLint location, GLsizei count, const GLint *value)
static int luaglew_glUniform3iv(lua_State *L) {
	oid return_value;
	return_value = glUniform3iv((GLint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glUniform4iv (GLint location, GLsizei count, const GLint *value)
static int luaglew_glUniform4iv(lua_State *L) {
	oid return_value;
	return_value = glUniform4iv((GLint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glUniformMatrix2fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
static int luaglew_glUniformMatrix2fv(lua_State *L) {
	oid return_value;
	return_value = glUniformMatrix2fv((GLint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLboolean)lua_toboolean(L, 3), (GLfloat *)luaglew_checkarray_doublefloat(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glUniformMatrix3fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
static int luaglew_glUniformMatrix3fv(lua_State *L) {
	oid return_value;
	return_value = glUniformMatrix3fv((GLint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLboolean)lua_toboolean(L, 3), (GLfloat *)luaglew_checkarray_doublefloat(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glUniformMatrix4fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
static int luaglew_glUniformMatrix4fv(lua_State *L) {
	oid return_value;
	return_value = glUniformMatrix4fv((GLint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLboolean)lua_toboolean(L, 3), (GLfloat *)luaglew_checkarray_doublefloat(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// Lboolean glIsShader (GLuint shader)
static int luaglew_glIsShader(lua_State *L) {
	Lboolean return_value;
	return_value = glIsShader((GLuint)luaL_checkint(L, 1));
	push( ** nespracovany typ Lboolean ** );
	return 1;
}

// Lboolean glIsProgram (GLuint program)
static int luaglew_glIsProgram(lua_State *L) {
	Lboolean return_value;
	return_value = glIsProgram((GLuint)luaL_checkint(L, 1));
	push( ** nespracovany typ Lboolean ** );
	return 1;
}

// oid glGetShaderiv (GLuint shader, GLenum pname, GLint *params)
static int luaglew_glGetShaderiv(lua_State *L) {
	oid return_value;
	return_value = glGetShaderiv((GLuint)luaL_checkint(L, 1), luaglew_checkenum(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetProgramiv (GLuint program, GLenum pname, GLint *params)
static int luaglew_glGetProgramiv(lua_State *L) {
	oid return_value;
	return_value = glGetProgramiv((GLuint)luaL_checkint(L, 1), luaglew_checkenum(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetAttachedShaders (GLuint program, GLsizei maxCount, GLsizei *count, GLuint *shaders)
static int luaglew_glGetAttachedShaders(lua_State *L) {
	oid return_value;
	return_value = glGetAttachedShaders((GLuint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLsizei *)luaglew_checkarray_int(L, 3), (GLuint *)luaglew_checkarray_int(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetShaderInfoLog (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog)
static int luaglew_glGetShaderInfoLog(lua_State *L) {
	oid return_value;
	return_value = glGetShaderInfoLog((GLuint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLsizei *)luaglew_checkarray_int(L, 3), (GLchar *)luaglew_checkarray_char(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetProgramInfoLog (GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog)
static int luaglew_glGetProgramInfoLog(lua_State *L) {
	oid return_value;
	return_value = glGetProgramInfoLog((GLuint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLsizei *)luaglew_checkarray_int(L, 3), (GLchar *)luaglew_checkarray_char(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// Lint glGetUniformLocation (GLuint program, const GLchar *name)
static int luaglew_glGetUniformLocation(lua_State *L) {
	Lint return_value;
	return_value = glGetUniformLocation((GLuint)luaL_checkint(L, 1), (GLchar *)luaglew_checkarray_char(L, 2));
	lua_pushinteger(L, return_value);
	return 1;
}

// oid glGetActiveUniform (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name)
static int luaglew_glGetActiveUniform(lua_State *L) {
	oid return_value;
	return_value = glGetActiveUniform((GLuint)luaL_checkint(L, 1), (GLuint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLsizei *)luaglew_checkarray_int(L, 4), (GLint *)luaglew_checkarray_int(L, 5), luaglew_checkarray_enum(L, 6), (GLchar *)luaglew_checkarray_char(L, 7));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetUniformfv (GLuint program, GLint location, GLfloat *params)
static int luaglew_glGetUniformfv(lua_State *L) {
	oid return_value;
	return_value = glGetUniformfv((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLfloat *)luaglew_checkarray_doublefloat(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetUniformiv (GLuint program, GLint location, GLint *params)
static int luaglew_glGetUniformiv(lua_State *L) {
	oid return_value;
	return_value = glGetUniformiv((GLuint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLint *)luaglew_checkarray_int(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetShaderSource (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source)
static int luaglew_glGetShaderSource(lua_State *L) {
	oid return_value;
	return_value = glGetShaderSource((GLuint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLsizei *)luaglew_checkarray_int(L, 3), (GLchar *)luaglew_checkarray_char(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glBindAttribLocation (GLuint program, GLuint index, const GLchar *name)
static int luaglew_glBindAttribLocation(lua_State *L) {
	oid return_value;
	return_value = glBindAttribLocation((GLuint)luaL_checkint(L, 1), (GLuint)luaL_checkint(L, 2), (GLchar *)luaglew_checkarray_char(L, 3));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glGetActiveAttrib (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name)
static int luaglew_glGetActiveAttrib(lua_State *L) {
	oid return_value;
	return_value = glGetActiveAttrib((GLuint)luaL_checkint(L, 1), (GLuint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLsizei *)luaglew_checkarray_int(L, 4), (GLint *)luaglew_checkarray_int(L, 5), luaglew_checkarray_enum(L, 6), (GLchar *)luaglew_checkarray_char(L, 7));
	push( ** nespracovany typ oid ** );
	return 1;
}

// Lint glGetAttribLocation (GLuint program, const GLchar *name)
static int luaglew_glGetAttribLocation(lua_State *L) {
	Lint return_value;
	return_value = glGetAttribLocation((GLuint)luaL_checkint(L, 1), (GLchar *)luaglew_checkarray_char(L, 2));
	lua_pushinteger(L, return_value);
	return 1;
}

// oid glStencilFuncSeparate (GLenum face, GLenum func, GLint ref, GLuint mask)
static int luaglew_glStencilFuncSeparate(lua_State *L) {
	oid return_value;
	return_value = glStencilFuncSeparate(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), (GLint)luaL_checkint(L, 3), (GLuint)luaL_checkint(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glStencilOpSeparate (GLenum face, GLenum fail, GLenum zfail, GLenum zpass)
static int luaglew_glStencilOpSeparate(lua_State *L) {
	oid return_value;
	return_value = glStencilOpSeparate(luaglew_checkenum(L, 1), luaglew_checkenum(L, 2), luaglew_checkenum(L, 3), luaglew_checkenum(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glStencilMaskSeparate (GLenum face, GLuint mask)
static int luaglew_glStencilMaskSeparate(lua_State *L) {
	oid return_value;
	return_value = glStencilMaskSeparate(luaglew_checkenum(L, 1), (GLuint)luaL_checkint(L, 2));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glUniformMatrix2x3fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
static int luaglew_glUniformMatrix2x3fv(lua_State *L) {
	oid return_value;
	return_value = glUniformMatrix2x3fv((GLint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLboolean)lua_toboolean(L, 3), (GLfloat *)luaglew_checkarray_doublefloat(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glUniformMatrix3x2fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
static int luaglew_glUniformMatrix3x2fv(lua_State *L) {
	oid return_value;
	return_value = glUniformMatrix3x2fv((GLint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLboolean)lua_toboolean(L, 3), (GLfloat *)luaglew_checkarray_doublefloat(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glUniformMatrix2x4fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
static int luaglew_glUniformMatrix2x4fv(lua_State *L) {
	oid return_value;
	return_value = glUniformMatrix2x4fv((GLint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLboolean)lua_toboolean(L, 3), (GLfloat *)luaglew_checkarray_doublefloat(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glUniformMatrix4x2fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
static int luaglew_glUniformMatrix4x2fv(lua_State *L) {
	oid return_value;
	return_value = glUniformMatrix4x2fv((GLint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLboolean)lua_toboolean(L, 3), (GLfloat *)luaglew_checkarray_doublefloat(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glUniformMatrix3x4fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
static int luaglew_glUniformMatrix3x4fv(lua_State *L) {
	oid return_value;
	return_value = glUniformMatrix3x4fv((GLint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLboolean)lua_toboolean(L, 3), (GLfloat *)luaglew_checkarray_doublefloat(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// oid glUniformMatrix4x3fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)static int luaglew_glUniformMatrix4x3fv(lua_State *L) {
	oid return_value;
	return_value = glUniformMatrix4x3fv((GLint)luaL_checkint(L, 1), (GLsizei)luaL_checklong(L, 2), (GLboolean)lua_toboolean(L, 3), (GLfloat *)luaglew_checkarray_doublefloat(L, 4));
	push( ** nespracovany typ oid ** );
	return 1;
}

// void glAddSwapHintRectWIN (GLint x, GLint y, GLsizei width, GLsizei height)
static int luaglew_glAddSwapHintRectWIN(lua_State *L) {
	glAddSwapHintRectWIN((GLint)luaL_checkint(L, 1), (GLint)luaL_checkint(L, 2), (GLsizei)luaL_checklong(L, 3), (GLsizei)luaL_checklong(L, 4));
	return 0;
}

// BOOL wglEnumGpusNV (UINT iGpuIndex, HGPUNV *phGpu)
static int luaglew_wglEnumGpusNV(lua_State *L) {
	BOOL return_value;
	return_value = wglEnumGpusNV(**check nespracovany typ UINT **, luaglew_checkarray_HGPUNV(L, 2));
	lua_pushboolean(L, return_value);
	return 1;
}

// BOOL wglEnumGpuDevicesNV (HGPUNV hGpu, UINT iDeviceIndex, PGPU_DEVICE lpGpuDevice)
static int luaglew_wglEnumGpuDevicesNV(lua_State *L) {
	BOOL return_value;
	return_value = wglEnumGpuDevicesNV(**check nespracovany typ HGPUNV **, **check nespracovany typ UINT **, **check nespracovany typ PGPU_DEVICE **);
	lua_pushboolean(L, return_value);
	return 1;
}

// HDC wglCreateAffinityDCNV (const HGPUNV *phGpuList)
static int luaglew_wglCreateAffinityDCNV(lua_State *L) {
	HDC return_value;
	return_value = wglCreateAffinityDCNV(luaglew_checkarray_HGPUNV(L, 1));
	push( ** nespracovany typ HDC ** );
	return 1;
}

// BOOL wglEnumGpusFromAffinityDCNV (HDC hAffinityDC, UINT iGpuIndex, HGPUNV *hGpu)
static int luaglew_wglEnumGpusFromAffinityDCNV(lua_State *L) {
	BOOL return_value;
	return_value = wglEnumGpusFromAffinityDCNV(**check nespracovany typ HDC **, **check nespracovany typ UINT **, luaglew_checkarray_HGPUNV(L, 3));
	lua_pushboolean(L, return_value);
	return 1;
}

// BOOL wglDeleteDCNV (HDC hdc)
static int luaglew_wglDeleteDCNV(lua_State *L) {
	BOOL return_value;
	return_value = wglDeleteDCNV(**check nespracovany typ HDC **);
	lua_pushboolean(L, return_value);
	return 1;
}

// void * wglAllocateMemoryNV (GLsizei size, GLfloat readFrequency, GLfloat writeFrequency, GLfloat priority)
static int luaglew_wglAllocateMemoryNV(lua_State *L) {
	void * return_value;
	return_value = wglAllocateMemoryNV((GLsizei)luaL_checklong(L, 1), (GLfloat)luaL_checknumber(L, 2), (GLfloat)luaL_checknumber(L, 3), (GLfloat)luaL_checknumber(L, 4));
	luaglew_pusharray_void(L, return_value);
	return 1;
}

// void wglFreeMemoryNV (void *pointer)
static int luaglew_wglFreeMemoryNV(lua_State *L) {
	wglFreeMemoryNV(luaglew_checkarray_int(L, 1));
	return 0;
}

