local ffi = require( "ffi" )

ffi.cdef[[

enum {
<<<<<<< HEAD
//####GLX_AMD_gpu_association
	GLX_AMD_gpu_association = 0x1,
//####GLX_GPU_RENDERER_STRING_AMD
	GLX_GPU_RENDERER_STRING_AMD = 0x1F01,
//####GLX_GPU_OPENGL_VERSION_STRING_AMD
	GLX_GPU_OPENGL_VERSION_STRING_AMD = 0x1F02,
//####GLX_GPU_FASTEST_TARGET_GPUS_AMD
	GLX_GPU_FASTEST_TARGET_GPUS_AMD = 0x21A2,
//####GLX_GPU_RAM_AMD
	GLX_GPU_RAM_AMD = 0x21A3,
//####GLX_GPU_CLOCK_AMD
	GLX_GPU_CLOCK_AMD = 0x21A4,
//####GLX_GPU_NUM_PIPES_AMD
	GLX_GPU_NUM_PIPES_AMD = 0x21A5,
//####GLX_GPU_NUM_SIMD_AMD
	GLX_GPU_NUM_SIMD_AMD = 0x21A6,
//####GLX_GPU_NUM_RB_AMD
	GLX_GPU_NUM_RB_AMD = 0x21A7,
//####GLX_GPU_NUM_SPI_AMD
	GLX_GPU_NUM_SPI_AMD = 0x21A8,
//####GLX_ARB_get_proc_address
	GLX_ARB_get_proc_address = 0x1,
//####GLX_ATI_pixel_format_float
	GLX_ATI_pixel_format_float = 0x1,
//####GLX_ATI_render_texture
	GLX_ATI_render_texture = 0x1,
//####GLX_BIND_TO_TEXTURE_RGBA_ATI
	GLX_BIND_TO_TEXTURE_RGBA_ATI = 0x9801,
//####GLX_TEXTURE_FORMAT_ATI
	GLX_TEXTURE_FORMAT_ATI = 0x9802,
//####GLX_TEXTURE_TARGET_ATI
	GLX_TEXTURE_TARGET_ATI = 0x9803,
//####GLX_MIPMAP_TEXTURE_ATI
	GLX_MIPMAP_TEXTURE_ATI = 0x9804,
//####GLX_TEXTURE_RGB_ATI
	GLX_TEXTURE_RGB_ATI = 0x9805,
//####GLX_TEXTURE_RGBA_ATI
	GLX_TEXTURE_RGBA_ATI = 0x9806,
//####GLX_NO_TEXTURE_ATI
	GLX_NO_TEXTURE_ATI = 0x9807,
//####GLX_TEXTURE_CUBE_MAP_ATI
	GLX_TEXTURE_CUBE_MAP_ATI = 0x9808,
//####GLX_TEXTURE_1D_ATI
	GLX_TEXTURE_1D_ATI = 0x9809,
//####GLX_TEXTURE_2D_ATI
	GLX_TEXTURE_2D_ATI = 0x980A,
//####GLX_MIPMAP_LEVEL_ATI
	GLX_MIPMAP_LEVEL_ATI = 0x980B,
//####GLX_CUBE_MAP_FACE_ATI
	GLX_CUBE_MAP_FACE_ATI = 0x980C,
//####GLX_TEXTURE_CUBE_MAP_POSITIVE_X_ATI
	GLX_TEXTURE_CUBE_MAP_POSITIVE_X_ATI = 0x980D,
//####GLX_TEXTURE_CUBE_MAP_NEGATIVE_X_ATI
	GLX_TEXTURE_CUBE_MAP_NEGATIVE_X_ATI = 0x980E,
//####GLX_TEXTURE_CUBE_MAP_POSITIVE_Y_ATI
	GLX_TEXTURE_CUBE_MAP_POSITIVE_Y_ATI = 0x980F,
//####GLX_TEXTURE_CUBE_MAP_NEGATIVE_Y_ATI
	GLX_TEXTURE_CUBE_MAP_NEGATIVE_Y_ATI = 0x9810,
//####GLX_TEXTURE_CUBE_MAP_POSITIVE_Z_ATI
	GLX_TEXTURE_CUBE_MAP_POSITIVE_Z_ATI = 0x9811,
//####GLX_TEXTURE_CUBE_MAP_NEGATIVE_Z_ATI
	GLX_TEXTURE_CUBE_MAP_NEGATIVE_Z_ATI = 0x9812,
//####GLX_FRONT_LEFT_ATI
	GLX_FRONT_LEFT_ATI = 0x9813,
//####GLX_FRONT_RIGHT_ATI
	GLX_FRONT_RIGHT_ATI = 0x9814,
//####GLX_BACK_LEFT_ATI
	GLX_BACK_LEFT_ATI = 0x9815,
//####GLX_BACK_RIGHT_ATI
	GLX_BACK_RIGHT_ATI = 0x9816,
//####GLX_AUX0_ATI
	GLX_AUX0_ATI = 0x9817,
//####GLX_AUX1_ATI
	GLX_AUX1_ATI = 0x9818,
//####GLX_AUX2_ATI
	GLX_AUX2_ATI = 0x9819,
//####GLX_AUX3_ATI
	GLX_AUX3_ATI = 0x981A,
//####GLX_AUX4_ATI
	GLX_AUX4_ATI = 0x981B,
//####GLX_AUX5_ATI
	GLX_AUX5_ATI = 0x981C,
//####GLX_AUX6_ATI
	GLX_AUX6_ATI = 0x981D,
//####GLX_AUX7_ATI
	GLX_AUX7_ATI = 0x981E,
//####GLX_AUX8_ATI
	GLX_AUX8_ATI = 0x981F,
//####GLX_AUX9_ATI
	GLX_AUX9_ATI = 0x9820,
//####GLX_BIND_TO_TEXTURE_LUMINANCE_ATI
	GLX_BIND_TO_TEXTURE_LUMINANCE_ATI = 0x9821,
//####GLX_BIND_TO_TEXTURE_INTENSITY_ATI
	GLX_BIND_TO_TEXTURE_INTENSITY_ATI = 0x9822,
//####GLX_EXT_fbconfig_packed_float
	GLX_EXT_fbconfig_packed_float = 0x1,
//####GLX_RGBA_UNSIGNED_FLOAT_BIT_EXT
	GLX_RGBA_UNSIGNED_FLOAT_BIT_EXT = 0x00000008,
//####GLX_EXT_framebuffer_sRGB
	GLX_EXT_framebuffer_sRGB = 0x1,
//####GLX_NV_float_buffer
	GLX_NV_float_buffer = 0x1,
//####GLX_NV_vertex_array_range
	GLX_NV_vertex_array_range = 0x1,
//####GLX_SGIS_shared_multisample
	GLX_SGIS_shared_multisample = 0x1,
//####GLX_MULTISAMPLE_SUB_RECT_HEIGHT_SGIS
	GLX_MULTISAMPLE_SUB_RECT_HEIGHT_SGIS = 0x8027,
//####GLX_SGIX_hyperpipe
	GLX_SGIX_hyperpipe = 0x1,
//####GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX
	GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX = 0x1,
//####GLX_HYPERPIPE_DISPLAY_PIPE_SGIX
	GLX_HYPERPIPE_DISPLAY_PIPE_SGIX = 0x00000001,
//####GLX_HYPERPIPE_RENDER_PIPE_SGIX
	GLX_HYPERPIPE_RENDER_PIPE_SGIX = 0x00000002,
//####GLX_PIPE_RECT_SGIX
	GLX_PIPE_RECT_SGIX = 0x00000001,
//####GLX_PIPE_RECT_LIMITS_SGIX
	GLX_PIPE_RECT_LIMITS_SGIX = 0x00000002,
//####GLX_HYPERPIPE_STEREO_SGIX
	GLX_HYPERPIPE_STEREO_SGIX = 0x00000003,
//####GLX_HYPERPIPE_PIXEL_AVERAGE_SGIX
	GLX_HYPERPIPE_PIXEL_AVERAGE_SGIX = 0x00000004,
//####GLX_BAD_HYPERPIPE_CONFIG_SGIX
	GLX_BAD_HYPERPIPE_CONFIG_SGIX = 0x1,
//####GLX_BAD_HYPERPIPE_SGIX
	GLX_BAD_HYPERPIPE_SGIX = 0x1,
//####GLX_SGIX_swap_barrier
	GLX_SGIX_swap_barrier = 0x1,
//####GLX_SGIX_swap_group
	GLX_SGIX_swap_group = 0x1,
//####GLX_SGI_video_sync
	GLX_SGI_video_sync = 0x1,
//####GLX_SUN_video_resize
	GLX_SUN_video_resize = 0x1,
//####GLX_VIDEO_RESIZE_SUN
	GLX_VIDEO_RESIZE_SUN = 0x8171,
//####GLX_VERSION_1_2
	GLX_VERSION_1_2 = 0x1,
//####GLX_VERSION_1_3
	GLX_VERSION_1_3 = 0x1,
//####GLX_PIXMAP_BIT
	GLX_PIXMAP_BIT = 0x00000002,
//####GLX_PBUFFER_BIT
	GLX_PBUFFER_BIT = 0x00000004,
//####GLX_RGBA_BIT
	GLX_RGBA_BIT = 0x00000001,
//####GLX_COLOR_INDEX_BIT
	GLX_COLOR_INDEX_BIT = 0x00000002,
//####GLX_PBUFFER_CLOBBER_MASK
	GLX_PBUFFER_CLOBBER_MASK = 0x08000000,
//####GLX_FRONT_LEFT_BUFFER_BIT
	GLX_FRONT_LEFT_BUFFER_BIT = 0x00000001,
//####GLX_FRONT_RIGHT_BUFFER_BIT
	GLX_FRONT_RIGHT_BUFFER_BIT = 0x00000002,
//####GLX_BACK_LEFT_BUFFER_BIT
	GLX_BACK_LEFT_BUFFER_BIT = 0x00000004,
//####GLX_BACK_RIGHT_BUFFER_BIT
	GLX_BACK_RIGHT_BUFFER_BIT = 0x00000008,
//####GLX_AUX_BUFFERS_BIT
	GLX_AUX_BUFFERS_BIT = 0x00000010,
//####GLX_DEPTH_BUFFER_BIT
	GLX_DEPTH_BUFFER_BIT = 0x00000020,
//####GLX_STENCIL_BUFFER_BIT
	GLX_STENCIL_BUFFER_BIT = 0x00000040,
//####GLX_ACCUM_BUFFER_BIT
	GLX_ACCUM_BUFFER_BIT = 0x00000080,
//####GLX_CONFIG_CAVEAT
	GLX_CONFIG_CAVEAT = 0x20,
//####GLX_X_VISUAL_TYPE
	GLX_X_VISUAL_TYPE = 0x22,
//####GLX_TRANSPARENT_TYPE
	GLX_TRANSPARENT_TYPE = 0x23,
//####GLX_TRANSPARENT_INDEX_VALUE
	GLX_TRANSPARENT_INDEX_VALUE = 0x24,
//####GLX_TRANSPARENT_RED_VALUE
	GLX_TRANSPARENT_RED_VALUE = 0x25,
//####GLX_TRANSPARENT_GREEN_VALUE
	GLX_TRANSPARENT_GREEN_VALUE = 0x26,
//####GLX_TRANSPARENT_BLUE_VALUE
	GLX_TRANSPARENT_BLUE_VALUE = 0x27,
//####GLX_TRANSPARENT_ALPHA_VALUE
	GLX_TRANSPARENT_ALPHA_VALUE = 0x28,
//####GLX_DONT_CARE
	GLX_DONT_CARE = 0xFFFFFFFF,
//####GLX_NONE
	GLX_NONE = 0x8000,
//####GLX_SLOW_CONFIG
	GLX_SLOW_CONFIG = 0x8001,
//####GLX_TRUE_COLOR
	GLX_TRUE_COLOR = 0x8002,
//####GLX_DIRECT_COLOR
	GLX_DIRECT_COLOR = 0x8003,
//####GLX_PSEUDO_COLOR
	GLX_PSEUDO_COLOR = 0x8004,
//####GLX_STATIC_COLOR
	GLX_STATIC_COLOR = 0x8005,
//####GLX_GRAY_SCALE
	GLX_GRAY_SCALE = 0x8006,
//####GLX_STATIC_GRAY
	GLX_STATIC_GRAY = 0x8007,
//####GLX_TRANSPARENT_RGB
	GLX_TRANSPARENT_RGB = 0x8008,
//####GLX_TRANSPARENT_INDEX
	GLX_TRANSPARENT_INDEX = 0x8009,
//####GLX_VISUAL_ID
	GLX_VISUAL_ID = 0x800B,
//####GLX_SCREEN
	GLX_SCREEN = 0x800C,
//####GLX_NON_CONFORMANT_CONFIG
	GLX_NON_CONFORMANT_CONFIG = 0x800D,
//####GLX_DRAWABLE_TYPE
	GLX_DRAWABLE_TYPE = 0x8010,
//####GLX_RENDER_TYPE
	GLX_RENDER_TYPE = 0x8011,
//####GLX_X_RENDERABLE
	GLX_X_RENDERABLE = 0x8012,
//####GLX_FBCONFIG_ID
	GLX_FBCONFIG_ID = 0x8013,
//####GLX_RGBA_TYPE
	GLX_RGBA_TYPE = 0x8014,
//####GLX_COLOR_INDEX_TYPE
	GLX_COLOR_INDEX_TYPE = 0x8015,
//####GLX_MAX_PBUFFER_WIDTH
	GLX_MAX_PBUFFER_WIDTH = 0x8016,
//####GLX_MAX_PBUFFER_HEIGHT
	GLX_MAX_PBUFFER_HEIGHT = 0x8017,
//####GLX_MAX_PBUFFER_PIXELS
	GLX_MAX_PBUFFER_PIXELS = 0x8018,
//####GLX_PRESERVED_CONTENTS
	GLX_PRESERVED_CONTENTS = 0x801B,
//####GLX_LARGEST_PBUFFER
	GLX_LARGEST_PBUFFER = 0x801C,
//####GLX_WIDTH
	GLX_WIDTH = 0x801D,
//####GLX_HEIGHT
	GLX_HEIGHT = 0x801E,
//####GLX_EVENT_MASK
	GLX_EVENT_MASK = 0x801F,
//####GLX_DAMAGED
	GLX_DAMAGED = 0x8020,
//####GLX_SAVED
	GLX_SAVED = 0x8021,
//####GLX_WINDOW
	GLX_WINDOW = 0x8022,
//####GLX_PBUFFER
	GLX_PBUFFER = 0x8023,
//####GLX_PBUFFER_HEIGHT
	GLX_PBUFFER_HEIGHT = 0x8040,
//####GLX_PBUFFER_WIDTH
	GLX_PBUFFER_WIDTH = 0x8041,
//####GLX_VERSION_1_4
	GLX_VERSION_1_4 = 0x1,
//####GLX_SAMPLES
	GLX_SAMPLES = 0x1,
//####GL_APPLE_float_pixels
	GL_APPLE_float_pixels = 0x1,
//####GL_COLOR_FLOAT_APPLE
	GL_COLOR_FLOAT_APPLE = 0x8A0F,
//####GL_RGBA_FLOAT32_APPLE
	GL_RGBA_FLOAT32_APPLE = 0x8814,
//####GL_RGB_FLOAT32_APPLE
	GL_RGB_FLOAT32_APPLE = 0x8815,
//####GL_ALPHA_FLOAT32_APPLE
	GL_ALPHA_FLOAT32_APPLE = 0x8816,
//####GL_INTENSITY_FLOAT32_APPLE
	GL_INTENSITY_FLOAT32_APPLE = 0x8817,
//####GL_LUMINANCE_FLOAT32_APPLE
	GL_LUMINANCE_FLOAT32_APPLE = 0x8818,
//####GL_LUMINANCE_ALPHA_FLOAT32_APPLE
	GL_LUMINANCE_ALPHA_FLOAT32_APPLE = 0x8819,
//####GL_RGBA_FLOAT16_APPLE
	GL_RGBA_FLOAT16_APPLE = 0x881A,
//####GL_RGB_FLOAT16_APPLE
	GL_RGB_FLOAT16_APPLE = 0x881B,
//####GL_ALPHA_FLOAT16_APPLE
	GL_ALPHA_FLOAT16_APPLE = 0x881C,
//####GL_INTENSITY_FLOAT16_APPLE
	GL_INTENSITY_FLOAT16_APPLE = 0x881D,
//####GL_LUMINANCE_FLOAT16_APPLE
	GL_LUMINANCE_FLOAT16_APPLE = 0x881E,
//####GL_LUMINANCE_ALPHA_FLOAT16_APPLE
	GL_LUMINANCE_ALPHA_FLOAT16_APPLE = 0x881F,
//####GL_APPLE_pixel_buffer
	GL_APPLE_pixel_buffer = 0x1,
//####GL_APPLE_texture_range
	GL_APPLE_texture_range = 0x1,
//####GL_STORAGE_PRIVATE_APPLE
	GL_STORAGE_PRIVATE_APPLE = 0x85BD,
//####GL_STORAGE_CACHED_APPLE
	GL_STORAGE_CACHED_APPLE = 0x85BE,
//####GL_STORAGE_SHARED_APPLE
	GL_STORAGE_SHARED_APPLE = 0x85BF,
//####GL_TEXTURE_RANGE_LENGTH_APPLE
	GL_TEXTURE_RANGE_LENGTH_APPLE = 0x85B7,
//####GL_TEXTURE_RANGE_POINTER_APPLE
	GL_TEXTURE_RANGE_POINTER_APPLE = 0x85B8,
//####GL_ARB_imaging
	GL_ARB_imaging = 0x1,
//####GL_ONE_MINUS_CONSTANT_COLOR
	GL_ONE_MINUS_CONSTANT_COLOR = 0x8002,
//####GL_CONSTANT_ALPHA
	GL_CONSTANT_ALPHA = 0x8003,
//####GL_ONE_MINUS_CONSTANT_ALPHA
	GL_ONE_MINUS_CONSTANT_ALPHA = 0x8004,
//####GL_BLEND_COLOR
	GL_BLEND_COLOR = 0x8005,
//####GL_FUNC_ADD
	GL_FUNC_ADD = 0x8006,
//####GL_MIN
	GL_MIN = 0x8007,
//####GL_MAX
	GL_MAX = 0x8008,
//####GL_BLEND_EQUATION
	GL_BLEND_EQUATION = 0x8009,
//####GL_FUNC_SUBTRACT
	GL_FUNC_SUBTRACT = 0x800A,
//####GL_FUNC_REVERSE_SUBTRACT
	GL_FUNC_REVERSE_SUBTRACT = 0x800B,
//####GL_CONVOLUTION_1D
	GL_CONVOLUTION_1D = 0x8010,
//####GL_CONVOLUTION_2D
	GL_CONVOLUTION_2D = 0x8011,
//####GL_SEPARABLE_2D
	GL_SEPARABLE_2D = 0x8012,
//####GL_CONVOLUTION_BORDER_MODE
	GL_CONVOLUTION_BORDER_MODE = 0x8013,
//####GL_CONVOLUTION_FILTER_SCALE
	GL_CONVOLUTION_FILTER_SCALE = 0x8014,
//####GL_CONVOLUTION_FILTER_BIAS
	GL_CONVOLUTION_FILTER_BIAS = 0x8015,
//####GL_REDUCE
	GL_REDUCE = 0x8016,
//####GL_CONVOLUTION_FORMAT
	GL_CONVOLUTION_FORMAT = 0x8017,
//####GL_CONVOLUTION_WIDTH
	GL_CONVOLUTION_WIDTH = 0x8018,
//####GL_CONVOLUTION_HEIGHT
	GL_CONVOLUTION_HEIGHT = 0x8019,
//####GL_MAX_CONVOLUTION_WIDTH
	GL_MAX_CONVOLUTION_WIDTH = 0x801A,
//####GL_MAX_CONVOLUTION_HEIGHT
	GL_MAX_CONVOLUTION_HEIGHT = 0x801B,
//####GL_POST_CONVOLUTION_RED_SCALE
	GL_POST_CONVOLUTION_RED_SCALE = 0x801C,
//####GL_POST_CONVOLUTION_GREEN_SCALE
	GL_POST_CONVOLUTION_GREEN_SCALE = 0x801D,
//####GL_POST_CONVOLUTION_BLUE_SCALE
	GL_POST_CONVOLUTION_BLUE_SCALE = 0x801E,
//####GL_POST_CONVOLUTION_ALPHA_SCALE
	GL_POST_CONVOLUTION_ALPHA_SCALE = 0x801F,
//####GL_POST_CONVOLUTION_RED_BIAS
	GL_POST_CONVOLUTION_RED_BIAS = 0x8020,
//####GL_POST_CONVOLUTION_GREEN_BIAS
	GL_POST_CONVOLUTION_GREEN_BIAS = 0x8021,
//####GL_POST_CONVOLUTION_BLUE_BIAS
	GL_POST_CONVOLUTION_BLUE_BIAS = 0x8022,
//####GL_POST_CONVOLUTION_ALPHA_BIAS
	GL_POST_CONVOLUTION_ALPHA_BIAS = 0x8023,
//####GL_HISTOGRAM
	GL_HISTOGRAM = 0x8024,
//####GL_PROXY_HISTOGRAM
	GL_PROXY_HISTOGRAM = 0x8025,
//####GL_HISTOGRAM_WIDTH
	GL_HISTOGRAM_WIDTH = 0x8026,
//####GL_HISTOGRAM_FORMAT
	GL_HISTOGRAM_FORMAT = 0x8027,
//####GL_HISTOGRAM_RED_SIZE
	GL_HISTOGRAM_RED_SIZE = 0x8028,
//####GL_HISTOGRAM_GREEN_SIZE
	GL_HISTOGRAM_GREEN_SIZE = 0x8029,
//####GL_HISTOGRAM_BLUE_SIZE
	GL_HISTOGRAM_BLUE_SIZE = 0x802A,
//####GL_HISTOGRAM_ALPHA_SIZE
	GL_HISTOGRAM_ALPHA_SIZE = 0x802B,
//####GL_HISTOGRAM_LUMINANCE_SIZE
	GL_HISTOGRAM_LUMINANCE_SIZE = 0x802C,
//####GL_HISTOGRAM_SINK
	GL_HISTOGRAM_SINK = 0x802D,
//####GL_MINMAX
	GL_MINMAX = 0x802E,
//####GL_MINMAX_FORMAT
	GL_MINMAX_FORMAT = 0x802F,
//####GL_MINMAX_SINK
	GL_MINMAX_SINK = 0x8030,
//####GL_TABLE_TOO_LARGE
	GL_TABLE_TOO_LARGE = 0x8031,
//####GL_COLOR_MATRIX
	GL_COLOR_MATRIX = 0x80B1,
//####GL_COLOR_MATRIX_STACK_DEPTH
	GL_COLOR_MATRIX_STACK_DEPTH = 0x80B2,
//####GL_MAX_COLOR_MATRIX_STACK_DEPTH
	GL_MAX_COLOR_MATRIX_STACK_DEPTH = 0x80B3,
//####GL_POST_COLOR_MATRIX_RED_SCALE
	GL_POST_COLOR_MATRIX_RED_SCALE = 0x80B4,
//####GL_POST_COLOR_MATRIX_GREEN_SCALE
	GL_POST_COLOR_MATRIX_GREEN_SCALE = 0x80B5,
//####GL_POST_COLOR_MATRIX_BLUE_SCALE
	GL_POST_COLOR_MATRIX_BLUE_SCALE = 0x80B6,
//####GL_POST_COLOR_MATRIX_ALPHA_SCALE
	GL_POST_COLOR_MATRIX_ALPHA_SCALE = 0x80B7,
//####GL_POST_COLOR_MATRIX_RED_BIAS
	GL_POST_COLOR_MATRIX_RED_BIAS = 0x80B8,
//####GL_POST_COLOR_MATRIX_GREEN_BIAS
	GL_POST_COLOR_MATRIX_GREEN_BIAS = 0x80B9,
//####GL_POST_COLOR_MATRIX_BLUE_BIAS
	GL_POST_COLOR_MATRIX_BLUE_BIAS = 0x80BA,
//####GL_POST_COLOR_MATRIX_ALPHA_BIAS
	GL_POST_COLOR_MATRIX_ALPHA_BIAS = 0x80BB,
//####GL_COLOR_TABLE
	GL_COLOR_TABLE = 0x80D0,
//####GL_POST_CONVOLUTION_COLOR_TABLE
	GL_POST_CONVOLUTION_COLOR_TABLE = 0x80D1,
//####GL_POST_COLOR_MATRIX_COLOR_TABLE
	GL_POST_COLOR_MATRIX_COLOR_TABLE = 0x80D2,
//####GL_PROXY_COLOR_TABLE
	GL_PROXY_COLOR_TABLE = 0x80D3,
//####GL_PROXY_POST_CONVOLUTION_COLOR_TABLE
	GL_PROXY_POST_CONVOLUTION_COLOR_TABLE = 0x80D4,
//####GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE
	GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE = 0x80D5,
//####GL_COLOR_TABLE_SCALE
	GL_COLOR_TABLE_SCALE = 0x80D6,
//####GL_COLOR_TABLE_BIAS
	GL_COLOR_TABLE_BIAS = 0x80D7,
//####GL_COLOR_TABLE_FORMAT
	GL_COLOR_TABLE_FORMAT = 0x80D8,
//####GL_COLOR_TABLE_WIDTH
	GL_COLOR_TABLE_WIDTH = 0x80D9,
//####GL_COLOR_TABLE_RED_SIZE
	GL_COLOR_TABLE_RED_SIZE = 0x80DA,
//####GL_COLOR_TABLE_GREEN_SIZE
	GL_COLOR_TABLE_GREEN_SIZE = 0x80DB,
//####GL_COLOR_TABLE_BLUE_SIZE
	GL_COLOR_TABLE_BLUE_SIZE = 0x80DC,
//####GL_COLOR_TABLE_ALPHA_SIZE
	GL_COLOR_TABLE_ALPHA_SIZE = 0x80DD,
//####GL_COLOR_TABLE_LUMINANCE_SIZE
	GL_COLOR_TABLE_LUMINANCE_SIZE = 0x80DE,
//####GL_COLOR_TABLE_INTENSITY_SIZE
	GL_COLOR_TABLE_INTENSITY_SIZE = 0x80DF,
//####GL_IGNORE_BORDER
	GL_IGNORE_BORDER = 0x8150,
//####GL_CONSTANT_BORDER
	GL_CONSTANT_BORDER = 0x8151,
//####GL_WRAP_BORDER
	GL_WRAP_BORDER = 0x8152,
//####GL_REPLICATE_BORDER
	GL_REPLICATE_BORDER = 0x8153,
//####GL_CONVOLUTION_BORDER_COLOR
	GL_CONVOLUTION_BORDER_COLOR = 0x8154,
//####GL_ARB_matrix_palette
	GL_ARB_matrix_palette = 0x1,
//####GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB
	GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB = 0x8841,
//####GL_MAX_PALETTE_MATRICES_ARB
	GL_MAX_PALETTE_MATRICES_ARB = 0x8842,
//####GL_CURRENT_PALETTE_MATRIX_ARB
	GL_CURRENT_PALETTE_MATRIX_ARB = 0x8843,
//####GL_MATRIX_INDEX_ARRAY_ARB
	GL_MATRIX_INDEX_ARRAY_ARB = 0x8844,
//####GL_CURRENT_MATRIX_INDEX_ARB
	GL_CURRENT_MATRIX_INDEX_ARB = 0x8845,
//####GL_MATRIX_INDEX_ARRAY_SIZE_ARB
	GL_MATRIX_INDEX_ARRAY_SIZE_ARB = 0x8846,
//####GL_MATRIX_INDEX_ARRAY_TYPE_ARB
	GL_MATRIX_INDEX_ARRAY_TYPE_ARB = 0x8847,
//####GL_MATRIX_INDEX_ARRAY_STRIDE_ARB
	GL_MATRIX_INDEX_ARRAY_STRIDE_ARB = 0x8848,
//####GL_MATRIX_INDEX_ARRAY_POINTER_ARB
	GL_MATRIX_INDEX_ARRAY_POINTER_ARB = 0x8849,
//####GL_ARB_multitexture
	GL_ARB_multitexture = 0x1,
//####GL_TEXTURE1_ARB
	GL_TEXTURE1_ARB = 0x84C1,
//####GL_TEXTURE2_ARB
	GL_TEXTURE2_ARB = 0x84C2,
//####GL_TEXTURE3_ARB
	GL_TEXTURE3_ARB = 0x84C3,
//####GL_TEXTURE4_ARB
	GL_TEXTURE4_ARB = 0x84C4,
//####GL_TEXTURE5_ARB
	GL_TEXTURE5_ARB = 0x84C5,
//####GL_TEXTURE6_ARB
	GL_TEXTURE6_ARB = 0x84C6,
//####GL_TEXTURE7_ARB
	GL_TEXTURE7_ARB = 0x84C7,
//####GL_TEXTURE8_ARB
	GL_TEXTURE8_ARB = 0x84C8,
//####GL_TEXTURE9_ARB
	GL_TEXTURE9_ARB = 0x84C9,
//####GL_TEXTURE10_ARB
	GL_TEXTURE10_ARB = 0x84CA,
//####GL_TEXTURE11_ARB
	GL_TEXTURE11_ARB = 0x84CB,
//####GL_TEXTURE12_ARB
	GL_TEXTURE12_ARB = 0x84CC,
//####GL_TEXTURE13_ARB
	GL_TEXTURE13_ARB = 0x84CD,
//####GL_TEXTURE14_ARB
	GL_TEXTURE14_ARB = 0x84CE,
//####GL_TEXTURE15_ARB
	GL_TEXTURE15_ARB = 0x84CF,
//####GL_TEXTURE16_ARB
	GL_TEXTURE16_ARB = 0x84D0,
//####GL_TEXTURE17_ARB
	GL_TEXTURE17_ARB = 0x84D1,
//####GL_TEXTURE18_ARB
	GL_TEXTURE18_ARB = 0x84D2,
//####GL_TEXTURE19_ARB
	GL_TEXTURE19_ARB = 0x84D3,
//####GL_TEXTURE20_ARB
	GL_TEXTURE20_ARB = 0x84D4,
//####GL_TEXTURE21_ARB
	GL_TEXTURE21_ARB = 0x84D5,
//####GL_TEXTURE22_ARB
	GL_TEXTURE22_ARB = 0x84D6,
//####GL_TEXTURE23_ARB
	GL_TEXTURE23_ARB = 0x84D7,
//####GL_TEXTURE24_ARB
	GL_TEXTURE24_ARB = 0x84D8,
//####GL_TEXTURE25_ARB
	GL_TEXTURE25_ARB = 0x84D9,
//####GL_TEXTURE26_ARB
	GL_TEXTURE26_ARB = 0x84DA,
//####GL_TEXTURE27_ARB
	GL_TEXTURE27_ARB = 0x84DB,
//####GL_TEXTURE28_ARB
	GL_TEXTURE28_ARB = 0x84DC,
//####GL_TEXTURE29_ARB
	GL_TEXTURE29_ARB = 0x84DD,
//####GL_TEXTURE30_ARB
	GL_TEXTURE30_ARB = 0x84DE,
//####GL_TEXTURE31_ARB
	GL_TEXTURE31_ARB = 0x84DF,
//####GL_ACTIVE_TEXTURE_ARB
	GL_ACTIVE_TEXTURE_ARB = 0x84E0,
//####GL_CLIENT_ACTIVE_TEXTURE_ARB
	GL_CLIENT_ACTIVE_TEXTURE_ARB = 0x84E1,
//####GL_MAX_TEXTURE_UNITS_ARB
	GL_MAX_TEXTURE_UNITS_ARB = 0x84E2,
//####GL_ARB_point_parameters
	GL_ARB_point_parameters = 0x1,
//####GL_POINT_SIZE_MAX_ARB
	GL_POINT_SIZE_MAX_ARB = 0x8127,
//####GL_POINT_FADE_THRESHOLD_SIZE_ARB
	GL_POINT_FADE_THRESHOLD_SIZE_ARB = 0x8128,
//####GL_POINT_DISTANCE_ATTENUATION_ARB
	GL_POINT_DISTANCE_ATTENUATION_ARB = 0x8129,
//####GL_ARB_robustness
	GL_ARB_robustness = 0x1,
//####GL_LOSE_CONTEXT_ON_RESET_ARB
	GL_LOSE_CONTEXT_ON_RESET_ARB = 0x8252,
//####GL_GUILTY_CONTEXT_RESET_ARB
	GL_GUILTY_CONTEXT_RESET_ARB = 0x8253,
//####GL_INNOCENT_CONTEXT_RESET_ARB
	GL_INNOCENT_CONTEXT_RESET_ARB = 0x8254,
//####GL_UNKNOWN_CONTEXT_RESET_ARB
	GL_UNKNOWN_CONTEXT_RESET_ARB = 0x8255,
//####GL_RESET_NOTIFICATION_STRATEGY_ARB
	GL_RESET_NOTIFICATION_STRATEGY_ARB = 0x8256,
//####GL_NO_RESET_NOTIFICATION_ARB
	GL_NO_RESET_NOTIFICATION_ARB = 0x8261,
//####GL_ARB_separate_shader_objects
	GL_ARB_separate_shader_objects = 0x1,
//####GL_FRAGMENT_SHADER_BIT
	GL_FRAGMENT_SHADER_BIT = 0x00000002,
//####GL_GEOMETRY_SHADER_BIT
	GL_GEOMETRY_SHADER_BIT = 0x00000004,
//####GL_TESS_CONTROL_SHADER_BIT
	GL_TESS_CONTROL_SHADER_BIT = 0x00000008,
//####GL_TESS_EVALUATION_SHADER_BIT
	GL_TESS_EVALUATION_SHADER_BIT = 0x00000010,
//####GL_PROGRAM_SEPARABLE
	GL_PROGRAM_SEPARABLE = 0x8258,
//####GL_ACTIVE_PROGRAM
	GL_ACTIVE_PROGRAM = 0x8259,
//####GL_PROGRAM_PIPELINE_BINDING
	GL_PROGRAM_PIPELINE_BINDING = 0x825A,
//####GL_ALL_SHADER_BITS
	GL_ALL_SHADER_BITS = 0xFFFFFFFF,
//####GL_ARB_vertex_attrib_64bit
	GL_ARB_vertex_attrib_64bit = 0x1,
//####GL_DOUBLE_MAT3
	GL_DOUBLE_MAT3 = 0x8F47,
//####GL_DOUBLE_MAT4
	GL_DOUBLE_MAT4 = 0x8F48,
//####GL_DOUBLE_VEC2
	GL_DOUBLE_VEC2 = 0x8FFC,
//####GL_DOUBLE_VEC3
	GL_DOUBLE_VEC3 = 0x8FFD,
//####GL_DOUBLE_VEC4
	GL_DOUBLE_VEC4 = 0x8FFE,
//####GL_ARB_vertex_blend
	GL_ARB_vertex_blend = 0x1,
//####GL_ACTIVE_VERTEX_UNITS_ARB
	GL_ACTIVE_VERTEX_UNITS_ARB = 0x86A5,
//####GL_WEIGHT_SUM_UNITY_ARB
	GL_WEIGHT_SUM_UNITY_ARB = 0x86A6,
//####GL_VERTEX_BLEND_ARB
	GL_VERTEX_BLEND_ARB = 0x86A7,
//####GL_CURRENT_WEIGHT_ARB
	GL_CURRENT_WEIGHT_ARB = 0x86A8,
//####GL_WEIGHT_ARRAY_TYPE_ARB
	GL_WEIGHT_ARRAY_TYPE_ARB = 0x86A9,
//####GL_WEIGHT_ARRAY_STRIDE_ARB
	GL_WEIGHT_ARRAY_STRIDE_ARB = 0x86AA,
//####GL_WEIGHT_ARRAY_SIZE_ARB
	GL_WEIGHT_ARRAY_SIZE_ARB = 0x86AB,
//####GL_WEIGHT_ARRAY_POINTER_ARB
	GL_WEIGHT_ARRAY_POINTER_ARB = 0x86AC,
//####GL_WEIGHT_ARRAY_ARB
	GL_WEIGHT_ARRAY_ARB = 0x86AD,
//####GL_MODELVIEW0_ARB
	GL_MODELVIEW0_ARB = 0x1700,
//####GL_MODELVIEW1_ARB
	GL_MODELVIEW1_ARB = 0x850A,
//####GL_MODELVIEW2_ARB
	GL_MODELVIEW2_ARB = 0x8722,
//####GL_MODELVIEW3_ARB
	GL_MODELVIEW3_ARB = 0x8723,
//####GL_MODELVIEW4_ARB
	GL_MODELVIEW4_ARB = 0x8724,
//####GL_MODELVIEW5_ARB
	GL_MODELVIEW5_ARB = 0x8725,
//####GL_MODELVIEW6_ARB
	GL_MODELVIEW6_ARB = 0x8726,
//####GL_MODELVIEW7_ARB
	GL_MODELVIEW7_ARB = 0x8727,
//####GL_MODELVIEW8_ARB
	GL_MODELVIEW8_ARB = 0x8728,
//####GL_MODELVIEW9_ARB
	GL_MODELVIEW9_ARB = 0x8729,
//####GL_MODELVIEW10_ARB
	GL_MODELVIEW10_ARB = 0x872A,
//####GL_MODELVIEW11_ARB
	GL_MODELVIEW11_ARB = 0x872B,
//####GL_MODELVIEW12_ARB
	GL_MODELVIEW12_ARB = 0x872C,
//####GL_MODELVIEW13_ARB
	GL_MODELVIEW13_ARB = 0x872D,
//####GL_MODELVIEW14_ARB
	GL_MODELVIEW14_ARB = 0x872E,
//####GL_MODELVIEW15_ARB
	GL_MODELVIEW15_ARB = 0x872F,
//####GL_MODELVIEW16_ARB
	GL_MODELVIEW16_ARB = 0x8730,
//####GL_MODELVIEW17_ARB
	GL_MODELVIEW17_ARB = 0x8731,
//####GL_MODELVIEW18_ARB
	GL_MODELVIEW18_ARB = 0x8732,
//####GL_MODELVIEW19_ARB
	GL_MODELVIEW19_ARB = 0x8733,
//####GL_MODELVIEW20_ARB
	GL_MODELVIEW20_ARB = 0x8734,
//####GL_MODELVIEW21_ARB
	GL_MODELVIEW21_ARB = 0x8735,
//####GL_MODELVIEW22_ARB
	GL_MODELVIEW22_ARB = 0x8736,
//####GL_MODELVIEW23_ARB
	GL_MODELVIEW23_ARB = 0x8737,
//####GL_MODELVIEW24_ARB
	GL_MODELVIEW24_ARB = 0x8738,
//####GL_MODELVIEW25_ARB
	GL_MODELVIEW25_ARB = 0x8739,
//####GL_MODELVIEW26_ARB
	GL_MODELVIEW26_ARB = 0x873A,
//####GL_MODELVIEW27_ARB
	GL_MODELVIEW27_ARB = 0x873B,
//####GL_MODELVIEW28_ARB
	GL_MODELVIEW28_ARB = 0x873C,
//####GL_MODELVIEW29_ARB
	GL_MODELVIEW29_ARB = 0x873D,
//####GL_MODELVIEW30_ARB
	GL_MODELVIEW30_ARB = 0x873E,
//####GL_MODELVIEW31_ARB
	GL_MODELVIEW31_ARB = 0x873F,
//####GL_ATIX_point_sprites
	GL_ATIX_point_sprites = 0x1,
//####GL_TEXTURE_POINT_ONE_COORD_ATIX
	GL_TEXTURE_POINT_ONE_COORD_ATIX = 0x60B1,
//####GL_TEXTURE_POINT_SPRITE_ATIX
	GL_TEXTURE_POINT_SPRITE_ATIX = 0x60B2,
//####GL_POINT_SPRITE_CULL_MODE_ATIX
	GL_POINT_SPRITE_CULL_MODE_ATIX = 0x60B3,
//####GL_POINT_SPRITE_CULL_CENTER_ATIX
	GL_POINT_SPRITE_CULL_CENTER_ATIX = 0x60B4,
//####GL_POINT_SPRITE_CULL_CLIP_ATIX
	GL_POINT_SPRITE_CULL_CLIP_ATIX = 0x60B5,
//####GL_ATIX_texture_env_combine3
	GL_ATIX_texture_env_combine3 = 0x1,
//####GL_MODULATE_SIGNED_ADD_ATIX
	GL_MODULATE_SIGNED_ADD_ATIX = 0x8745,
//####GL_MODULATE_SUBTRACT_ATIX
	GL_MODULATE_SUBTRACT_ATIX = 0x8746,
//####GL_ATIX_texture_env_route
	GL_ATIX_texture_env_route = 0x1,
//####GL_TEXTURE_OUTPUT_RGB_ATIX
	GL_TEXTURE_OUTPUT_RGB_ATIX = 0x8748,
//####GL_TEXTURE_OUTPUT_ALPHA_ATIX
	GL_TEXTURE_OUTPUT_ALPHA_ATIX = 0x8749,
//####GL_ATIX_vertex_shader_output_point_size
	GL_ATIX_vertex_shader_output_point_size = 0x1,
//####GL_ATI_envmap_bumpmap
	GL_ATI_envmap_bumpmap = 0x1,
//####GL_BUMP_ROT_MATRIX_SIZE_ATI
	GL_BUMP_ROT_MATRIX_SIZE_ATI = 0x8776,
//####GL_BUMP_NUM_TEX_UNITS_ATI
	GL_BUMP_NUM_TEX_UNITS_ATI = 0x8777,
//####GL_BUMP_TEX_UNITS_ATI
	GL_BUMP_TEX_UNITS_ATI = 0x8778,
//####GL_DUDV_ATI
	GL_DUDV_ATI = 0x8779,
//####GL_DU8DV8_ATI
	GL_DU8DV8_ATI = 0x877A,
//####GL_BUMP_ENVMAP_ATI
	GL_BUMP_ENVMAP_ATI = 0x877B,
//####GL_BUMP_TARGET_ATI
	GL_BUMP_TARGET_ATI = 0x877C,
//####GL_ATI_map_object_buffer
	GL_ATI_map_object_buffer = 0x1,
//####GL_ATI_pn_triangles
	GL_ATI_pn_triangles = 0x1,
//####GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI
	GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI = 0x87F1,
//####GL_PN_TRIANGLES_POINT_MODE_ATI
	GL_PN_TRIANGLES_POINT_MODE_ATI = 0x87F2,
//####GL_PN_TRIANGLES_NORMAL_MODE_ATI
	GL_PN_TRIANGLES_NORMAL_MODE_ATI = 0x87F3,
//####GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI
	GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI = 0x87F4,
//####GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI
	GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI = 0x87F5,
//####GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI
	GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI = 0x87F6,
//####GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI
	GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI = 0x87F7,
//####GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI
	GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI = 0x87F8,
//####GL_ATI_separate_stencil
	GL_ATI_separate_stencil = 0x1,
//####GL_STENCIL_BACK_FAIL_ATI
	GL_STENCIL_BACK_FAIL_ATI = 0x8801,
//####GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI
	GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI = 0x8802,
//####GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI
	GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI = 0x8803,
//####GL_ATI_shader_texture_lod
	GL_ATI_shader_texture_lod = 0x1,
//####GL_ATI_texture_compression_3dc
	GL_ATI_texture_compression_3dc = 0x1,
//####GL_ATI_vertex_streams
	GL_ATI_vertex_streams = 0x1,
//####GL_VERTEX_SOURCE_ATI
	GL_VERTEX_SOURCE_ATI = 0x876C,
//####GL_VERTEX_STREAM0_ATI
	GL_VERTEX_STREAM0_ATI = 0x876D,
//####GL_VERTEX_STREAM1_ATI
	GL_VERTEX_STREAM1_ATI = 0x876E,
//####GL_VERTEX_STREAM2_ATI
	GL_VERTEX_STREAM2_ATI = 0x876F,
//####GL_VERTEX_STREAM3_ATI
	GL_VERTEX_STREAM3_ATI = 0x8770,
//####GL_VERTEX_STREAM4_ATI
	GL_VERTEX_STREAM4_ATI = 0x8771,
//####GL_VERTEX_STREAM5_ATI
	GL_VERTEX_STREAM5_ATI = 0x8772,
//####GL_VERTEX_STREAM6_ATI
	GL_VERTEX_STREAM6_ATI = 0x8773,
//####GL_VERTEX_STREAM7_ATI
	GL_VERTEX_STREAM7_ATI = 0x8774,
//####GL_EXT_bindable_uniform
	GL_EXT_bindable_uniform = 0x1,
//####GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT
	GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT = 0x8DE3,
//####GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT
	GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT = 0x8DE4,
//####GL_MAX_BINDABLE_UNIFORM_SIZE_EXT
	GL_MAX_BINDABLE_UNIFORM_SIZE_EXT = 0x8DED,
//####GL_UNIFORM_BUFFER_BINDING_EXT
	GL_UNIFORM_BUFFER_BINDING_EXT = 0x8DEF,
//####GL_UNIFORM_BUFFER_EXT
	GL_UNIFORM_BUFFER_EXT = 0x8DEE,
//####GL_EXT_Cg_shader
	GL_EXT_Cg_shader = 0x1,
//####GL_CG_FRAGMENT_SHADER_EXT
	GL_CG_FRAGMENT_SHADER_EXT = 0x890F,
//####GL_EXT_depth_bounds_test
	GL_EXT_depth_bounds_test = 0x1,
//####GL_DEPTH_BOUNDS_EXT
	GL_DEPTH_BOUNDS_EXT = 0x8891,
//####GL_EXT_draw_instanced
	GL_EXT_draw_instanced = 0x1,
//####GL_EXT_draw_range_elements
	GL_EXT_draw_range_elements = 0x1,
//####GL_MAX_ELEMENTS_INDICES_EXT
	GL_MAX_ELEMENTS_INDICES_EXT = 0x80E9,
//####GL_EXT_fog_coord
	GL_EXT_fog_coord = 0x1,
//####GL_FOG_COORDINATE_EXT
	GL_FOG_COORDINATE_EXT = 0x8451,
//####GL_FRAGMENT_DEPTH_EXT
	GL_FRAGMENT_DEPTH_EXT = 0x8452,
//####GL_CURRENT_FOG_COORDINATE_EXT
	GL_CURRENT_FOG_COORDINATE_EXT = 0x8453,
//####GL_FOG_COORDINATE_ARRAY_TYPE_EXT
	GL_FOG_COORDINATE_ARRAY_TYPE_EXT = 0x8454,
//####GL_FOG_COORDINATE_ARRAY_STRIDE_EXT
	GL_FOG_COORDINATE_ARRAY_STRIDE_EXT = 0x8455,
//####GL_FOG_COORDINATE_ARRAY_POINTER_EXT
	GL_FOG_COORDINATE_ARRAY_POINTER_EXT = 0x8456,
//####GL_FOG_COORDINATE_ARRAY_EXT
	GL_FOG_COORDINATE_ARRAY_EXT = 0x8457,
//####GL_EXT_framebuffer_sRGB
	GL_EXT_framebuffer_sRGB = 0x1,
//####GL_FRAMEBUFFER_SRGB_CAPABLE_EXT
	GL_FRAMEBUFFER_SRGB_CAPABLE_EXT = 0x8DBA,
//####GL_EXT_geometry_shader4
	GL_EXT_geometry_shader4 = 0x1,
//####GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT
	GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT = 0x8DDD,
//####GL_MAX_VERTEX_VARYING_COMPONENTS_EXT
	GL_MAX_VERTEX_VARYING_COMPONENTS_EXT = 0x8DDE,
//####GL_MAX_VARYING_COMPONENTS_EXT
	GL_MAX_VARYING_COMPONENTS_EXT = 0x8B4B,
//####GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT
	GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT = 0x8DDF,
//####GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT
	GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT = 0x8DE0,
//####GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT
	GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT = 0x8DE1,
//####GL_GEOMETRY_VERTICES_OUT_EXT
	GL_GEOMETRY_VERTICES_OUT_EXT = 0x8DDA,
//####GL_GEOMETRY_INPUT_TYPE_EXT
	GL_GEOMETRY_INPUT_TYPE_EXT = 0x8DDB,
//####GL_GEOMETRY_OUTPUT_TYPE_EXT
	GL_GEOMETRY_OUTPUT_TYPE_EXT = 0x8DDC,
//####GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT
	GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT = 0x8C29,
//####GL_LINES_ADJACENCY_EXT
	GL_LINES_ADJACENCY_EXT = 0xA,
//####GL_LINE_STRIP_ADJACENCY_EXT
	GL_LINE_STRIP_ADJACENCY_EXT = 0xB,
//####GL_TRIANGLES_ADJACENCY_EXT
	GL_TRIANGLES_ADJACENCY_EXT = 0xC,
//####GL_TRIANGLE_STRIP_ADJACENCY_EXT
	GL_TRIANGLE_STRIP_ADJACENCY_EXT = 0xD,
//####GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT
	GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT = 0x8DA7,
//####GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT
	GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT = 0x8DA8,
//####GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT
	GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT = 0x8DA9,
//####GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT
	GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT = 0x8CD4,
//####GL_PROGRAM_POINT_SIZE_EXT
	GL_PROGRAM_POINT_SIZE_EXT = 0x8642,
//####GL_EXT_gpu_program_parameters
	GL_EXT_gpu_program_parameters = 0x1,
//####GL_EXT_gpu_shader4
	GL_EXT_gpu_shader4 = 0x1,
//####GL_SAMPLER_2D_ARRAY_EXT
	GL_SAMPLER_2D_ARRAY_EXT = 0x8DC1,
//####GL_SAMPLER_BUFFER_EXT
	GL_SAMPLER_BUFFER_EXT = 0x8DC2,
//####GL_SAMPLER_1D_ARRAY_SHADOW_EXT
	GL_SAMPLER_1D_ARRAY_SHADOW_EXT = 0x8DC3,
//####GL_SAMPLER_2D_ARRAY_SHADOW_EXT
	GL_SAMPLER_2D_ARRAY_SHADOW_EXT = 0x8DC4,
//####GL_SAMPLER_CUBE_SHADOW_EXT
	GL_SAMPLER_CUBE_SHADOW_EXT = 0x8DC5,
//####GL_UNSIGNED_INT_VEC2_EXT
	GL_UNSIGNED_INT_VEC2_EXT = 0x8DC6,
//####GL_UNSIGNED_INT_VEC3_EXT
	GL_UNSIGNED_INT_VEC3_EXT = 0x8DC7,
//####GL_UNSIGNED_INT_VEC4_EXT
	GL_UNSIGNED_INT_VEC4_EXT = 0x8DC8,
//####GL_INT_SAMPLER_1D_EXT
	GL_INT_SAMPLER_1D_EXT = 0x8DC9,
//####GL_INT_SAMPLER_2D_EXT
	GL_INT_SAMPLER_2D_EXT = 0x8DCA,
//####GL_INT_SAMPLER_3D_EXT
	GL_INT_SAMPLER_3D_EXT = 0x8DCB,
//####GL_INT_SAMPLER_CUBE_EXT
	GL_INT_SAMPLER_CUBE_EXT = 0x8DCC,
//####GL_INT_SAMPLER_2D_RECT_EXT
	GL_INT_SAMPLER_2D_RECT_EXT = 0x8DCD,
//####GL_INT_SAMPLER_1D_ARRAY_EXT
	GL_INT_SAMPLER_1D_ARRAY_EXT = 0x8DCE,
//####GL_INT_SAMPLER_2D_ARRAY_EXT
	GL_INT_SAMPLER_2D_ARRAY_EXT = 0x8DCF,
//####GL_INT_SAMPLER_BUFFER_EXT
	GL_INT_SAMPLER_BUFFER_EXT = 0x8DD0,
//####GL_UNSIGNED_INT_SAMPLER_1D_EXT
	GL_UNSIGNED_INT_SAMPLER_1D_EXT = 0x8DD1,
//####GL_UNSIGNED_INT_SAMPLER_2D_EXT
	GL_UNSIGNED_INT_SAMPLER_2D_EXT = 0x8DD2,
//####GL_UNSIGNED_INT_SAMPLER_3D_EXT
	GL_UNSIGNED_INT_SAMPLER_3D_EXT = 0x8DD3,
//####GL_UNSIGNED_INT_SAMPLER_CUBE_EXT
	GL_UNSIGNED_INT_SAMPLER_CUBE_EXT = 0x8DD4,
//####GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT
	GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT = 0x8DD5,
//####GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT
	GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT = 0x8DD6,
//####GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT
	GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT = 0x8DD7,
//####GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT
	GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT = 0x8DD8,
//####GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT
	GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT = 0x88FD,
//####GL_EXT_packed_float
	GL_EXT_packed_float = 0x1,
//####GL_UNSIGNED_INT_10F_11F_11F_REV_EXT
	GL_UNSIGNED_INT_10F_11F_11F_REV_EXT = 0x8C3B,
//####GL_RGBA_SIGNED_COMPONENTS_EXT
	GL_RGBA_SIGNED_COMPONENTS_EXT = 0x8C3C,
//####GL_EXT_pixel_buffer_object
	GL_EXT_pixel_buffer_object = 0x1,
//####GL_PIXEL_UNPACK_BUFFER_EXT
	GL_PIXEL_UNPACK_BUFFER_EXT = 0x88EC,
//####GL_PIXEL_PACK_BUFFER_BINDING_EXT
	GL_PIXEL_PACK_BUFFER_BINDING_EXT = 0x88ED,
//####GL_PIXEL_UNPACK_BUFFER_BINDING_EXT
	GL_PIXEL_UNPACK_BUFFER_BINDING_EXT = 0x88EF,
//####GL_EXT_point_parameters
	GL_EXT_point_parameters = 0x1,
//####GL_POINT_SIZE_MAX_EXT
	GL_POINT_SIZE_MAX_EXT = 0x8127,
//####GL_POINT_FADE_THRESHOLD_SIZE_EXT
	GL_POINT_FADE_THRESHOLD_SIZE_EXT = 0x8128,
//####GL_DISTANCE_ATTENUATION_EXT
	GL_DISTANCE_ATTENUATION_EXT = 0x8129,
//####GL_EXT_secondary_color
	GL_EXT_secondary_color = 0x1,
//####GL_CURRENT_SECONDARY_COLOR_EXT
	GL_CURRENT_SECONDARY_COLOR_EXT = 0x8459,
//####GL_SECONDARY_COLOR_ARRAY_SIZE_EXT
	GL_SECONDARY_COLOR_ARRAY_SIZE_EXT = 0x845A,
//####GL_SECONDARY_COLOR_ARRAY_TYPE_EXT
	GL_SECONDARY_COLOR_ARRAY_TYPE_EXT = 0x845B,
//####GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT
	GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT = 0x845C,
//####GL_SECONDARY_COLOR_ARRAY_POINTER_EXT
	GL_SECONDARY_COLOR_ARRAY_POINTER_EXT = 0x845D,
//####GL_SECONDARY_COLOR_ARRAY_EXT
	GL_SECONDARY_COLOR_ARRAY_EXT = 0x845E,
//####GL_EXT_texture_array
	GL_EXT_texture_array = 0x1,
//####GL_PROXY_TEXTURE_1D_ARRAY_EXT
	GL_PROXY_TEXTURE_1D_ARRAY_EXT = 0x8C19,
//####GL_TEXTURE_2D_ARRAY_EXT
	GL_TEXTURE_2D_ARRAY_EXT = 0x8C1A,
//####GL_PROXY_TEXTURE_2D_ARRAY_EXT
	GL_PROXY_TEXTURE_2D_ARRAY_EXT = 0x8C1B,
//####GL_TEXTURE_BINDING_1D_ARRAY_EXT
	GL_TEXTURE_BINDING_1D_ARRAY_EXT = 0x8C1C,
//####GL_TEXTURE_BINDING_2D_ARRAY_EXT
	GL_TEXTURE_BINDING_2D_ARRAY_EXT = 0x8C1D,
//####GL_MAX_ARRAY_TEXTURE_LAYERS_EXT
	GL_MAX_ARRAY_TEXTURE_LAYERS_EXT = 0x88FF,
//####GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT
	GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT = 0x884E,
//####GL_EXT_texture_buffer_object
	GL_EXT_texture_buffer_object = 0x1,
//####GL_MAX_TEXTURE_BUFFER_SIZE_EXT
	GL_MAX_TEXTURE_BUFFER_SIZE_EXT = 0x8C2B,
//####GL_TEXTURE_BINDING_BUFFER_EXT
	GL_TEXTURE_BINDING_BUFFER_EXT = 0x8C2C,
//####GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT
	GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT = 0x8C2D,
//####GL_TEXTURE_BUFFER_FORMAT_EXT
	GL_TEXTURE_BUFFER_FORMAT_EXT = 0x8C2E,
//####GL_EXT_texture_compression_latc
	GL_EXT_texture_compression_latc = 0x1,
//####GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT
	GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT = 0x8C71,
//####GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT
	GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT = 0x8C72,
//####GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT
	GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT = 0x8C73,
//####GL_EXT_texture_compression_rgtc
	GL_EXT_texture_compression_rgtc = 0x1,
//####GL_COMPRESSED_SIGNED_RED_RGTC1_EXT
	GL_COMPRESSED_SIGNED_RED_RGTC1_EXT = 0x8DBC,
//####GL_COMPRESSED_RED_GREEN_RGTC2_EXT
	GL_COMPRESSED_RED_GREEN_RGTC2_EXT = 0x8DBD,
//####GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT
	GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT = 0x8DBE,
//####GL_EXT_texture_cube_map
	GL_EXT_texture_cube_map = 0x1,
//####GL_REFLECTION_MAP_EXT
	GL_REFLECTION_MAP_EXT = 0x8512,
//####GL_TEXTURE_CUBE_MAP_EXT
	GL_TEXTURE_CUBE_MAP_EXT = 0x8513,
//####GL_TEXTURE_BINDING_CUBE_MAP_EXT
	GL_TEXTURE_BINDING_CUBE_MAP_EXT = 0x8514,
//####GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT
	GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT = 0x8515,
//####GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT
	GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT = 0x8516,
//####GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT
	GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT = 0x8517,
//####GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT
	GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT = 0x8518,
//####GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT
	GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT = 0x8519,
//####GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT
	GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT = 0x851A,
//####GL_PROXY_TEXTURE_CUBE_MAP_EXT
	GL_PROXY_TEXTURE_CUBE_MAP_EXT = 0x851B,
//####GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT
	GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT = 0x851C,
//####GL_EXT_texture_edge_clamp
	GL_EXT_texture_edge_clamp = 0x1,
//####GL_EXT_texture_integer
	GL_EXT_texture_integer = 0x1,
//####GL_RGB32UI_EXT
	GL_RGB32UI_EXT = 0x8D71,
//####GL_ALPHA32UI_EXT
	GL_ALPHA32UI_EXT = 0x8D72,
//####GL_INTENSITY32UI_EXT
	GL_INTENSITY32UI_EXT = 0x8D73,
//####GL_LUMINANCE32UI_EXT
	GL_LUMINANCE32UI_EXT = 0x8D74,
//####GL_LUMINANCE_ALPHA32UI_EXT
	GL_LUMINANCE_ALPHA32UI_EXT = 0x8D75,
//####GL_RGBA16UI_EXT
	GL_RGBA16UI_EXT = 0x8D76,
//####GL_RGB16UI_EXT
	GL_RGB16UI_EXT = 0x8D77,
//####GL_ALPHA16UI_EXT
	GL_ALPHA16UI_EXT = 0x8D78,
//####GL_INTENSITY16UI_EXT
	GL_INTENSITY16UI_EXT = 0x8D79,
//####GL_LUMINANCE16UI_EXT
	GL_LUMINANCE16UI_EXT = 0x8D7A,
//####GL_LUMINANCE_ALPHA16UI_EXT
	GL_LUMINANCE_ALPHA16UI_EXT = 0x8D7B,
//####GL_RGBA8UI_EXT
	GL_RGBA8UI_EXT = 0x8D7C,
//####GL_RGB8UI_EXT
	GL_RGB8UI_EXT = 0x8D7D,
//####GL_ALPHA8UI_EXT
	GL_ALPHA8UI_EXT = 0x8D7E,
//####GL_INTENSITY8UI_EXT
	GL_INTENSITY8UI_EXT = 0x8D7F,
//####GL_LUMINANCE8UI_EXT
	GL_LUMINANCE8UI_EXT = 0x8D80,
//####GL_LUMINANCE_ALPHA8UI_EXT
	GL_LUMINANCE_ALPHA8UI_EXT = 0x8D81,
//####GL_RGBA32I_EXT
	GL_RGBA32I_EXT = 0x8D82,
//####GL_RGB32I_EXT
	GL_RGB32I_EXT = 0x8D83,
//####GL_ALPHA32I_EXT
	GL_ALPHA32I_EXT = 0x8D84,
//####GL_INTENSITY32I_EXT
	GL_INTENSITY32I_EXT = 0x8D85,
//####GL_LUMINANCE32I_EXT
	GL_LUMINANCE32I_EXT = 0x8D86,
//####GL_LUMINANCE_ALPHA32I_EXT
	GL_LUMINANCE_ALPHA32I_EXT = 0x8D87,
//####GL_RGBA16I_EXT
	GL_RGBA16I_EXT = 0x8D88,
//####GL_RGB16I_EXT
	GL_RGB16I_EXT = 0x8D89,
//####GL_ALPHA16I_EXT
	GL_ALPHA16I_EXT = 0x8D8A,
//####GL_INTENSITY16I_EXT
	GL_INTENSITY16I_EXT = 0x8D8B,
//####GL_LUMINANCE16I_EXT
	GL_LUMINANCE16I_EXT = 0x8D8C,
//####GL_LUMINANCE_ALPHA16I_EXT
	GL_LUMINANCE_ALPHA16I_EXT = 0x8D8D,
//####GL_RGBA8I_EXT
	GL_RGBA8I_EXT = 0x8D8E,
//####GL_RGB8I_EXT
	GL_RGB8I_EXT = 0x8D8F,
//####GL_ALPHA8I_EXT
	GL_ALPHA8I_EXT = 0x8D90,
//####GL_INTENSITY8I_EXT
	GL_INTENSITY8I_EXT = 0x8D91,
//####GL_LUMINANCE8I_EXT
	GL_LUMINANCE8I_EXT = 0x8D92,
//####GL_LUMINANCE_ALPHA8I_EXT
	GL_LUMINANCE_ALPHA8I_EXT = 0x8D93,
//####GL_RED_INTEGER_EXT
	GL_RED_INTEGER_EXT = 0x8D94,
//####GL_GREEN_INTEGER_EXT
	GL_GREEN_INTEGER_EXT = 0x8D95,
//####GL_BLUE_INTEGER_EXT
	GL_BLUE_INTEGER_EXT = 0x8D96,
//####GL_ALPHA_INTEGER_EXT
	GL_ALPHA_INTEGER_EXT = 0x8D97,
//####GL_RGB_INTEGER_EXT
	GL_RGB_INTEGER_EXT = 0x8D98,
//####GL_RGBA_INTEGER_EXT
	GL_RGBA_INTEGER_EXT = 0x8D99,
//####GL_BGR_INTEGER_EXT
	GL_BGR_INTEGER_EXT = 0x8D9A,
//####GL_BGRA_INTEGER_EXT
	GL_BGRA_INTEGER_EXT = 0x8D9B,
//####GL_LUMINANCE_INTEGER_EXT
	GL_LUMINANCE_INTEGER_EXT = 0x8D9C,
//####GL_LUMINANCE_ALPHA_INTEGER_EXT
	GL_LUMINANCE_ALPHA_INTEGER_EXT = 0x8D9D,
//####GL_RGBA_INTEGER_MODE_EXT
	GL_RGBA_INTEGER_MODE_EXT = 0x8D9E,
//####GL_EXT_texture_rectangle
	GL_EXT_texture_rectangle = 0x1,
//####GL_TEXTURE_BINDING_RECTANGLE_EXT
	GL_TEXTURE_BINDING_RECTANGLE_EXT = 0x84F6,
//####GL_PROXY_TEXTURE_RECTANGLE_EXT
	GL_PROXY_TEXTURE_RECTANGLE_EXT = 0x84F7,
//####GL_MAX_RECTANGLE_TEXTURE_SIZE_EXT
	GL_MAX_RECTANGLE_TEXTURE_SIZE_EXT = 0x84F8,
//####GL_EXT_texture_shared_exponent
	GL_EXT_texture_shared_exponent = 0x1,
//####GL_UNSIGNED_INT_5_9_9_9_REV_EXT
	GL_UNSIGNED_INT_5_9_9_9_REV_EXT = 0x8C3E,
//####GL_TEXTURE_SHARED_SIZE_EXT
	GL_TEXTURE_SHARED_SIZE_EXT = 0x8C3F,
//####GL_EXT_timer_query
	GL_EXT_timer_query = 0x1,
//####GL_EXT_vertex_shader
	GL_EXT_vertex_shader = 0x1,
//####GL_VERTEX_SHADER_BINDING_EXT
	GL_VERTEX_SHADER_BINDING_EXT = 0x8781,
//####GL_OP_INDEX_EXT
	GL_OP_INDEX_EXT = 0x8782,
//####GL_OP_NEGATE_EXT
	GL_OP_NEGATE_EXT = 0x8783,
//####GL_OP_DOT3_EXT
	GL_OP_DOT3_EXT = 0x8784,
//####GL_OP_DOT4_EXT
	GL_OP_DOT4_EXT = 0x8785,
//####GL_OP_MUL_EXT
	GL_OP_MUL_EXT = 0x8786,
//####GL_OP_ADD_EXT
	GL_OP_ADD_EXT = 0x8787,
//####GL_OP_MADD_EXT
	GL_OP_MADD_EXT = 0x8788,
//####GL_OP_FRAC_EXT
	GL_OP_FRAC_EXT = 0x8789,
//####GL_OP_MAX_EXT
	GL_OP_MAX_EXT = 0x878A,
//####GL_OP_MIN_EXT
	GL_OP_MIN_EXT = 0x878B,
//####GL_OP_SET_GE_EXT
	GL_OP_SET_GE_EXT = 0x878C,
//####GL_OP_SET_LT_EXT
	GL_OP_SET_LT_EXT = 0x878D,
//####GL_OP_CLAMP_EXT
	GL_OP_CLAMP_EXT = 0x878E,
//####GL_OP_FLOOR_EXT
	GL_OP_FLOOR_EXT = 0x878F,
//####GL_OP_ROUND_EXT
	GL_OP_ROUND_EXT = 0x8790,
//####GL_OP_EXP_BASE_2_EXT
	GL_OP_EXP_BASE_2_EXT = 0x8791,
//####GL_OP_LOG_BASE_2_EXT
	GL_OP_LOG_BASE_2_EXT = 0x8792,
//####GL_OP_POWER_EXT
	GL_OP_POWER_EXT = 0x8793,
//####GL_OP_RECIP_EXT
	GL_OP_RECIP_EXT = 0x8794,
//####GL_OP_RECIP_SQRT_EXT
	GL_OP_RECIP_SQRT_EXT = 0x8795,
//####GL_OP_SUB_EXT
	GL_OP_SUB_EXT = 0x8796,
//####GL_OP_CROSS_PRODUCT_EXT
	GL_OP_CROSS_PRODUCT_EXT = 0x8797,
//####GL_OP_MULTIPLY_MATRIX_EXT
	GL_OP_MULTIPLY_MATRIX_EXT = 0x8798,
//####GL_OP_MOV_EXT
	GL_OP_MOV_EXT = 0x8799,
//####GL_OUTPUT_VERTEX_EXT
	GL_OUTPUT_VERTEX_EXT = 0x879A,
//####GL_OUTPUT_COLOR0_EXT
	GL_OUTPUT_COLOR0_EXT = 0x879B,
//####GL_OUTPUT_COLOR1_EXT
	GL_OUTPUT_COLOR1_EXT = 0x879C,
//####GL_OUTPUT_TEXTURE_COORD0_EXT
	GL_OUTPUT_TEXTURE_COORD0_EXT = 0x879D,
//####GL_OUTPUT_TEXTURE_COORD1_EXT
	GL_OUTPUT_TEXTURE_COORD1_EXT = 0x879E,
//####GL_OUTPUT_TEXTURE_COORD2_EXT
	GL_OUTPUT_TEXTURE_COORD2_EXT = 0x879F,
//####GL_OUTPUT_TEXTURE_COORD3_EXT
	GL_OUTPUT_TEXTURE_COORD3_EXT = 0x87A0,
//####GL_OUTPUT_TEXTURE_COORD4_EXT
	GL_OUTPUT_TEXTURE_COORD4_EXT = 0x87A1,
//####GL_OUTPUT_TEXTURE_COORD5_EXT
	GL_OUTPUT_TEXTURE_COORD5_EXT = 0x87A2,
//####GL_OUTPUT_TEXTURE_COORD6_EXT
	GL_OUTPUT_TEXTURE_COORD6_EXT = 0x87A3,
//####GL_OUTPUT_TEXTURE_COORD7_EXT
	GL_OUTPUT_TEXTURE_COORD7_EXT = 0x87A4,
//####GL_OUTPUT_TEXTURE_COORD8_EXT
	GL_OUTPUT_TEXTURE_COORD8_EXT = 0x87A5,
//####GL_OUTPUT_TEXTURE_COORD9_EXT
	GL_OUTPUT_TEXTURE_COORD9_EXT = 0x87A6,
//####GL_OUTPUT_TEXTURE_COORD10_EXT
	GL_OUTPUT_TEXTURE_COORD10_EXT = 0x87A7,
//####GL_OUTPUT_TEXTURE_COORD11_EXT
	GL_OUTPUT_TEXTURE_COORD11_EXT = 0x87A8,
//####GL_OUTPUT_TEXTURE_COORD12_EXT
	GL_OUTPUT_TEXTURE_COORD12_EXT = 0x87A9,
//####GL_OUTPUT_TEXTURE_COORD13_EXT
	GL_OUTPUT_TEXTURE_COORD13_EXT = 0x87AA,
//####GL_OUTPUT_TEXTURE_COORD14_EXT
	GL_OUTPUT_TEXTURE_COORD14_EXT = 0x87AB,
//####GL_OUTPUT_TEXTURE_COORD15_EXT
	GL_OUTPUT_TEXTURE_COORD15_EXT = 0x87AC,
//####GL_OUTPUT_TEXTURE_COORD16_EXT
	GL_OUTPUT_TEXTURE_COORD16_EXT = 0x87AD,
//####GL_OUTPUT_TEXTURE_COORD17_EXT
	GL_OUTPUT_TEXTURE_COORD17_EXT = 0x87AE,
//####GL_OUTPUT_TEXTURE_COORD18_EXT
	GL_OUTPUT_TEXTURE_COORD18_EXT = 0x87AF,
//####GL_OUTPUT_TEXTURE_COORD19_EXT
	GL_OUTPUT_TEXTURE_COORD19_EXT = 0x87B0,
//####GL_OUTPUT_TEXTURE_COORD20_EXT
	GL_OUTPUT_TEXTURE_COORD20_EXT = 0x87B1,
//####GL_OUTPUT_TEXTURE_COORD21_EXT
	GL_OUTPUT_TEXTURE_COORD21_EXT = 0x87B2,
//####GL_OUTPUT_TEXTURE_COORD22_EXT
	GL_OUTPUT_TEXTURE_COORD22_EXT = 0x87B3,
//####GL_OUTPUT_TEXTURE_COORD23_EXT
	GL_OUTPUT_TEXTURE_COORD23_EXT = 0x87B4,
//####GL_OUTPUT_TEXTURE_COORD24_EXT
	GL_OUTPUT_TEXTURE_COORD24_EXT = 0x87B5,
//####GL_OUTPUT_TEXTURE_COORD25_EXT
	GL_OUTPUT_TEXTURE_COORD25_EXT = 0x87B6,
//####GL_OUTPUT_TEXTURE_COORD26_EXT
	GL_OUTPUT_TEXTURE_COORD26_EXT = 0x87B7,
//####GL_OUTPUT_TEXTURE_COORD27_EXT
	GL_OUTPUT_TEXTURE_COORD27_EXT = 0x87B8,
//####GL_OUTPUT_TEXTURE_COORD28_EXT
	GL_OUTPUT_TEXTURE_COORD28_EXT = 0x87B9,
//####GL_OUTPUT_TEXTURE_COORD29_EXT
	GL_OUTPUT_TEXTURE_COORD29_EXT = 0x87BA,
//####GL_OUTPUT_TEXTURE_COORD30_EXT
	GL_OUTPUT_TEXTURE_COORD30_EXT = 0x87BB,
//####GL_OUTPUT_TEXTURE_COORD31_EXT
	GL_OUTPUT_TEXTURE_COORD31_EXT = 0x87BC,
//####GL_OUTPUT_FOG_EXT
	GL_OUTPUT_FOG_EXT = 0x87BD,
//####GL_SCALAR_EXT
	GL_SCALAR_EXT = 0x87BE,
//####GL_VECTOR_EXT
	GL_VECTOR_EXT = 0x87BF,
//####GL_MATRIX_EXT
	GL_MATRIX_EXT = 0x87C0,
//####GL_VARIANT_EXT
	GL_VARIANT_EXT = 0x87C1,
//####GL_INVARIANT_EXT
	GL_INVARIANT_EXT = 0x87C2,
//####GL_LOCAL_CONSTANT_EXT
	GL_LOCAL_CONSTANT_EXT = 0x87C3,
//####GL_LOCAL_EXT
	GL_LOCAL_EXT = 0x87C4,
//####GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT
	GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT = 0x87C5,
//####GL_MAX_VERTEX_SHADER_VARIANTS_EXT
	GL_MAX_VERTEX_SHADER_VARIANTS_EXT = 0x87C6,
//####GL_MAX_VERTEX_SHADER_INVARIANTS_EXT
	GL_MAX_VERTEX_SHADER_INVARIANTS_EXT = 0x87C7,
//####GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT
	GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT = 0x87C8,
//####GL_MAX_VERTEX_SHADER_LOCALS_EXT
	GL_MAX_VERTEX_SHADER_LOCALS_EXT = 0x87C9,
//####GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT
	GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT = 0x87CA,
//####GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT
	GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT = 0x87CB,
//####GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT
	GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT = 0x87CC,
//####GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT
	GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT = 0x87CD,
//####GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT
	GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT = 0x87CE,
//####GL_VERTEX_SHADER_INSTRUCTIONS_EXT
	GL_VERTEX_SHADER_INSTRUCTIONS_EXT = 0x87CF,
//####GL_VERTEX_SHADER_VARIANTS_EXT
	GL_VERTEX_SHADER_VARIANTS_EXT = 0x87D0,
//####GL_VERTEX_SHADER_INVARIANTS_EXT
	GL_VERTEX_SHADER_INVARIANTS_EXT = 0x87D1,
//####GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT
	GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT = 0x87D2,
//####GL_VERTEX_SHADER_LOCALS_EXT
	GL_VERTEX_SHADER_LOCALS_EXT = 0x87D3,
//####GL_VERTEX_SHADER_OPTIMIZED_EXT
	GL_VERTEX_SHADER_OPTIMIZED_EXT = 0x87D4,
//####GL_X_EXT
	GL_X_EXT = 0x87D5,
//####GL_Y_EXT
	GL_Y_EXT = 0x87D6,
//####GL_Z_EXT
	GL_Z_EXT = 0x87D7,
//####GL_W_EXT
	GL_W_EXT = 0x87D8,
//####GL_NEGATIVE_X_EXT
	GL_NEGATIVE_X_EXT = 0x87D9,
//####GL_NEGATIVE_Y_EXT
	GL_NEGATIVE_Y_EXT = 0x87DA,
//####GL_NEGATIVE_Z_EXT
	GL_NEGATIVE_Z_EXT = 0x87DB,
//####GL_NEGATIVE_W_EXT
	GL_NEGATIVE_W_EXT = 0x87DC,
//####GL_ZERO_EXT
	GL_ZERO_EXT = 0x87DD,
//####GL_ONE_EXT
	GL_ONE_EXT = 0x87DE,
//####GL_NEGATIVE_ONE_EXT
	GL_NEGATIVE_ONE_EXT = 0x87DF,
//####GL_NORMALIZED_RANGE_EXT
	GL_NORMALIZED_RANGE_EXT = 0x87E0,
//####GL_FULL_RANGE_EXT
	GL_FULL_RANGE_EXT = 0x87E1,
//####GL_CURRENT_VERTEX_EXT
	GL_CURRENT_VERTEX_EXT = 0x87E2,
//####GL_MVP_MATRIX_EXT
	GL_MVP_MATRIX_EXT = 0x87E3,
//####GL_VARIANT_VALUE_EXT
	GL_VARIANT_VALUE_EXT = 0x87E4,
//####GL_VARIANT_DATATYPE_EXT
	GL_VARIANT_DATATYPE_EXT = 0x87E5,
//####GL_VARIANT_ARRAY_STRIDE_EXT
	GL_VARIANT_ARRAY_STRIDE_EXT = 0x87E6,
//####GL_VARIANT_ARRAY_TYPE_EXT
	GL_VARIANT_ARRAY_TYPE_EXT = 0x87E7,
//####GL_VARIANT_ARRAY_EXT
	GL_VARIANT_ARRAY_EXT = 0x87E8,
//####GL_VARIANT_ARRAY_POINTER_EXT
	GL_VARIANT_ARRAY_POINTER_EXT = 0x87E9,
//####GL_INVARIANT_VALUE_EXT
	GL_INVARIANT_VALUE_EXT = 0x87EA,
//####GL_INVARIANT_DATATYPE_EXT
	GL_INVARIANT_DATATYPE_EXT = 0x87EB,
//####GL_LOCAL_CONSTANT_VALUE_EXT
	GL_LOCAL_CONSTANT_VALUE_EXT = 0x87EC,
//####GL_LOCAL_CONSTANT_DATATYPE_EXT
	GL_LOCAL_CONSTANT_DATATYPE_EXT = 0x87ED,
//####GL_KTX_buffer_region
	GL_KTX_buffer_region = 0x1,
//####GL_KTX_BACK_REGION
	GL_KTX_BACK_REGION = 0x1,
//####GL_KTX_Z_REGION
	GL_KTX_Z_REGION = 0x2,
//####GL_KTX_STENCIL_REGION
	GL_KTX_STENCIL_REGION = 0x3,
//####GL_NV_depth_buffer_float
	GL_NV_depth_buffer_float = 0x1,
//####GL_DEPTH32F_STENCIL8_NV
	GL_DEPTH32F_STENCIL8_NV = 0x8DAC,
//####GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV
	GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV = 0x8DAD,
//####GL_DEPTH_BUFFER_FLOAT_MODE_NV
	GL_DEPTH_BUFFER_FLOAT_MODE_NV = 0x8DAF,
//####GL_NV_depth_range_unclamped
	GL_NV_depth_range_unclamped = 0x1,
//####GL_CURRENT_SAMPLE_COUNT_QUERY_NV
	GL_CURRENT_SAMPLE_COUNT_QUERY_NV = 0x8865,
//####GL_QUERY_RESULT_NV
	GL_QUERY_RESULT_NV = 0x8866,
//####GL_QUERY_RESULT_AVAILABLE_NV
	GL_QUERY_RESULT_AVAILABLE_NV = 0x8867,
//####GL_SAMPLE_COUNT_NV
	GL_SAMPLE_COUNT_NV = 0x8914,
//####GL_NV_fragment_program2
	GL_NV_fragment_program2 = 0x1,
//####GL_MAX_PROGRAM_CALL_DEPTH_NV
	GL_MAX_PROGRAM_CALL_DEPTH_NV = 0x88F5,
//####GL_MAX_PROGRAM_IF_DEPTH_NV
	GL_MAX_PROGRAM_IF_DEPTH_NV = 0x88F6,
//####GL_MAX_PROGRAM_LOOP_DEPTH_NV
	GL_MAX_PROGRAM_LOOP_DEPTH_NV = 0x88F7,
//####GL_MAX_PROGRAM_LOOP_COUNT_NV
	GL_MAX_PROGRAM_LOOP_COUNT_NV = 0x88F8,
//####GL_NV_fragment_program4
	GL_NV_fragment_program4 = 0x1,
//####GL_NV_gpu_program4
	GL_NV_gpu_program4 = 0x1,
//####GL_NV_fragment_program_option
	GL_NV_fragment_program_option = 0x1,
//####GL_NV_framebuffer_multisample_coverage
	GL_NV_framebuffer_multisample_coverage = 0x1,
//####GL_RENDERBUFFER_COLOR_SAMPLES_NV
	GL_RENDERBUFFER_COLOR_SAMPLES_NV = 0x8E10,
//####GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV
	GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV = 0x8E11,
//####GL_MULTISAMPLE_COVERAGE_MODES_NV
	GL_MULTISAMPLE_COVERAGE_MODES_NV = 0x8E12,
//####GL_NV_geometry_program4
	GL_NV_geometry_program4 = 0x1,
//####GL_GEOMETRY_PROGRAM_NV
	GL_GEOMETRY_PROGRAM_NV = 0x8C26,
//####GL_MAX_PROGRAM_OUTPUT_VERTICES_NV
	GL_MAX_PROGRAM_OUTPUT_VERTICES_NV = 0x8C27,
//####GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV
	GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV = 0x8C28,
//####GL_NV_geometry_shader4
	GL_NV_geometry_shader4 = 0x1,
//####GL_NV_gpu_program4
	GL_NV_gpu_program4 = 0x1,
//####GL_MAX_PROGRAM_TEXEL_OFFSET_NV
	GL_MAX_PROGRAM_TEXEL_OFFSET_NV = 0x8905,
//####GL_PROGRAM_ATTRIB_COMPONENTS_NV
	GL_PROGRAM_ATTRIB_COMPONENTS_NV = 0x8906,
//####GL_PROGRAM_RESULT_COMPONENTS_NV
	GL_PROGRAM_RESULT_COMPONENTS_NV = 0x8907,
//####GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV
	GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV = 0x8908,
//####GL_MAX_PROGRAM_RESULT_COMPONENTS_NV
	GL_MAX_PROGRAM_RESULT_COMPONENTS_NV = 0x8909,
//####GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV
	GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV = 0x8DA5,
//####GL_MAX_PROGRAM_GENERIC_RESULTS_NV
	GL_MAX_PROGRAM_GENERIC_RESULTS_NV = 0x8DA6,
//####GL_NV_gpu_program5
	GL_NV_gpu_program5 = 0x1,
//####GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_NV
	GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_NV = 0x8E5B,
//####GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_NV
	GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_NV = 0x8E5C,
//####GL_FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV
	GL_FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV = 0x8E5D,
//####GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV
	GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV = 0x8E5E,
//####GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV
	GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV = 0x8E5F,
//####GL_NV_parameter_buffer_object
	GL_NV_parameter_buffer_object = 0x1,
//####GL_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV
	GL_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV = 0x8DA3,
//####GL_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV
	GL_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV = 0x8DA4,
//####GL_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV
	GL_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV = 0x8DA0,
//####GL_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV
	GL_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV = 0x8DA1,
//####GL_NV_present_video
	GL_NV_present_video = 0x1,
//####GL_FIELDS_NV
	GL_FIELDS_NV = 0x8E27,
//####GL_CURRENT_TIME_NV
	GL_CURRENT_TIME_NV = 0x8E28,
//####GL_NUM_FILL_STREAMS_NV
	GL_NUM_FILL_STREAMS_NV = 0x8E29,
//####GL_PRESENT_TIME_NV
	GL_PRESENT_TIME_NV = 0x8E2A,
//####GL_PRESENT_DURATION_NV
	GL_PRESENT_DURATION_NV = 0x8E2B,
//####GL_NV_tessellation_program5
	GL_NV_tessellation_program5 = 0x1,
//####GL_MAX_PROGRAM_PATCH_ATTRIBS_NV
	GL_MAX_PROGRAM_PATCH_ATTRIBS_NV = 0x86D8,
//####GL_TESS_CONTROL_PROGRAM_NV
	GL_TESS_CONTROL_PROGRAM_NV = 0x891E,
//####GL_TESS_EVALUATION_PROGRAM_NV
	GL_TESS_EVALUATION_PROGRAM_NV = 0x891F,
//####GL_TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV
	GL_TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV = 0x8C74,
//####GL_TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV
	GL_TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV = 0x8C75,
//####GL_NV_transform_feedback
	GL_NV_transform_feedback = 0x1,
//####GL_BACK_SECONDARY_COLOR_NV
	GL_BACK_SECONDARY_COLOR_NV = 0x8C78,
//####GL_TEXTURE_COORD_NV
	GL_TEXTURE_COORD_NV = 0x8C79,
//####GL_CLIP_DISTANCE_NV
	GL_CLIP_DISTANCE_NV = 0x8C7A,
//####GL_VERTEX_ID_NV
	GL_VERTEX_ID_NV = 0x8C7B,
//####GL_PRIMITIVE_ID_NV
	GL_PRIMITIVE_ID_NV = 0x8C7C,
//####GL_GENERIC_ATTRIB_NV
	GL_GENERIC_ATTRIB_NV = 0x8C7D,
//####GL_TRANSFORM_FEEDBACK_ATTRIBS_NV
	GL_TRANSFORM_FEEDBACK_ATTRIBS_NV = 0x8C7E,
//####GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV
	GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV = 0x8C7F,
//####GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV
	GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV = 0x8C80,
//####GL_ACTIVE_VARYINGS_NV
	GL_ACTIVE_VARYINGS_NV = 0x8C81,
//####GL_ACTIVE_VARYING_MAX_LENGTH_NV
	GL_ACTIVE_VARYING_MAX_LENGTH_NV = 0x8C82,
//####GL_TRANSFORM_FEEDBACK_VARYINGS_NV
	GL_TRANSFORM_FEEDBACK_VARYINGS_NV = 0x8C83,
//####GL_TRANSFORM_FEEDBACK_BUFFER_START_NV
	GL_TRANSFORM_FEEDBACK_BUFFER_START_NV = 0x8C84,
//####GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV
	GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV = 0x8C85,
//####GL_TRANSFORM_FEEDBACK_RECORD_NV
	GL_TRANSFORM_FEEDBACK_RECORD_NV = 0x8C86,
//####GL_PRIMITIVES_GENERATED_NV
	GL_PRIMITIVES_GENERATED_NV = 0x8C87,
//####GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV
	GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV = 0x8C88,
//####GL_RASTERIZER_DISCARD_NV
	GL_RASTERIZER_DISCARD_NV = 0x8C89,
//####GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV
	GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV = 0x8C8A,
//####GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV
	GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV = 0x8C8B,
//####GL_INTERLEAVED_ATTRIBS_NV
	GL_INTERLEAVED_ATTRIBS_NV = 0x8C8C,
//####GL_SEPARATE_ATTRIBS_NV
	GL_SEPARATE_ATTRIBS_NV = 0x8C8D,
//####GL_TRANSFORM_FEEDBACK_BUFFER_NV
	GL_TRANSFORM_FEEDBACK_BUFFER_NV = 0x8C8E,
//####GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV
	GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV = 0x8C8F,
//####GL_NV_vdpau_interop
	GL_NV_vdpau_interop = 0x1,
//####GL_SURFACE_REGISTERED_NV
	GL_SURFACE_REGISTERED_NV = 0x86FD,
//####GL_SURFACE_MAPPED_NV
	GL_SURFACE_MAPPED_NV = 0x8700,
//####GL_WRITE_DISCARD_NV
	GL_WRITE_DISCARD_NV = 0x88BE,
//####GL_NV_vertex_program2_option
	GL_NV_vertex_program2_option = 0x1,
//####GL_MAX_PROGRAM_CALL_DEPTH_NV
	GL_MAX_PROGRAM_CALL_DEPTH_NV = 0x88F5,
//####GL_NV_vertex_program3
	GL_NV_vertex_program3 = 0x1,
//####GL_NV_vertex_program4
	GL_NV_vertex_program4 = 0x1,
//####GL_VERTEX_ATTRIB_ARRAY_INTEGER_NV
	GL_VERTEX_ATTRIB_ARRAY_INTEGER_NV = 0x88FD,
//####GL_SGIX_shadow
	GL_SGIX_shadow = 0x1,
//####GL_TEXTURE_COMPARE_OPERATOR_SGIX
	GL_TEXTURE_COMPARE_OPERATOR_SGIX = 0x819B,
//####GL_TEXTURE_LEQUAL_R_SGIX
	GL_TEXTURE_LEQUAL_R_SGIX = 0x819C,
//####GL_TEXTURE_GEQUAL_R_SGIX
	GL_TEXTURE_GEQUAL_R_SGIX = 0x819D,
//####GL_SUN_read_video_pixels
	GL_SUN_read_video_pixels = 0x1,
//####GL_VERSION_1_2
	GL_VERSION_1_2 = 0x1,
//####GL_UNSIGNED_SHORT_4_4_4_4
	GL_UNSIGNED_SHORT_4_4_4_4 = 0x8033,
//####GL_UNSIGNED_SHORT_5_5_5_1
	GL_UNSIGNED_SHORT_5_5_5_1 = 0x8034,
//####GL_UNSIGNED_INT_8_8_8_8
	GL_UNSIGNED_INT_8_8_8_8 = 0x8035,
//####GL_UNSIGNED_INT_10_10_10_2
	GL_UNSIGNED_INT_10_10_10_2 = 0x8036,
//####GL_RESCALE_NORMAL
	GL_RESCALE_NORMAL = 0x803A,
//####GL_UNSIGNED_BYTE_2_3_3_REV
	GL_UNSIGNED_BYTE_2_3_3_REV = 0x8362,
//####GL_UNSIGNED_SHORT_5_6_5
	GL_UNSIGNED_SHORT_5_6_5 = 0x8363,
//####GL_UNSIGNED_SHORT_5_6_5_REV
	GL_UNSIGNED_SHORT_5_6_5_REV = 0x8364,
//####GL_UNSIGNED_SHORT_4_4_4_4_REV
	GL_UNSIGNED_SHORT_4_4_4_4_REV = 0x8365,
//####GL_UNSIGNED_SHORT_1_5_5_5_REV
	GL_UNSIGNED_SHORT_1_5_5_5_REV = 0x8366,
//####GL_UNSIGNED_INT_8_8_8_8_REV
	GL_UNSIGNED_INT_8_8_8_8_REV = 0x8367,
//####GL_UNSIGNED_INT_2_10_10_10_REV
	GL_UNSIGNED_INT_2_10_10_10_REV = 0x8368,
//####GL_BGR
	GL_BGR = 0x80E0,
//####GL_BGRA
	GL_BGRA = 0x80E1,
//####GL_MAX_ELEMENTS_VERTICES
	GL_MAX_ELEMENTS_VERTICES = 0x80E8,
//####GL_MAX_ELEMENTS_INDICES
	GL_MAX_ELEMENTS_INDICES = 0x80E9,
//####GL_CLAMP_TO_EDGE
	GL_CLAMP_TO_EDGE = 0x812F,
//####GL_TEXTURE_MIN_LOD
	GL_TEXTURE_MIN_LOD = 0x813A,
//####GL_TEXTURE_MAX_LOD
	GL_TEXTURE_MAX_LOD = 0x813B,
//####GL_TEXTURE_BASE_LEVEL
	GL_TEXTURE_BASE_LEVEL = 0x813C,
//####GL_TEXTURE_MAX_LEVEL
	GL_TEXTURE_MAX_LEVEL = 0x813D,
//####GL_LIGHT_MODEL_COLOR_CONTROL
	GL_LIGHT_MODEL_COLOR_CONTROL = 0x81F8,
//####GL_SINGLE_COLOR
	GL_SINGLE_COLOR = 0x81F9,
//####GL_SEPARATE_SPECULAR_COLOR
	GL_SEPARATE_SPECULAR_COLOR = 0x81FA,
//####GL_SMOOTH_POINT_SIZE_RANGE
	GL_SMOOTH_POINT_SIZE_RANGE = 0x0B12,
//####GL_SMOOTH_POINT_SIZE_GRANULARITY
	GL_SMOOTH_POINT_SIZE_GRANULARITY = 0x0B13,
//####GL_SMOOTH_LINE_WIDTH_RANGE
	GL_SMOOTH_LINE_WIDTH_RANGE = 0x0B22,
//####GL_SMOOTH_LINE_WIDTH_GRANULARITY
	GL_SMOOTH_LINE_WIDTH_GRANULARITY = 0x0B23,
//####GL_ALIASED_POINT_SIZE_RANGE
	GL_ALIASED_POINT_SIZE_RANGE = 0x846D,
//####GL_ALIASED_LINE_WIDTH_RANGE
	GL_ALIASED_LINE_WIDTH_RANGE = 0x846E,
//####GL_PACK_SKIP_IMAGES
	GL_PACK_SKIP_IMAGES = 0x806B,
//####GL_PACK_IMAGE_HEIGHT
	GL_PACK_IMAGE_HEIGHT = 0x806C,
//####GL_UNPACK_SKIP_IMAGES
	GL_UNPACK_SKIP_IMAGES = 0x806D,
//####GL_UNPACK_IMAGE_HEIGHT
	GL_UNPACK_IMAGE_HEIGHT = 0x806E,
//####GL_TEXTURE_3D
	GL_TEXTURE_3D = 0x806F,
//####GL_PROXY_TEXTURE_3D
	GL_PROXY_TEXTURE_3D = 0x8070,
//####GL_TEXTURE_DEPTH
	GL_TEXTURE_DEPTH = 0x8071,
//####GL_TEXTURE_WRAP_R
	GL_TEXTURE_WRAP_R = 0x8072,
//####GL_MAX_3D_TEXTURE_SIZE
	GL_MAX_3D_TEXTURE_SIZE = 0x8073,
//####GL_TEXTURE_BINDING_3D
	GL_TEXTURE_BINDING_3D = 0x806A,
//####GL_VERSION_1_3
	GL_VERSION_1_3 = 0x1,
//####GL_TEXTURE1
	GL_TEXTURE1 = 0x84C1,
//####GL_TEXTURE2
	GL_TEXTURE2 = 0x84C2,
//####GL_TEXTURE3
	GL_TEXTURE3 = 0x84C3,
//####GL_TEXTURE4
	GL_TEXTURE4 = 0x84C4,
//####GL_TEXTURE5
	GL_TEXTURE5 = 0x84C5,
//####GL_TEXTURE6
	GL_TEXTURE6 = 0x84C6,
//####GL_TEXTURE7
	GL_TEXTURE7 = 0x84C7,
//####GL_TEXTURE8
	GL_TEXTURE8 = 0x84C8,
//####GL_TEXTURE9
	GL_TEXTURE9 = 0x84C9,
//####GL_TEXTURE10
	GL_TEXTURE10 = 0x84CA,
//####GL_TEXTURE11
	GL_TEXTURE11 = 0x84CB,
//####GL_TEXTURE12
	GL_TEXTURE12 = 0x84CC,
//####GL_TEXTURE13
	GL_TEXTURE13 = 0x84CD,
//####GL_TEXTURE14
	GL_TEXTURE14 = 0x84CE,
//####GL_TEXTURE15
	GL_TEXTURE15 = 0x84CF,
//####GL_TEXTURE16
	GL_TEXTURE16 = 0x84D0,
//####GL_TEXTURE17
	GL_TEXTURE17 = 0x84D1,
//####GL_TEXTURE18
	GL_TEXTURE18 = 0x84D2,
//####GL_TEXTURE19
	GL_TEXTURE19 = 0x84D3,
//####GL_TEXTURE20
	GL_TEXTURE20 = 0x84D4,
//####GL_TEXTURE21
	GL_TEXTURE21 = 0x84D5,
//####GL_TEXTURE22
	GL_TEXTURE22 = 0x84D6,
//####GL_TEXTURE23
	GL_TEXTURE23 = 0x84D7,
//####GL_TEXTURE24
	GL_TEXTURE24 = 0x84D8,
//####GL_TEXTURE25
	GL_TEXTURE25 = 0x84D9,
//####GL_TEXTURE26
	GL_TEXTURE26 = 0x84DA,
//####GL_TEXTURE27
	GL_TEXTURE27 = 0x84DB,
//####GL_TEXTURE28
	GL_TEXTURE28 = 0x84DC,
//####GL_TEXTURE29
	GL_TEXTURE29 = 0x84DD,
//####GL_TEXTURE30
	GL_TEXTURE30 = 0x84DE,
//####GL_TEXTURE31
	GL_TEXTURE31 = 0x84DF,
//####GL_ACTIVE_TEXTURE
	GL_ACTIVE_TEXTURE = 0x84E0,
//####GL_CLIENT_ACTIVE_TEXTURE
	GL_CLIENT_ACTIVE_TEXTURE = 0x84E1,
//####GL_MAX_TEXTURE_UNITS
	GL_MAX_TEXTURE_UNITS = 0x84E2,
//####GL_NORMAL_MAP
	GL_NORMAL_MAP = 0x8511,
//####GL_REFLECTION_MAP
	GL_REFLECTION_MAP = 0x8512,
//####GL_TEXTURE_CUBE_MAP
	GL_TEXTURE_CUBE_MAP = 0x8513,
//####GL_TEXTURE_BINDING_CUBE_MAP
	GL_TEXTURE_BINDING_CUBE_MAP = 0x8514,
//####GL_TEXTURE_CUBE_MAP_POSITIVE_X
	GL_TEXTURE_CUBE_MAP_POSITIVE_X = 0x8515,
//####GL_TEXTURE_CUBE_MAP_NEGATIVE_X
	GL_TEXTURE_CUBE_MAP_NEGATIVE_X = 0x8516,
//####GL_TEXTURE_CUBE_MAP_POSITIVE_Y
	GL_TEXTURE_CUBE_MAP_POSITIVE_Y = 0x8517,
//####GL_TEXTURE_CUBE_MAP_NEGATIVE_Y
	GL_TEXTURE_CUBE_MAP_NEGATIVE_Y = 0x8518,
//####GL_TEXTURE_CUBE_MAP_POSITIVE_Z
	GL_TEXTURE_CUBE_MAP_POSITIVE_Z = 0x8519,
//####GL_TEXTURE_CUBE_MAP_NEGATIVE_Z
	GL_TEXTURE_CUBE_MAP_NEGATIVE_Z = 0x851A,
//####GL_PROXY_TEXTURE_CUBE_MAP
	GL_PROXY_TEXTURE_CUBE_MAP = 0x851B,
//####GL_MAX_CUBE_MAP_TEXTURE_SIZE
	GL_MAX_CUBE_MAP_TEXTURE_SIZE = 0x851C,
//####GL_COMPRESSED_ALPHA
	GL_COMPRESSED_ALPHA = 0x84E9,
//####GL_COMPRESSED_LUMINANCE
	GL_COMPRESSED_LUMINANCE = 0x84EA,
//####GL_COMPRESSED_LUMINANCE_ALPHA
	GL_COMPRESSED_LUMINANCE_ALPHA = 0x84EB,
//####GL_COMPRESSED_INTENSITY
	GL_COMPRESSED_INTENSITY = 0x84EC,
//####GL_COMPRESSED_RGB
	GL_COMPRESSED_RGB = 0x84ED,
//####GL_COMPRESSED_RGBA
	GL_COMPRESSED_RGBA = 0x84EE,
//####GL_TEXTURE_COMPRESSION_HINT
	GL_TEXTURE_COMPRESSION_HINT = 0x84EF,
//####GL_TEXTURE_COMPRESSED_IMAGE_SIZE
	GL_TEXTURE_COMPRESSED_IMAGE_SIZE = 0x86A0,
//####GL_TEXTURE_COMPRESSED
	GL_TEXTURE_COMPRESSED = 0x86A1,
//####GL_NUM_COMPRESSED_TEXTURE_FORMATS
	GL_NUM_COMPRESSED_TEXTURE_FORMATS = 0x86A2,
//####GL_COMPRESSED_TEXTURE_FORMATS
	GL_COMPRESSED_TEXTURE_FORMATS = 0x86A3,
//####GL_MULTISAMPLE
	GL_MULTISAMPLE = 0x809D,
//####GL_SAMPLE_ALPHA_TO_COVERAGE
	GL_SAMPLE_ALPHA_TO_COVERAGE = 0x809E,
//####GL_SAMPLE_ALPHA_TO_ONE
	GL_SAMPLE_ALPHA_TO_ONE = 0x809F,
//####GL_SAMPLE_COVERAGE
	GL_SAMPLE_COVERAGE = 0x80A0,
//####GL_SAMPLE_BUFFERS
	GL_SAMPLE_BUFFERS = 0x80A8,
//####GL_SAMPLES
	GL_SAMPLES = 0x80A9,
//####GL_SAMPLE_COVERAGE_VALUE
	GL_SAMPLE_COVERAGE_VALUE = 0x80AA,
//####GL_SAMPLE_COVERAGE_INVERT
	GL_SAMPLE_COVERAGE_INVERT = 0x80AB,
//####GL_MULTISAMPLE_BIT
	GL_MULTISAMPLE_BIT = 0x20000000,
//####GL_TRANSPOSE_MODELVIEW_MATRIX
	GL_TRANSPOSE_MODELVIEW_MATRIX = 0x84E3,
//####GL_TRANSPOSE_PROJECTION_MATRIX
	GL_TRANSPOSE_PROJECTION_MATRIX = 0x84E4,
//####GL_TRANSPOSE_TEXTURE_MATRIX
	GL_TRANSPOSE_TEXTURE_MATRIX = 0x84E5,
//####GL_TRANSPOSE_COLOR_MATRIX
	GL_TRANSPOSE_COLOR_MATRIX = 0x84E6,
//####GL_COMBINE
	GL_COMBINE = 0x8570,
//####GL_COMBINE_RGB
	GL_COMBINE_RGB = 0x8571,
//####GL_COMBINE_ALPHA
	GL_COMBINE_ALPHA = 0x8572,
//####GL_SOURCE0_RGB
	GL_SOURCE0_RGB = 0x8580,
//####GL_SOURCE1_RGB
	GL_SOURCE1_RGB = 0x8581,
//####GL_SOURCE2_RGB
	GL_SOURCE2_RGB = 0x8582,
//####GL_SOURCE0_ALPHA
	GL_SOURCE0_ALPHA = 0x8588,
//####GL_SOURCE1_ALPHA
	GL_SOURCE1_ALPHA = 0x8589,
//####GL_SOURCE2_ALPHA
	GL_SOURCE2_ALPHA = 0x858A,
//####GL_OPERAND0_RGB
	GL_OPERAND0_RGB = 0x8590,
//####GL_OPERAND1_RGB
	GL_OPERAND1_RGB = 0x8591,
//####GL_OPERAND2_RGB
	GL_OPERAND2_RGB = 0x8592,
//####GL_OPERAND0_ALPHA
	GL_OPERAND0_ALPHA = 0x8598,
//####GL_OPERAND1_ALPHA
	GL_OPERAND1_ALPHA = 0x8599,
//####GL_OPERAND2_ALPHA
	GL_OPERAND2_ALPHA = 0x859A,
//####GL_RGB_SCALE
	GL_RGB_SCALE = 0x8573,
//####GL_ADD_SIGNED
	GL_ADD_SIGNED = 0x8574,
//####GL_INTERPOLATE
	GL_INTERPOLATE = 0x8575,
//####GL_SUBTRACT
	GL_SUBTRACT = 0x84E7,
//####GL_CONSTANT
	GL_CONSTANT = 0x8576,
//####GL_PRIMARY_COLOR
	GL_PRIMARY_COLOR = 0x8577,
//####GL_PREVIOUS
	GL_PREVIOUS = 0x8578,
//####GL_DOT3_RGB
	GL_DOT3_RGB = 0x86AE,
//####GL_DOT3_RGBA
	GL_DOT3_RGBA = 0x86AF,
//####GL_CLAMP_TO_BORDER
	GL_CLAMP_TO_BORDER = 0x812D,
//####GL_VERSION_1_4
	GL_VERSION_1_4 = 0x1,
//####GL_GENERATE_MIPMAP_HINT
	GL_GENERATE_MIPMAP_HINT = 0x8192,
//####GL_DEPTH_COMPONENT16
	GL_DEPTH_COMPONENT16 = 0x81A5,
//####GL_DEPTH_COMPONENT24
	GL_DEPTH_COMPONENT24 = 0x81A6,
//####GL_DEPTH_COMPONENT32
	GL_DEPTH_COMPONENT32 = 0x81A7,
//####GL_TEXTURE_DEPTH_SIZE
	GL_TEXTURE_DEPTH_SIZE = 0x884A,
//####GL_DEPTH_TEXTURE_MODE
	GL_DEPTH_TEXTURE_MODE = 0x884B,
//####GL_TEXTURE_COMPARE_MODE
	GL_TEXTURE_COMPARE_MODE = 0x884C,
//####GL_TEXTURE_COMPARE_FUNC
	GL_TEXTURE_COMPARE_FUNC = 0x884D,
//####GL_COMPARE_R_TO_TEXTURE
	GL_COMPARE_R_TO_TEXTURE = 0x884E,
//####GL_FOG_COORDINATE_SOURCE
	GL_FOG_COORDINATE_SOURCE = 0x8450,
//####GL_FOG_COORDINATE
	GL_FOG_COORDINATE = 0x8451,
//####GL_FRAGMENT_DEPTH
	GL_FRAGMENT_DEPTH = 0x8452,
//####GL_CURRENT_FOG_COORDINATE
	GL_CURRENT_FOG_COORDINATE = 0x8453,
//####GL_FOG_COORDINATE_ARRAY_TYPE
	GL_FOG_COORDINATE_ARRAY_TYPE = 0x8454,
//####GL_FOG_COORDINATE_ARRAY_STRIDE
	GL_FOG_COORDINATE_ARRAY_STRIDE = 0x8455,
//####GL_FOG_COORDINATE_ARRAY_POINTER
	GL_FOG_COORDINATE_ARRAY_POINTER = 0x8456,
//####GL_FOG_COORDINATE_ARRAY
	GL_FOG_COORDINATE_ARRAY = 0x8457,
//####GL_POINT_SIZE_MIN
	GL_POINT_SIZE_MIN = 0x8126,
//####GL_POINT_SIZE_MAX
	GL_POINT_SIZE_MAX = 0x8127,
//####GL_POINT_FADE_THRESHOLD_SIZE
	GL_POINT_FADE_THRESHOLD_SIZE = 0x8128,
//####GL_POINT_DISTANCE_ATTENUATION
	GL_POINT_DISTANCE_ATTENUATION = 0x8129,
//####GL_COLOR_SUM
	GL_COLOR_SUM = 0x8458,
//####GL_CURRENT_SECONDARY_COLOR
	GL_CURRENT_SECONDARY_COLOR = 0x8459,
//####GL_SECONDARY_COLOR_ARRAY_SIZE
	GL_SECONDARY_COLOR_ARRAY_SIZE = 0x845A,
//####GL_SECONDARY_COLOR_ARRAY_TYPE
	GL_SECONDARY_COLOR_ARRAY_TYPE = 0x845B,
//####GL_SECONDARY_COLOR_ARRAY_STRIDE
	GL_SECONDARY_COLOR_ARRAY_STRIDE = 0x845C,
//####GL_SECONDARY_COLOR_ARRAY_POINTER
	GL_SECONDARY_COLOR_ARRAY_POINTER = 0x845D,
//####GL_SECONDARY_COLOR_ARRAY
	GL_SECONDARY_COLOR_ARRAY = 0x845E,
//####GL_BLEND_DST_RGB
	GL_BLEND_DST_RGB = 0x80C8,
//####GL_BLEND_SRC_RGB
	GL_BLEND_SRC_RGB = 0x80C9,
//####GL_BLEND_DST_ALPHA
	GL_BLEND_DST_ALPHA = 0x80CA,
//####GL_BLEND_SRC_ALPHA
	GL_BLEND_SRC_ALPHA = 0x80CB,
//####GL_INCR_WRAP
	GL_INCR_WRAP = 0x8507,
//####GL_DECR_WRAP
	GL_DECR_WRAP = 0x8508,
//####GL_TEXTURE_FILTER_CONTROL
	GL_TEXTURE_FILTER_CONTROL = 0x8500,
//####GL_TEXTURE_LOD_BIAS
	GL_TEXTURE_LOD_BIAS = 0x8501,
//####GL_MAX_TEXTURE_LOD_BIAS
	GL_MAX_TEXTURE_LOD_BIAS = 0x84FD,
//####GL_MIRRORED_REPEAT
	GL_MIRRORED_REPEAT = 0x8370,
//####GL_VERSION_1_5
	GL_VERSION_1_5 = 0x1,
//####GL_BUFFER_USAGE
	GL_BUFFER_USAGE = 0x8765,
//####GL_QUERY_COUNTER_BITS
	GL_QUERY_COUNTER_BITS = 0x8864,
//####GL_CURRENT_QUERY
	GL_CURRENT_QUERY = 0x8865,
//####GL_QUERY_RESULT
	GL_QUERY_RESULT = 0x8866,
//####GL_QUERY_RESULT_AVAILABLE
	GL_QUERY_RESULT_AVAILABLE = 0x8867,
//####GL_ARRAY_BUFFER
	GL_ARRAY_BUFFER = 0x8892,
//####GL_ELEMENT_ARRAY_BUFFER
	GL_ELEMENT_ARRAY_BUFFER = 0x8893,
//####GL_ARRAY_BUFFER_BINDING
	GL_ARRAY_BUFFER_BINDING = 0x8894,
//####GL_ELEMENT_ARRAY_BUFFER_BINDING
	GL_ELEMENT_ARRAY_BUFFER_BINDING = 0x8895,
//####GL_VERTEX_ARRAY_BUFFER_BINDING
	GL_VERTEX_ARRAY_BUFFER_BINDING = 0x8896,
//####GL_NORMAL_ARRAY_BUFFER_BINDING
	GL_NORMAL_ARRAY_BUFFER_BINDING = 0x8897,
//####GL_COLOR_ARRAY_BUFFER_BINDING
	GL_COLOR_ARRAY_BUFFER_BINDING = 0x8898,
//####GL_INDEX_ARRAY_BUFFER_BINDING
	GL_INDEX_ARRAY_BUFFER_BINDING = 0x8899,
//####GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING
	GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING = 0x889A,
//####GL_EDGE_FLAG_ARRAY_BUFFER_BINDING
	GL_EDGE_FLAG_ARRAY_BUFFER_BINDING = 0x889B,
//####GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING
	GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING = 0x889C,
//####GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING
	GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING = 0x889D,
//####GL_WEIGHT_ARRAY_BUFFER_BINDING
	GL_WEIGHT_ARRAY_BUFFER_BINDING = 0x889E,
//####GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING
	GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 0x889F,
//####GL_READ_ONLY
	GL_READ_ONLY = 0x88B8,
//####GL_WRITE_ONLY
	GL_WRITE_ONLY = 0x88B9,
//####GL_READ_WRITE
	GL_READ_WRITE = 0x88BA,
//####GL_BUFFER_ACCESS
	GL_BUFFER_ACCESS = 0x88BB,
//####GL_BUFFER_MAPPED
	GL_BUFFER_MAPPED = 0x88BC,
//####GL_BUFFER_MAP_POINTER
	GL_BUFFER_MAP_POINTER = 0x88BD,
//####GL_STREAM_DRAW
	GL_STREAM_DRAW = 0x88E0,
//####GL_STREAM_READ
	GL_STREAM_READ = 0x88E1,
//####GL_STREAM_COPY
	GL_STREAM_COPY = 0x88E2,
//####GL_STATIC_DRAW
	GL_STATIC_DRAW = 0x88E4,
//####GL_STATIC_READ
	GL_STATIC_READ = 0x88E5,
//####GL_STATIC_COPY
	GL_STATIC_COPY = 0x88E6,
//####GL_DYNAMIC_DRAW
	GL_DYNAMIC_DRAW = 0x88E8,
//####GL_DYNAMIC_READ
	GL_DYNAMIC_READ = 0x88E9,
//####GL_DYNAMIC_COPY
	GL_DYNAMIC_COPY = 0x88EA,
//####GL_SAMPLES_PASSED
	GL_SAMPLES_PASSED = 0x8914,
//####GL_FOG_COORD_SRC
	GL_FOG_COORD_SRC = 0x1,
//####GL_FOG_COORD
	GL_FOG_COORD = 0x1,
//####GL_CURRENT_FOG_COORD
	GL_CURRENT_FOG_COORD = 0x1,
//####GL_FOG_COORD_ARRAY_TYPE
	GL_FOG_COORD_ARRAY_TYPE = 0x1,
//####GL_FOG_COORD_ARRAY_STRIDE
	GL_FOG_COORD_ARRAY_STRIDE = 0x1,
//####GL_FOG_COORD_ARRAY_POINTER
	GL_FOG_COORD_ARRAY_POINTER = 0x1,
//####GL_FOG_COORD_ARRAY
	GL_FOG_COORD_ARRAY = 0x1,
//####GL_FOG_COORD_ARRAY_BUFFER_BINDING
	GL_FOG_COORD_ARRAY_BUFFER_BINDING = 0x1,
//####GL_SRC0_RGB
	GL_SRC0_RGB = 0x1,
//####GL_SRC1_RGB
	GL_SRC1_RGB = 0x1,
//####GL_SRC2_RGB
	GL_SRC2_RGB = 0x1,
//####GL_SRC0_ALPHA
	GL_SRC0_ALPHA = 0x1,
//####GL_SRC1_ALPHA
	GL_SRC1_ALPHA = 0x1,
//####GL_SRC2_ALPHA
	GL_SRC2_ALPHA = 0x1,
//####GL_VERSION_2_0
	GL_VERSION_2_0 = 0x1,
//####GL_BLEND_EQUATION
	GL_BLEND_EQUATION = 0x1,
//####GL_VERTEX_ATTRIB_ARRAY_SIZE
	GL_VERTEX_ATTRIB_ARRAY_SIZE = 0x8623,
//####GL_VERTEX_ATTRIB_ARRAY_STRIDE
	GL_VERTEX_ATTRIB_ARRAY_STRIDE = 0x8624,
//####GL_VERTEX_ATTRIB_ARRAY_TYPE
	GL_VERTEX_ATTRIB_ARRAY_TYPE = 0x8625,
//####GL_CURRENT_VERTEX_ATTRIB
	GL_CURRENT_VERTEX_ATTRIB = 0x8626,
//####GL_VERTEX_PROGRAM_POINT_SIZE
	GL_VERTEX_PROGRAM_POINT_SIZE = 0x8642,
//####GL_VERTEX_PROGRAM_TWO_SIDE
	GL_VERTEX_PROGRAM_TWO_SIDE = 0x8643,
//####GL_VERTEX_ATTRIB_ARRAY_POINTER
	GL_VERTEX_ATTRIB_ARRAY_POINTER = 0x8645,
//####GL_STENCIL_BACK_FUNC
	GL_STENCIL_BACK_FUNC = 0x8800,
//####GL_STENCIL_BACK_FAIL
	GL_STENCIL_BACK_FAIL = 0x8801,
//####GL_STENCIL_BACK_PASS_DEPTH_FAIL
	GL_STENCIL_BACK_PASS_DEPTH_FAIL = 0x8802,
//####GL_STENCIL_BACK_PASS_DEPTH_PASS
	GL_STENCIL_BACK_PASS_DEPTH_PASS = 0x8803,
//####GL_MAX_DRAW_BUFFERS
	GL_MAX_DRAW_BUFFERS = 0x8824,
//####GL_DRAW_BUFFER0
	GL_DRAW_BUFFER0 = 0x8825,
//####GL_DRAW_BUFFER1
	GL_DRAW_BUFFER1 = 0x8826,
//####GL_DRAW_BUFFER2
	GL_DRAW_BUFFER2 = 0x8827,
//####GL_DRAW_BUFFER3
	GL_DRAW_BUFFER3 = 0x8828,
//####GL_DRAW_BUFFER4
	GL_DRAW_BUFFER4 = 0x8829,
//####GL_DRAW_BUFFER5
	GL_DRAW_BUFFER5 = 0x882A,
//####GL_DRAW_BUFFER6
	GL_DRAW_BUFFER6 = 0x882B,
//####GL_DRAW_BUFFER7
	GL_DRAW_BUFFER7 = 0x882C,
//####GL_DRAW_BUFFER8
	GL_DRAW_BUFFER8 = 0x882D,
//####GL_DRAW_BUFFER9
	GL_DRAW_BUFFER9 = 0x882E,
//####GL_DRAW_BUFFER10
	GL_DRAW_BUFFER10 = 0x882F,
//####GL_DRAW_BUFFER11
	GL_DRAW_BUFFER11 = 0x8830,
//####GL_DRAW_BUFFER12
	GL_DRAW_BUFFER12 = 0x8831,
//####GL_DRAW_BUFFER13
	GL_DRAW_BUFFER13 = 0x8832,
//####GL_DRAW_BUFFER14
	GL_DRAW_BUFFER14 = 0x8833,
//####GL_DRAW_BUFFER15
	GL_DRAW_BUFFER15 = 0x8834,
//####GL_BLEND_EQUATION_ALPHA
	GL_BLEND_EQUATION_ALPHA = 0x883D,
//####GL_POINT_SPRITE
	GL_POINT_SPRITE = 0x8861,
//####GL_COORD_REPLACE
	GL_COORD_REPLACE = 0x8862,
//####GL_MAX_VERTEX_ATTRIBS
	GL_MAX_VERTEX_ATTRIBS = 0x8869,
//####GL_VERTEX_ATTRIB_ARRAY_NORMALIZED
	GL_VERTEX_ATTRIB_ARRAY_NORMALIZED = 0x886A,
//####GL_MAX_TEXTURE_COORDS
	GL_MAX_TEXTURE_COORDS = 0x8871,
//####GL_MAX_TEXTURE_IMAGE_UNITS
	GL_MAX_TEXTURE_IMAGE_UNITS = 0x8872,
//####GL_FRAGMENT_SHADER
	GL_FRAGMENT_SHADER = 0x8B30,
//####GL_VERTEX_SHADER
	GL_VERTEX_SHADER = 0x8B31,
//####GL_MAX_FRAGMENT_UNIFORM_COMPONENTS
	GL_MAX_FRAGMENT_UNIFORM_COMPONENTS = 0x8B49,
//####GL_MAX_VERTEX_UNIFORM_COMPONENTS
	GL_MAX_VERTEX_UNIFORM_COMPONENTS = 0x8B4A,
//####GL_MAX_VARYING_FLOATS
	GL_MAX_VARYING_FLOATS = 0x8B4B,
//####GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS
	GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS = 0x8B4C,
//####GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS
	GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS = 0x8B4D,
//####GL_SHADER_TYPE
	GL_SHADER_TYPE = 0x8B4F,
//####GL_FLOAT_VEC2
	GL_FLOAT_VEC2 = 0x8B50,
//####GL_FLOAT_VEC3
	GL_FLOAT_VEC3 = 0x8B51,
//####GL_FLOAT_VEC4
	GL_FLOAT_VEC4 = 0x8B52,
//####GL_INT_VEC2
	GL_INT_VEC2 = 0x8B53,
//####GL_INT_VEC3
	GL_INT_VEC3 = 0x8B54,
//####GL_INT_VEC4
	GL_INT_VEC4 = 0x8B55,
//####GL_BOOL
	GL_BOOL = 0x8B56,
//####GL_BOOL_VEC2
	GL_BOOL_VEC2 = 0x8B57,
//####GL_BOOL_VEC3
	GL_BOOL_VEC3 = 0x8B58,
//####GL_BOOL_VEC4
	GL_BOOL_VEC4 = 0x8B59,
//####GL_FLOAT_MAT2
	GL_FLOAT_MAT2 = 0x8B5A,
//####GL_FLOAT_MAT3
	GL_FLOAT_MAT3 = 0x8B5B,
//####GL_FLOAT_MAT4
	GL_FLOAT_MAT4 = 0x8B5C,
//####GL_SAMPLER_1D
	GL_SAMPLER_1D = 0x8B5D,
//####GL_SAMPLER_2D
	GL_SAMPLER_2D = 0x8B5E,
//####GL_SAMPLER_3D
	GL_SAMPLER_3D = 0x8B5F,
//####GL_SAMPLER_CUBE
	GL_SAMPLER_CUBE = 0x8B60,
//####GL_SAMPLER_1D_SHADOW
	GL_SAMPLER_1D_SHADOW = 0x8B61,
//####GL_SAMPLER_2D_SHADOW
	GL_SAMPLER_2D_SHADOW = 0x8B62,
//####GL_DELETE_STATUS
	GL_DELETE_STATUS = 0x8B80,
//####GL_COMPILE_STATUS
	GL_COMPILE_STATUS = 0x8B81,
//####GL_LINK_STATUS
	GL_LINK_STATUS = 0x8B82,
//####GL_VALIDATE_STATUS
	GL_VALIDATE_STATUS = 0x8B83,
//####GL_INFO_LOG_LENGTH
	GL_INFO_LOG_LENGTH = 0x8B84,
//####GL_ATTACHED_SHADERS
	GL_ATTACHED_SHADERS = 0x8B85,
//####GL_ACTIVE_UNIFORMS
	GL_ACTIVE_UNIFORMS = 0x8B86,
//####GL_ACTIVE_UNIFORM_MAX_LENGTH
	GL_ACTIVE_UNIFORM_MAX_LENGTH = 0x8B87,
//####GL_SHADER_SOURCE_LENGTH
	GL_SHADER_SOURCE_LENGTH = 0x8B88,
//####GL_ACTIVE_ATTRIBUTES
	GL_ACTIVE_ATTRIBUTES = 0x8B89,
//####GL_ACTIVE_ATTRIBUTE_MAX_LENGTH
	GL_ACTIVE_ATTRIBUTE_MAX_LENGTH = 0x8B8A,
//####GL_FRAGMENT_SHADER_DERIVATIVE_HINT
	GL_FRAGMENT_SHADER_DERIVATIVE_HINT = 0x8B8B,
//####GL_SHADING_LANGUAGE_VERSION
	GL_SHADING_LANGUAGE_VERSION = 0x8B8C,
//####GL_CURRENT_PROGRAM
	GL_CURRENT_PROGRAM = 0x8B8D,
//####GL_POINT_SPRITE_COORD_ORIGIN
	GL_POINT_SPRITE_COORD_ORIGIN = 0x8CA0,
//####GL_LOWER_LEFT
	GL_LOWER_LEFT = 0x8CA1,
//####GL_UPPER_LEFT
	GL_UPPER_LEFT = 0x8CA2,
//####GL_STENCIL_BACK_REF
	GL_STENCIL_BACK_REF = 0x8CA3,
//####GL_STENCIL_BACK_VALUE_MASK
	GL_STENCIL_BACK_VALUE_MASK = 0x8CA4,
//####GL_STENCIL_BACK_WRITEMASK
	GL_STENCIL_BACK_WRITEMASK = 0x8CA5,
//####GL_VERSION_2_1
	GL_VERSION_2_1 = 0x1,
//####GL_PIXEL_PACK_BUFFER
	GL_PIXEL_PACK_BUFFER = 0x88EB,
//####GL_PIXEL_UNPACK_BUFFER
	GL_PIXEL_UNPACK_BUFFER = 0x88EC,
//####GL_PIXEL_PACK_BUFFER_BINDING
	GL_PIXEL_PACK_BUFFER_BINDING = 0x88ED,
//####GL_PIXEL_UNPACK_BUFFER_BINDING
	GL_PIXEL_UNPACK_BUFFER_BINDING = 0x88EF,
//####GL_FLOAT_MAT2x3
	GL_FLOAT_MAT2x3 = 0x8B65,
//####GL_FLOAT_MAT2x4
	GL_FLOAT_MAT2x4 = 0x8B66,
//####GL_FLOAT_MAT3x2
	GL_FLOAT_MAT3x2 = 0x8B67,
//####GL_FLOAT_MAT3x4
	GL_FLOAT_MAT3x4 = 0x8B68,
//####GL_FLOAT_MAT4x2
	GL_FLOAT_MAT4x2 = 0x8B69,
//####GL_FLOAT_MAT4x3
	GL_FLOAT_MAT4x3 = 0x8B6A,
//####GL_SRGB
	GL_SRGB = 0x8C40,
//####GL_SRGB8
	GL_SRGB8 = 0x8C41,
//####GL_SRGB_ALPHA
	GL_SRGB_ALPHA = 0x8C42,
//####GL_SRGB8_ALPHA8
	GL_SRGB8_ALPHA8 = 0x8C43,
//####GL_SLUMINANCE_ALPHA
	GL_SLUMINANCE_ALPHA = 0x8C44,
//####GL_SLUMINANCE8_ALPHA8
	GL_SLUMINANCE8_ALPHA8 = 0x8C45,
//####GL_SLUMINANCE
	GL_SLUMINANCE = 0x8C46,
//####GL_SLUMINANCE8
	GL_SLUMINANCE8 = 0x8C47,
//####GL_COMPRESSED_SRGB
	GL_COMPRESSED_SRGB = 0x8C48,
//####GL_COMPRESSED_SRGB_ALPHA
	GL_COMPRESSED_SRGB_ALPHA = 0x8C49,
//####GL_COMPRESSED_SLUMINANCE
	GL_COMPRESSED_SLUMINANCE = 0x8C4A,
//####GL_COMPRESSED_SLUMINANCE_ALPHA
	GL_COMPRESSED_SLUMINANCE_ALPHA = 0x8C4B,
//####GL_VERSION_3_0
	GL_VERSION_3_0 = 0x1,
//####GL_COMPARE_R_TO_TEXTURE_ARB
	GL_COMPARE_R_TO_TEXTURE_ARB = 0x1,
//####GL_CLIP_PLANE0
	GL_CLIP_PLANE0 = 0x1,
//####GL_CLIP_PLANE1
	GL_CLIP_PLANE1 = 0x1,
//####GL_CLIP_PLANE2
	GL_CLIP_PLANE2 = 0x1,
//####GL_CLIP_PLANE3
	GL_CLIP_PLANE3 = 0x1,
//####GL_CLIP_PLANE4
	GL_CLIP_PLANE4 = 0x1,
//####GL_CLIP_PLANE5
	GL_CLIP_PLANE5 = 0x1,
//####GL_MAX_CLIP_PLANES
	GL_MAX_CLIP_PLANES = 0x1,
//####GL_MINOR_VERSION
	GL_MINOR_VERSION = 0x821C,
//####GL_NUM_EXTENSIONS
	GL_NUM_EXTENSIONS = 0x821D,
//####GL_CONTEXT_FLAGS
	GL_CONTEXT_FLAGS = 0x821E,
//####GL_DEPTH_BUFFER
	GL_DEPTH_BUFFER = 0x8223,
//####GL_STENCIL_BUFFER
	GL_STENCIL_BUFFER = 0x8224,
//####GL_COMPRESSED_RED
	GL_COMPRESSED_RED = 0x8225,
//####GL_COMPRESSED_RG
	GL_COMPRESSED_RG = 0x8226,
//####GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT
	GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT = 0x0001,
//####GL_RGBA32F
	GL_RGBA32F = 0x8814,
//####GL_RGB32F
	GL_RGB32F = 0x8815,
//####GL_RGBA16F
	GL_RGBA16F = 0x881A,
//####GL_RGB16F
	GL_RGB16F = 0x881B,
//####GL_VERTEX_ATTRIB_ARRAY_INTEGER
	GL_VERTEX_ATTRIB_ARRAY_INTEGER = 0x88FD,
//####GL_MAX_ARRAY_TEXTURE_LAYERS
	GL_MAX_ARRAY_TEXTURE_LAYERS = 0x88FF,
//####GL_MIN_PROGRAM_TEXEL_OFFSET
	GL_MIN_PROGRAM_TEXEL_OFFSET = 0x8904,
//####GL_MAX_PROGRAM_TEXEL_OFFSET
	GL_MAX_PROGRAM_TEXEL_OFFSET = 0x8905,
//####GL_CLAMP_VERTEX_COLOR
	GL_CLAMP_VERTEX_COLOR = 0x891A,
//####GL_CLAMP_FRAGMENT_COLOR
	GL_CLAMP_FRAGMENT_COLOR = 0x891B,
//####GL_CLAMP_READ_COLOR
	GL_CLAMP_READ_COLOR = 0x891C,
//####GL_FIXED_ONLY
	GL_FIXED_ONLY = 0x891D,
//####GL_MAX_VARYING_COMPONENTS
	GL_MAX_VARYING_COMPONENTS = 0x1,
//####GL_TEXTURE_RED_TYPE
	GL_TEXTURE_RED_TYPE = 0x8C10,
//####GL_TEXTURE_GREEN_TYPE
	GL_TEXTURE_GREEN_TYPE = 0x8C11,
//####GL_TEXTURE_BLUE_TYPE
	GL_TEXTURE_BLUE_TYPE = 0x8C12,
//####GL_TEXTURE_ALPHA_TYPE
	GL_TEXTURE_ALPHA_TYPE = 0x8C13,
//####GL_TEXTURE_LUMINANCE_TYPE
	GL_TEXTURE_LUMINANCE_TYPE = 0x8C14,
//####GL_TEXTURE_INTENSITY_TYPE
	GL_TEXTURE_INTENSITY_TYPE = 0x8C15,
//####GL_TEXTURE_DEPTH_TYPE
	GL_TEXTURE_DEPTH_TYPE = 0x8C16,
//####GL_UNSIGNED_NORMALIZED
	GL_UNSIGNED_NORMALIZED = 0x8C17,
//####GL_TEXTURE_1D_ARRAY
	GL_TEXTURE_1D_ARRAY = 0x8C18,
//####GL_PROXY_TEXTURE_1D_ARRAY
	GL_PROXY_TEXTURE_1D_ARRAY = 0x8C19,
//####GL_TEXTURE_2D_ARRAY
	GL_TEXTURE_2D_ARRAY = 0x8C1A,
//####GL_PROXY_TEXTURE_2D_ARRAY
	GL_PROXY_TEXTURE_2D_ARRAY = 0x8C1B,
//####GL_TEXTURE_BINDING_1D_ARRAY
	GL_TEXTURE_BINDING_1D_ARRAY = 0x8C1C,
//####GL_TEXTURE_BINDING_2D_ARRAY
	GL_TEXTURE_BINDING_2D_ARRAY = 0x8C1D,
//####GL_R11F_G11F_B10F
	GL_R11F_G11F_B10F = 0x8C3A,
//####GL_UNSIGNED_INT_10F_11F_11F_REV
	GL_UNSIGNED_INT_10F_11F_11F_REV = 0x8C3B,
//####GL_RGB9_E5
	GL_RGB9_E5 = 0x8C3D,
//####GL_UNSIGNED_INT_5_9_9_9_REV
	GL_UNSIGNED_INT_5_9_9_9_REV = 0x8C3E,
//####GL_TEXTURE_SHARED_SIZE
	GL_TEXTURE_SHARED_SIZE = 0x8C3F,
//####GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH
	GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH = 0x8C76,
//####GL_TRANSFORM_FEEDBACK_BUFFER_MODE
	GL_TRANSFORM_FEEDBACK_BUFFER_MODE = 0x8C7F,
//####GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS
	GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS = 0x8C80,
//####GL_TRANSFORM_FEEDBACK_VARYINGS
	GL_TRANSFORM_FEEDBACK_VARYINGS = 0x8C83,
//####GL_TRANSFORM_FEEDBACK_BUFFER_START
	GL_TRANSFORM_FEEDBACK_BUFFER_START = 0x8C84,
//####GL_TRANSFORM_FEEDBACK_BUFFER_SIZE
	GL_TRANSFORM_FEEDBACK_BUFFER_SIZE = 0x8C85,
//####GL_PRIMITIVES_GENERATED
	GL_PRIMITIVES_GENERATED = 0x8C87,
//####GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN
	GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN = 0x8C88,
//####GL_RASTERIZER_DISCARD
	GL_RASTERIZER_DISCARD = 0x8C89,
//####GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS
	GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS = 0x8C8A,
//####GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS
	GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS = 0x8C8B,
//####GL_INTERLEAVED_ATTRIBS
	GL_INTERLEAVED_ATTRIBS = 0x8C8C,
//####GL_SEPARATE_ATTRIBS
	GL_SEPARATE_ATTRIBS = 0x8C8D,
//####GL_TRANSFORM_FEEDBACK_BUFFER
	GL_TRANSFORM_FEEDBACK_BUFFER = 0x8C8E,
//####GL_TRANSFORM_FEEDBACK_BUFFER_BINDING
	GL_TRANSFORM_FEEDBACK_BUFFER_BINDING = 0x8C8F,
//####GL_RGBA32UI
	GL_RGBA32UI = 0x8D70,
//####GL_RGB32UI
	GL_RGB32UI = 0x8D71,
//####GL_RGBA16UI
	GL_RGBA16UI = 0x8D76,
//####GL_RGB16UI
	GL_RGB16UI = 0x8D77,
//####GL_RGBA8UI
	GL_RGBA8UI = 0x8D7C,
//####GL_RGB8UI
	GL_RGB8UI = 0x8D7D,
//####GL_RGBA32I
	GL_RGBA32I = 0x8D82,
//####GL_RGB32I
	GL_RGB32I = 0x8D83,
//####GL_RGBA16I
	GL_RGBA16I = 0x8D88,
//####GL_RGB16I
	GL_RGB16I = 0x8D89,
//####GL_RGBA8I
	GL_RGBA8I = 0x8D8E,
//####GL_RGB8I
	GL_RGB8I = 0x8D8F,
//####GL_RED_INTEGER
	GL_RED_INTEGER = 0x8D94,
//####GL_GREEN_INTEGER
	GL_GREEN_INTEGER = 0x8D95,
//####GL_BLUE_INTEGER
	GL_BLUE_INTEGER = 0x8D96,
//####GL_ALPHA_INTEGER
	GL_ALPHA_INTEGER = 0x8D97,
//####GL_RGB_INTEGER
	GL_RGB_INTEGER = 0x8D98,
//####GL_RGBA_INTEGER
	GL_RGBA_INTEGER = 0x8D99,
//####GL_BGR_INTEGER
	GL_BGR_INTEGER = 0x8D9A,
//####GL_BGRA_INTEGER
	GL_BGRA_INTEGER = 0x8D9B,
//####GL_SAMPLER_1D_ARRAY
	GL_SAMPLER_1D_ARRAY = 0x8DC0,
//####GL_SAMPLER_2D_ARRAY
	GL_SAMPLER_2D_ARRAY = 0x8DC1,
//####GL_SAMPLER_1D_ARRAY_SHADOW
	GL_SAMPLER_1D_ARRAY_SHADOW = 0x8DC3,
//####GL_SAMPLER_2D_ARRAY_SHADOW
	GL_SAMPLER_2D_ARRAY_SHADOW = 0x8DC4,
//####GL_SAMPLER_CUBE_SHADOW
	GL_SAMPLER_CUBE_SHADOW = 0x8DC5,
//####GL_UNSIGNED_INT_VEC2
	GL_UNSIGNED_INT_VEC2 = 0x8DC6,
//####GL_UNSIGNED_INT_VEC3
	GL_UNSIGNED_INT_VEC3 = 0x8DC7,
//####GL_UNSIGNED_INT_VEC4
	GL_UNSIGNED_INT_VEC4 = 0x8DC8,
//####GL_INT_SAMPLER_1D
	GL_INT_SAMPLER_1D = 0x8DC9,
//####GL_INT_SAMPLER_2D
	GL_INT_SAMPLER_2D = 0x8DCA,
//####GL_INT_SAMPLER_3D
	GL_INT_SAMPLER_3D = 0x8DCB,
//####GL_INT_SAMPLER_CUBE
	GL_INT_SAMPLER_CUBE = 0x8DCC,
//####GL_INT_SAMPLER_1D_ARRAY
	GL_INT_SAMPLER_1D_ARRAY = 0x8DCE,
//####GL_INT_SAMPLER_2D_ARRAY
	GL_INT_SAMPLER_2D_ARRAY = 0x8DCF,
//####GL_UNSIGNED_INT_SAMPLER_1D
	GL_UNSIGNED_INT_SAMPLER_1D = 0x8DD1,
//####GL_UNSIGNED_INT_SAMPLER_2D
	GL_UNSIGNED_INT_SAMPLER_2D = 0x8DD2,
//####GL_UNSIGNED_INT_SAMPLER_3D
	GL_UNSIGNED_INT_SAMPLER_3D = 0x8DD3,
//####GL_UNSIGNED_INT_SAMPLER_CUBE
	GL_UNSIGNED_INT_SAMPLER_CUBE = 0x8DD4,
//####GL_UNSIGNED_INT_SAMPLER_1D_ARRAY
	GL_UNSIGNED_INT_SAMPLER_1D_ARRAY = 0x8DD6,
//####GL_UNSIGNED_INT_SAMPLER_2D_ARRAY
	GL_UNSIGNED_INT_SAMPLER_2D_ARRAY = 0x8DD7,
//####GL_QUERY_WAIT
	GL_QUERY_WAIT = 0x8E13,
//####GL_QUERY_NO_WAIT
	GL_QUERY_NO_WAIT = 0x8E14,
//####GL_QUERY_BY_REGION_WAIT
	GL_QUERY_BY_REGION_WAIT = 0x8E15,
//####GL_QUERY_BY_REGION_NO_WAIT
	GL_QUERY_BY_REGION_NO_WAIT = 0x8E16,
//####GL_VERSION_3_1
	GL_VERSION_3_1 = 0x1,
//####GL_SAMPLER_2D_RECT_SHADOW
	GL_SAMPLER_2D_RECT_SHADOW = 0x8B64,
//####GL_SAMPLER_BUFFER
	GL_SAMPLER_BUFFER = 0x8DC2,
//####GL_INT_SAMPLER_2D_RECT
	GL_INT_SAMPLER_2D_RECT = 0x8DCD,
//####GL_INT_SAMPLER_BUFFER
	GL_INT_SAMPLER_BUFFER = 0x8DD0,
//####GL_UNSIGNED_INT_SAMPLER_2D_RECT
	GL_UNSIGNED_INT_SAMPLER_2D_RECT = 0x8DD5,
//####GL_UNSIGNED_INT_SAMPLER_BUFFER
	GL_UNSIGNED_INT_SAMPLER_BUFFER = 0x8DD8,
//####GL_TEXTURE_BUFFER
	GL_TEXTURE_BUFFER = 0x8C2A,
//####GL_MAX_TEXTURE_BUFFER_SIZE
	GL_MAX_TEXTURE_BUFFER_SIZE = 0x8C2B,
//####GL_TEXTURE_BINDING_BUFFER
	GL_TEXTURE_BINDING_BUFFER = 0x8C2C,
//####GL_TEXTURE_BUFFER_DATA_STORE_BINDING
	GL_TEXTURE_BUFFER_DATA_STORE_BINDING = 0x8C2D,
//####GL_TEXTURE_BUFFER_FORMAT
	GL_TEXTURE_BUFFER_FORMAT = 0x8C2E,
//####GL_TEXTURE_RECTANGLE
	GL_TEXTURE_RECTANGLE = 0x84F5,
//####GL_TEXTURE_BINDING_RECTANGLE
	GL_TEXTURE_BINDING_RECTANGLE = 0x84F6,
//####GL_PROXY_TEXTURE_RECTANGLE
	GL_PROXY_TEXTURE_RECTANGLE = 0x84F7,
//####GL_MAX_RECTANGLE_TEXTURE_SIZE
	GL_MAX_RECTANGLE_TEXTURE_SIZE = 0x84F8,
//####GL_RED_SNORM
	GL_RED_SNORM = 0x8F90,
//####GL_RG_SNORM
	GL_RG_SNORM = 0x8F91,
//####GL_RGB_SNORM
	GL_RGB_SNORM = 0x8F92,
//####GL_RGBA_SNORM
	GL_RGBA_SNORM = 0x8F93,
//####GL_R8_SNORM
	GL_R8_SNORM = 0x8F94,
//####GL_RG8_SNORM
	GL_RG8_SNORM = 0x8F95,
//####GL_RGB8_SNORM
	GL_RGB8_SNORM = 0x8F96,
//####GL_RGBA8_SNORM
	GL_RGBA8_SNORM = 0x8F97,
//####GL_R16_SNORM
	GL_R16_SNORM = 0x8F98,
//####GL_RG16_SNORM
	GL_RG16_SNORM = 0x8F99,
//####GL_RGB16_SNORM
	GL_RGB16_SNORM = 0x8F9A,
//####GL_RGBA16_SNORM
	GL_RGBA16_SNORM = 0x8F9B,
//####GL_SIGNED_NORMALIZED
	GL_SIGNED_NORMALIZED = 0x8F9C,
//####GL_PRIMITIVE_RESTART
	GL_PRIMITIVE_RESTART = 0x8F9D,
//####GL_PRIMITIVE_RESTART_INDEX
	GL_PRIMITIVE_RESTART_INDEX = 0x8F9E,
//####GL_BUFFER_ACCESS_FLAGS
	GL_BUFFER_ACCESS_FLAGS = 0x911F,
//####GL_BUFFER_MAP_LENGTH
	GL_BUFFER_MAP_LENGTH = 0x9120,
//####GL_BUFFER_MAP_OFFSET
	GL_BUFFER_MAP_OFFSET = 0x9121,
//####GL_VERSION_3_2
	GL_VERSION_3_2 = 0x1,
//####GL_CONTEXT_COMPATIBILITY_PROFILE_BIT
	GL_CONTEXT_COMPATIBILITY_PROFILE_BIT = 0x00000002,
//####GL_LINES_ADJACENCY
	GL_LINES_ADJACENCY = 0x000A,
//####GL_LINE_STRIP_ADJACENCY
	GL_LINE_STRIP_ADJACENCY = 0x000B,
//####GL_TRIANGLES_ADJACENCY
	GL_TRIANGLES_ADJACENCY = 0x000C,
//####GL_TRIANGLE_STRIP_ADJACENCY
	GL_TRIANGLE_STRIP_ADJACENCY = 0x000D,
//####GL_PROGRAM_POINT_SIZE
	GL_PROGRAM_POINT_SIZE = 0x8642,
//####GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS
	GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS = 0x8C29,
//####GL_FRAMEBUFFER_ATTACHMENT_LAYERED
	GL_FRAMEBUFFER_ATTACHMENT_LAYERED = 0x8DA7,
//####GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS
	GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS = 0x8DA8,
//####GL_GEOMETRY_SHADER
	GL_GEOMETRY_SHADER = 0x8DD9,
//####GL_GEOMETRY_VERTICES_OUT
	GL_GEOMETRY_VERTICES_OUT = 0x8916,
//####GL_GEOMETRY_INPUT_TYPE
	GL_GEOMETRY_INPUT_TYPE = 0x8917,
//####GL_GEOMETRY_OUTPUT_TYPE
	GL_GEOMETRY_OUTPUT_TYPE = 0x8918,
//####GL_MAX_GEOMETRY_UNIFORM_COMPONENTS
	GL_MAX_GEOMETRY_UNIFORM_COMPONENTS = 0x8DDF,
//####GL_MAX_GEOMETRY_OUTPUT_VERTICES
	GL_MAX_GEOMETRY_OUTPUT_VERTICES = 0x8DE0,
//####GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS
	GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS = 0x8DE1,
//####GL_MAX_VERTEX_OUTPUT_COMPONENTS
	GL_MAX_VERTEX_OUTPUT_COMPONENTS = 0x9122,
//####GL_MAX_GEOMETRY_INPUT_COMPONENTS
	GL_MAX_GEOMETRY_INPUT_COMPONENTS = 0x9123,
//####GL_MAX_GEOMETRY_OUTPUT_COMPONENTS
	GL_MAX_GEOMETRY_OUTPUT_COMPONENTS = 0x9124,
//####GL_MAX_FRAGMENT_INPUT_COMPONENTS
	GL_MAX_FRAGMENT_INPUT_COMPONENTS = 0x9125,
//####GL_CONTEXT_PROFILE_MASK
	GL_CONTEXT_PROFILE_MASK = 0x9126,
//####GL_VERSION_3_3
	GL_VERSION_3_3 = 0x1,
//####GL_TEXTURE_SWIZZLE_G
	GL_TEXTURE_SWIZZLE_G = 0x8E43,
//####GL_TEXTURE_SWIZZLE_B
	GL_TEXTURE_SWIZZLE_B = 0x8E44,
//####GL_TEXTURE_SWIZZLE_A
	GL_TEXTURE_SWIZZLE_A = 0x8E45,
//####GL_TEXTURE_SWIZZLE_RGBA
	GL_TEXTURE_SWIZZLE_RGBA = 0x8E46,
//####GL_RGB10_A2UI
	GL_RGB10_A2UI = 0x906F,
//####GL_ANY_SAMPLES_PASSED
	GL_ANY_SAMPLES_PASSED = 0x8C2F,
//####GL_VERTEX_ATTRIB_ARRAY_DIVISOR
	GL_VERTEX_ATTRIB_ARRAY_DIVISOR = 0x88FE,
//####GL_VERSION_4_0
	GL_VERSION_4_0 = 0x1,
//####GL_MIN_SAMPLE_SHADING_VALUE
	GL_MIN_SAMPLE_SHADING_VALUE = 0x8C37,
//####GL_GEOMETRY_SHADER_INVOCATIONS
	GL_GEOMETRY_SHADER_INVOCATIONS = 0x887F,
//####GL_MAX_GEOMETRY_SHADER_INVOCATIONS
	GL_MAX_GEOMETRY_SHADER_INVOCATIONS = 0x8E5A,
//####GL_MIN_FRAGMENT_INTERPOLATION_OFFSET
	GL_MIN_FRAGMENT_INTERPOLATION_OFFSET = 0x8E5B,
//####GL_MAX_FRAGMENT_INTERPOLATION_OFFSET
	GL_MAX_FRAGMENT_INTERPOLATION_OFFSET = 0x8E5C,
//####GL_FRAGMENT_INTERPOLATION_OFFSET_BITS
	GL_FRAGMENT_INTERPOLATION_OFFSET_BITS = 0x8E5D,
//####GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET
	GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET = 0x8E5E,
//####GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET
	GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET = 0x8E5F,
//####GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS
	GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS = 0x8F9F,
//####GL_TEXTURE_CUBE_MAP_ARRAY
	GL_TEXTURE_CUBE_MAP_ARRAY = 0x9009,
//####GL_TEXTURE_BINDING_CUBE_MAP_ARRAY
	GL_TEXTURE_BINDING_CUBE_MAP_ARRAY = 0x900A,
//####GL_PROXY_TEXTURE_CUBE_MAP_ARRAY
	GL_PROXY_TEXTURE_CUBE_MAP_ARRAY = 0x900B,
//####GL_SAMPLER_CUBE_MAP_ARRAY
	GL_SAMPLER_CUBE_MAP_ARRAY = 0x900C,
//####GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW
	GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW = 0x900D,
//####GL_INT_SAMPLER_CUBE_MAP_ARRAY
	GL_INT_SAMPLER_CUBE_MAP_ARRAY = 0x900E,
//####GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY
	GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY = 0x900F,
//####GL_VERSION_4_1
	GL_VERSION_4_1 = 0x1,
//####GL_2D
	GL_2D = 0x0600,
//####GL_2_BYTES
	GL_2_BYTES = 0x1407,
//####GL_3D
	GL_3D = 0x0601,
//####GL_3D_COLOR
	GL_3D_COLOR = 0x0602,
//####GL_3D_COLOR_TEXTURE
	GL_3D_COLOR_TEXTURE = 0x0603,
//####GL_3_BYTES
	GL_3_BYTES = 0x1408,
//####GL_4D_COLOR_TEXTURE
	GL_4D_COLOR_TEXTURE = 0x0604,
//####GL_4_BYTES
	GL_4_BYTES = 0x1409,
//####GL_ACCUM
	GL_ACCUM = 0x0100,
//####GL_ACCUM_ALPHA_BITS
	GL_ACCUM_ALPHA_BITS = 0x0D5B,
//####GL_ACCUM_BLUE_BITS
	GL_ACCUM_BLUE_BITS = 0x0D5A,
//####GL_ACCUM_BUFFER_BIT
	GL_ACCUM_BUFFER_BIT = 0x00000200,
//####GL_ACCUM_CLEAR_VALUE
	GL_ACCUM_CLEAR_VALUE = 0x0B80,
//####GL_ACCUM_GREEN_BITS
	GL_ACCUM_GREEN_BITS = 0x0D59,
//####GL_ACCUM_RED_BITS
	GL_ACCUM_RED_BITS = 0x0D58,
//####GL_ACTIVE_ATTRIBUTES
	GL_ACTIVE_ATTRIBUTES = 0x8B89,
//####GL_ACTIVE_ATTRIBUTE_MAX_LENGTH
	GL_ACTIVE_ATTRIBUTE_MAX_LENGTH = 0x8B8A,
//####GL_ACTIVE_TEXTURE
	GL_ACTIVE_TEXTURE = 0x84E0,
//####GL_ACTIVE_UNIFORMS
	GL_ACTIVE_UNIFORMS = 0x8B86,
//####GL_ACTIVE_UNIFORM_MAX_LENGTH
	GL_ACTIVE_UNIFORM_MAX_LENGTH = 0x8B87,
//####GL_ADD
	GL_ADD = 0x0104,
//####GL_ADD_SIGNED
	GL_ADD_SIGNED = 0x8574,
//####GL_ALIASED_LINE_WIDTH_RANGE
	GL_ALIASED_LINE_WIDTH_RANGE = 0x846E,
//####GL_ALIASED_POINT_SIZE_RANGE
	GL_ALIASED_POINT_SIZE_RANGE = 0x846D,
//####GL_ALL_ATTRIB_BITS
	GL_ALL_ATTRIB_BITS = 0x000fffff,
//####GL_ALPHA
	GL_ALPHA = 0x1906,
//####GL_ALPHA12
	GL_ALPHA12 = 0x803D,
//####GL_ALPHA16
	GL_ALPHA16 = 0x803E,
//####GL_ALPHA4
	GL_ALPHA4 = 0x803B,
//####GL_ALPHA8
	GL_ALPHA8 = 0x803C,
//####GL_ALPHA_BIAS
	GL_ALPHA_BIAS = 0x0D1D,
//####GL_ALPHA_BITS
	GL_ALPHA_BITS = 0x0D55,
//####GL_ALPHA_SCALE
	GL_ALPHA_SCALE = 0x0D1C,
//####GL_ALPHA_TEST
	GL_ALPHA_TEST = 0x0BC0,
//####GL_ALPHA_TEST_FUNC
	GL_ALPHA_TEST_FUNC = 0x0BC1,
//####GL_ALPHA_TEST_REF
	GL_ALPHA_TEST_REF = 0x0BC2,
//####GL_ALWAYS
	GL_ALWAYS = 0x0207,
//####GL_AMBIENT
	GL_AMBIENT = 0x1200,
//####GL_AMBIENT_AND_DIFFUSE
	GL_AMBIENT_AND_DIFFUSE = 0x1602,
//####GL_AND
	GL_AND = 0x1501,
//####GL_AND_INVERTED
	GL_AND_INVERTED = 0x1504,
//####GL_AND_REVERSE
	GL_AND_REVERSE = 0x1502,
//####GL_ARRAY_BUFFER
	GL_ARRAY_BUFFER = 0x8892,
//####GL_ARRAY_BUFFER_BINDING
	GL_ARRAY_BUFFER_BINDING = 0x8894,
//####GL_ATTACHED_SHADERS
	GL_ATTACHED_SHADERS = 0x8B85,
//####GL_ATTRIB_STACK_DEPTH
	GL_ATTRIB_STACK_DEPTH = 0x0BB0,
//####GL_AUTO_NORMAL
	GL_AUTO_NORMAL = 0x0D80,
//####GL_AUX0
	GL_AUX0 = 0x0409,
//####GL_AUX1
	GL_AUX1 = 0x040A,
//####GL_AUX2
	GL_AUX2 = 0x040B,
//####GL_AUX3
	GL_AUX3 = 0x040C,
//####GL_AUX_BUFFERS
	GL_AUX_BUFFERS = 0x0C00,
//####GL_BACK
	GL_BACK = 0x0405,
//####GL_BACK_LEFT
	GL_BACK_LEFT = 0x0402,
//####GL_BACK_RIGHT
	GL_BACK_RIGHT = 0x0403,
//####GL_BGR
	GL_BGR = 0x80E0,
//####GL_BGRA
	GL_BGRA = 0x80E1,
//####GL_BITMAP
	GL_BITMAP = 0x1A00,
//####GL_BITMAP_TOKEN
	GL_BITMAP_TOKEN = 0x0704,
//####GL_BLEND
	GL_BLEND = 0x0BE2,
//####GL_BLEND_COLOR
	GL_BLEND_COLOR = 0x8005,
//####GL_BLEND_DST
	GL_BLEND_DST = 0x0BE0,
//####GL_BLEND_DST_ALPHA
	GL_BLEND_DST_ALPHA = 0x80CA,
//####GL_BLEND_DST_RGB
	GL_BLEND_DST_RGB = 0x80C8,
//####GL_BLEND_EQUATION
	GL_BLEND_EQUATION = 0x8009,
//####GL_BLEND_EQUATION_ALPHA
	GL_BLEND_EQUATION_ALPHA = 0x883D,
//####GL_BLEND_EQUATION_RGB
	GL_BLEND_EQUATION_RGB = 0x8009,
//####GL_BLEND_SRC
	GL_BLEND_SRC = 0x0BE1,
//####GL_BLEND_SRC_ALPHA
	GL_BLEND_SRC_ALPHA = 0x80CB,
//####GL_BLEND_SRC_RGB
	GL_BLEND_SRC_RGB = 0x80C9,
//####GL_BLUE
	GL_BLUE = 0x1905,
//####GL_BLUE_BIAS
	GL_BLUE_BIAS = 0x0D1B,
//####GL_BLUE_BITS
	GL_BLUE_BITS = 0x0D54,
//####GL_BLUE_SCALE
	GL_BLUE_SCALE = 0x0D1A,
//####GL_BOOL
	GL_BOOL = 0x8B56,
//####GL_BOOL_VEC2
	GL_BOOL_VEC2 = 0x8B57,
//####GL_BOOL_VEC3
	GL_BOOL_VEC3 = 0x8B58,
//####GL_BOOL_VEC4
	GL_BOOL_VEC4 = 0x8B59,
//####GL_BUFFER_ACCESS
	GL_BUFFER_ACCESS = 0x88BB,
//####GL_BUFFER_MAPPED
	GL_BUFFER_MAPPED = 0x88BC,
//####GL_BUFFER_MAP_POINTER
	GL_BUFFER_MAP_POINTER = 0x88BD,
//####GL_BUFFER_SIZE
	GL_BUFFER_SIZE = 0x8764,
//####GL_BUFFER_USAGE
	GL_BUFFER_USAGE = 0x8765,
//####GL_BYTE
	GL_BYTE = 0x1400,
//####GL_C3F_V3F
	GL_C3F_V3F = 0x2A24,
//####GL_C4F_N3F_V3F
	GL_C4F_N3F_V3F = 0x2A26,
//####GL_C4UB_V2F
	GL_C4UB_V2F = 0x2A22,
//####GL_C4UB_V3F
	GL_C4UB_V3F = 0x2A23,
//####GL_CCW
	GL_CCW = 0x0901,
//####GL_CLAMP
	GL_CLAMP = 0x2900,
//####GL_CLAMP_TO_BORDER
	GL_CLAMP_TO_BORDER = 0x812D,
//####GL_CLAMP_TO_EDGE
	GL_CLAMP_TO_EDGE = 0x812F,
//####GL_CLEAR
	GL_CLEAR = 0x1500,
//####GL_CLIENT_ACTIVE_TEXTURE
	GL_CLIENT_ACTIVE_TEXTURE = 0x84E1,
//####GL_CLIENT_ALL_ATTRIB_BITS
	GL_CLIENT_ALL_ATTRIB_BITS = 0xffffffff,
//####GL_CLIENT_ATTRIB_STACK_DEPTH
	GL_CLIENT_ATTRIB_STACK_DEPTH = 0x0BB1,
//####GL_CLIENT_PIXEL_STORE_BIT
	GL_CLIENT_PIXEL_STORE_BIT = 0x00000001,
//####GL_CLIENT_VERTEX_ARRAY_BIT
	GL_CLIENT_VERTEX_ARRAY_BIT = 0x00000002,
//####GL_CLIP_PLANE0
	GL_CLIP_PLANE0 = 0x3000,
//####GL_CLIP_PLANE1
	GL_CLIP_PLANE1 = 0x3001,
//####GL_CLIP_PLANE2
	GL_CLIP_PLANE2 = 0x3002,
//####GL_CLIP_PLANE3
	GL_CLIP_PLANE3 = 0x3003,
//####GL_CLIP_PLANE4
	GL_CLIP_PLANE4 = 0x3004,
//####GL_CLIP_PLANE5
	GL_CLIP_PLANE5 = 0x3005,
//####GL_COEFF
	GL_COEFF = 0x0A00,
//####GL_COLOR
	GL_COLOR = 0x1800,
//####GL_COLOR_ARRAY
	GL_COLOR_ARRAY = 0x8076,
//####GL_COLOR_ARRAY_BUFFER_BINDING
	GL_COLOR_ARRAY_BUFFER_BINDING = 0x8898,
//####GL_COLOR_ARRAY_POINTER
	GL_COLOR_ARRAY_POINTER = 0x8090,
//####GL_COLOR_ARRAY_SIZE
	GL_COLOR_ARRAY_SIZE = 0x8081,
//####GL_COLOR_ARRAY_STRIDE
	GL_COLOR_ARRAY_STRIDE = 0x8083,
//####GL_COLOR_ARRAY_TYPE
	GL_COLOR_ARRAY_TYPE = 0x8082,
//####GL_COLOR_BUFFER_BIT
	GL_COLOR_BUFFER_BIT = 0x00004000,
//####GL_COLOR_CLEAR_VALUE
	GL_COLOR_CLEAR_VALUE = 0x0C22,
//####GL_COLOR_INDEX
	GL_COLOR_INDEX = 0x1900,
//####GL_COLOR_INDEXES
	GL_COLOR_INDEXES = 0x1603,
//####GL_COLOR_LOGIC_OP
	GL_COLOR_LOGIC_OP = 0x0BF2,
//####GL_COLOR_MATERIAL
	GL_COLOR_MATERIAL = 0x0B57,
//####GL_COLOR_MATERIAL_FACE
	GL_COLOR_MATERIAL_FACE = 0x0B55,
//####GL_COLOR_MATERIAL_PARAMETER
	GL_COLOR_MATERIAL_PARAMETER = 0x0B56,
//####GL_COLOR_MATRIX
	GL_COLOR_MATRIX = 0x80B1,
//####GL_COLOR_MATRIX_STACK_DEPTH
	GL_COLOR_MATRIX_STACK_DEPTH = 0x80B2,
//####GL_COLOR_SUM
	GL_COLOR_SUM = 0x8458,
//####GL_COLOR_TABLE
	GL_COLOR_TABLE = 0x80D0,
//####GL_COLOR_TABLE_ALPHA_SIZE
	GL_COLOR_TABLE_ALPHA_SIZE = 0x80DD,
//####GL_COLOR_TABLE_BIAS
	GL_COLOR_TABLE_BIAS = 0x80D7,
//####GL_COLOR_TABLE_BLUE_SIZE
	GL_COLOR_TABLE_BLUE_SIZE = 0x80DC,
//####GL_COLOR_TABLE_FORMAT
	GL_COLOR_TABLE_FORMAT = 0x80D8,
//####GL_COLOR_TABLE_GREEN_SIZE
	GL_COLOR_TABLE_GREEN_SIZE = 0x80DB,
//####GL_COLOR_TABLE_INTENSITY_SIZE
	GL_COLOR_TABLE_INTENSITY_SIZE = 0x80DF,
//####GL_COLOR_TABLE_LUMINANCE_SIZE
	GL_COLOR_TABLE_LUMINANCE_SIZE = 0x80DE,
//####GL_COLOR_TABLE_RED_SIZE
	GL_COLOR_TABLE_RED_SIZE = 0x80DA,
//####GL_COLOR_TABLE_SCALE
	GL_COLOR_TABLE_SCALE = 0x80D6,
//####GL_COLOR_TABLE_WIDTH
	GL_COLOR_TABLE_WIDTH = 0x80D9,
//####GL_COLOR_WRITEMASK
	GL_COLOR_WRITEMASK = 0x0C23,
//####GL_COMBINE
	GL_COMBINE = 0x8570,
//####GL_COMBINE_ALPHA
	GL_COMBINE_ALPHA = 0x8572,
//####GL_COMBINE_RGB
	GL_COMBINE_RGB = 0x8571,
//####GL_COMPARE_R_TO_TEXTURE
	GL_COMPARE_R_TO_TEXTURE = 0x884E,
//####GL_COMPILE
	GL_COMPILE = 0x1300,
//####GL_COMPILE_AND_EXECUTE
	GL_COMPILE_AND_EXECUTE = 0x1301,
//####GL_COMPILE_STATUS
	GL_COMPILE_STATUS = 0x8B81,
//####GL_COMPRESSED_ALPHA
	GL_COMPRESSED_ALPHA = 0x84E9,
//####GL_COMPRESSED_INTENSITY
	GL_COMPRESSED_INTENSITY = 0x84EC,
//####GL_COMPRESSED_LUMINANCE
	GL_COMPRESSED_LUMINANCE = 0x84EA,
//####GL_COMPRESSED_LUMINANCE_ALPHA
	GL_COMPRESSED_LUMINANCE_ALPHA = 0x84EB,
//####GL_COMPRESSED_RGB
	GL_COMPRESSED_RGB = 0x84ED,
//####GL_COMPRESSED_RGBA
	GL_COMPRESSED_RGBA = 0x84EE,
//####GL_COMPRESSED_SLUMINANCE
	GL_COMPRESSED_SLUMINANCE = 0x8C4A,
//####GL_COMPRESSED_SLUMINANCE_ALPHA
	GL_COMPRESSED_SLUMINANCE_ALPHA = 0x8C4B,
//####GL_COMPRESSED_SRGB
	GL_COMPRESSED_SRGB = 0x8C48,
//####GL_COMPRESSED_SRGB_ALPHA
	GL_COMPRESSED_SRGB_ALPHA = 0x8C49,
//####GL_COMPRESSED_TEXTURE_FORMATS
	GL_COMPRESSED_TEXTURE_FORMATS = 0x86A3,
//####GL_CONSTANT
	GL_CONSTANT = 0x8576,
//####GL_CONSTANT_ALPHA
	GL_CONSTANT_ALPHA = 0x8003,
//####GL_CONSTANT_ATTENUATION
	GL_CONSTANT_ATTENUATION = 0x1207,
//####GL_CONSTANT_BORDER
	GL_CONSTANT_BORDER = 0x8151,
//####GL_CONSTANT_COLOR
	GL_CONSTANT_COLOR = 0x8001,
//####GL_CONVOLUTION_1D
	GL_CONVOLUTION_1D = 0x8010,
//####GL_CONVOLUTION_2D
	GL_CONVOLUTION_2D = 0x8011,
//####GL_CONVOLUTION_BORDER_COLOR
	GL_CONVOLUTION_BORDER_COLOR = 0x8154,
//####GL_CONVOLUTION_BORDER_MODE
	GL_CONVOLUTION_BORDER_MODE = 0x8013,
//####GL_CONVOLUTION_FILTER_BIAS
	GL_CONVOLUTION_FILTER_BIAS = 0x8015,
//####GL_CONVOLUTION_FILTER_SCALE
	GL_CONVOLUTION_FILTER_SCALE = 0x8014,
//####GL_CONVOLUTION_FORMAT
	GL_CONVOLUTION_FORMAT = 0x8017,
//####GL_CONVOLUTION_HEIGHT
	GL_CONVOLUTION_HEIGHT = 0x8019,
//####GL_CONVOLUTION_WIDTH
	GL_CONVOLUTION_WIDTH = 0x8018,
//####GL_COORD_REPLACE
	GL_COORD_REPLACE = 0x8862,
//####GL_COPY
	GL_COPY = 0x1503,
//####GL_COPY_INVERTED
	GL_COPY_INVERTED = 0x150C,
//####GL_COPY_PIXEL_TOKEN
	GL_COPY_PIXEL_TOKEN = 0x0706,
//####GL_CULL_FACE
	GL_CULL_FACE = 0x0B44,
//####GL_CULL_FACE_MODE
	GL_CULL_FACE_MODE = 0x0B45,
//####GL_CURRENT_BIT
	GL_CURRENT_BIT = 0x00000001,
//####GL_CURRENT_COLOR
	GL_CURRENT_COLOR = 0x0B00,
//####GL_CURRENT_FOG_COORD
	GL_CURRENT_FOG_COORD = 0x8453,
//####GL_CURRENT_FOG_COORDINATE
	GL_CURRENT_FOG_COORDINATE = 0x8453,
//####GL_CURRENT_INDEX
	GL_CURRENT_INDEX = 0x0B01,
//####GL_CURRENT_NORMAL
	GL_CURRENT_NORMAL = 0x0B02,
//####GL_CURRENT_PROGRAM
	GL_CURRENT_PROGRAM = 0x8B8D,
//####GL_CURRENT_QUERY
	GL_CURRENT_QUERY = 0x8865,
//####GL_CURRENT_RASTER_COLOR
	GL_CURRENT_RASTER_COLOR = 0x0B04,
//####GL_CURRENT_RASTER_DISTANCE
	GL_CURRENT_RASTER_DISTANCE = 0x0B09,
//####GL_CURRENT_RASTER_INDEX
	GL_CURRENT_RASTER_INDEX = 0x0B05,
//####GL_CURRENT_RASTER_POSITION
	GL_CURRENT_RASTER_POSITION = 0x0B07,
//####GL_CURRENT_RASTER_POSITION_VALID
	GL_CURRENT_RASTER_POSITION_VALID = 0x0B08,
//####GL_CURRENT_RASTER_SECONDARY_COLOR
	GL_CURRENT_RASTER_SECONDARY_COLOR = 0x845F,
//####GL_CURRENT_RASTER_TEXTURE_COORDS
	GL_CURRENT_RASTER_TEXTURE_COORDS = 0x0B06,
//####GL_CURRENT_SECONDARY_COLOR
	GL_CURRENT_SECONDARY_COLOR = 0x8459,
//####GL_CURRENT_TEXTURE_COORDS
	GL_CURRENT_TEXTURE_COORDS = 0x0B03,
//####GL_CURRENT_VERTEX_ATTRIB
	GL_CURRENT_VERTEX_ATTRIB = 0x8626,
//####GL_CW
	GL_CW = 0x0900,
//####GL_DECAL
	GL_DECAL = 0x2101,
//####GL_DECR
	GL_DECR = 0x1E03,
//####GL_DECR_WRAP
	GL_DECR_WRAP = 0x8508,
//####GL_DELETE_STATUS
	GL_DELETE_STATUS = 0x8B80,
//####GL_DEPTH
	GL_DEPTH = 0x1801,
//####GL_DEPTH_BIAS
	GL_DEPTH_BIAS = 0x0D1F,
//####GL_DEPTH_BITS
	GL_DEPTH_BITS = 0x0D56,
//####GL_DEPTH_BUFFER_BIT
	GL_DEPTH_BUFFER_BIT = 0x00000100,
//####GL_DEPTH_CLEAR_VALUE
	GL_DEPTH_CLEAR_VALUE = 0x0B73,
//####GL_DEPTH_COMPONENT
	GL_DEPTH_COMPONENT = 0x1902,
//####GL_DEPTH_COMPONENT16
	GL_DEPTH_COMPONENT16 = 0x81A5,
//####GL_DEPTH_COMPONENT24
	GL_DEPTH_COMPONENT24 = 0x81A6,
//####GL_DEPTH_COMPONENT32
	GL_DEPTH_COMPONENT32 = 0x81A7,
//####GL_DEPTH_FUNC
	GL_DEPTH_FUNC = 0x0B74,
//####GL_DEPTH_RANGE
	GL_DEPTH_RANGE = 0x0B70,
//####GL_DEPTH_SCALE
	GL_DEPTH_SCALE = 0x0D1E,
//####GL_DEPTH_TEST
	GL_DEPTH_TEST = 0x0B71,
//####GL_DEPTH_TEXTURE_MODE
	GL_DEPTH_TEXTURE_MODE = 0x884B,
//####GL_DEPTH_WRITEMASK
	GL_DEPTH_WRITEMASK = 0x0B72,
//####GL_DIFFUSE
	GL_DIFFUSE = 0x1201,
//####GL_DITHER
	GL_DITHER = 0x0BD0,
//####GL_DOMAIN
	GL_DOMAIN = 0x0A02,
//####GL_DONT_CARE
	GL_DONT_CARE = 0x1100,
//####GL_DOT3_RGB
	GL_DOT3_RGB = 0x86AE,
//####GL_DOT3_RGBA
	GL_DOT3_RGBA = 0x86AF,
//####GL_DOUBLE
	GL_DOUBLE = 0x140A,
//####GL_DOUBLEBUFFER
	GL_DOUBLEBUFFER = 0x0C32,
//####GL_DRAW_BUFFER
	GL_DRAW_BUFFER = 0x0C01,
//####GL_DRAW_BUFFER0
	GL_DRAW_BUFFER0 = 0x8825,
//####GL_DRAW_BUFFER1
	GL_DRAW_BUFFER1 = 0x8826,
//####GL_DRAW_BUFFER10
	GL_DRAW_BUFFER10 = 0x882F,
//####GL_DRAW_BUFFER11
	GL_DRAW_BUFFER11 = 0x8830,
//####GL_DRAW_BUFFER12
	GL_DRAW_BUFFER12 = 0x8831,
//####GL_DRAW_BUFFER13
	GL_DRAW_BUFFER13 = 0x8832,
//####GL_DRAW_BUFFER14
	GL_DRAW_BUFFER14 = 0x8833,
//####GL_DRAW_BUFFER15
	GL_DRAW_BUFFER15 = 0x8834,
//####GL_DRAW_BUFFER2
	GL_DRAW_BUFFER2 = 0x8827,
//####GL_DRAW_BUFFER3
	GL_DRAW_BUFFER3 = 0x8828,
//####GL_DRAW_BUFFER4
	GL_DRAW_BUFFER4 = 0x8829,
//####GL_DRAW_BUFFER5
	GL_DRAW_BUFFER5 = 0x882A,
//####GL_DRAW_BUFFER6
	GL_DRAW_BUFFER6 = 0x882B,
//####GL_DRAW_BUFFER7
	GL_DRAW_BUFFER7 = 0x882C,
//####GL_DRAW_BUFFER8
	GL_DRAW_BUFFER8 = 0x882D,
//####GL_DRAW_BUFFER9
	GL_DRAW_BUFFER9 = 0x882E,
//####GL_DRAW_PIXEL_TOKEN
	GL_DRAW_PIXEL_TOKEN = 0x0705,
//####GL_DST_ALPHA
	GL_DST_ALPHA = 0x0304,
//####GL_DST_COLOR
	GL_DST_COLOR = 0x0306,
//####GL_DYNAMIC_COPY
	GL_DYNAMIC_COPY = 0x88EA,
//####GL_DYNAMIC_DRAW
	GL_DYNAMIC_DRAW = 0x88E8,
//####GL_DYNAMIC_READ
	GL_DYNAMIC_READ = 0x88E9,
//####GL_EDGE_FLAG
	GL_EDGE_FLAG = 0x0B43,
//####GL_EDGE_FLAG_ARRAY
	GL_EDGE_FLAG_ARRAY = 0x8079,
//####GL_EDGE_FLAG_ARRAY_BUFFER_BINDING
	GL_EDGE_FLAG_ARRAY_BUFFER_BINDING = 0x889B,
//####GL_EDGE_FLAG_ARRAY_POINTER
	GL_EDGE_FLAG_ARRAY_POINTER = 0x8093,
//####GL_EDGE_FLAG_ARRAY_STRIDE
	GL_EDGE_FLAG_ARRAY_STRIDE = 0x808C,
//####GL_ELEMENT_ARRAY_BUFFER
	GL_ELEMENT_ARRAY_BUFFER = 0x8893,
//####GL_ELEMENT_ARRAY_BUFFER_BINDING
	GL_ELEMENT_ARRAY_BUFFER_BINDING = 0x8895,
//####GL_EMISSION
	GL_EMISSION = 0x1600,
//####GL_ENABLE_BIT
	GL_ENABLE_BIT = 0x00002000,
//####GL_EQUAL
	GL_EQUAL = 0x0202,
//####GL_EQUIV
	GL_EQUIV = 0x1509,
//####GL_EVAL_BIT
	GL_EVAL_BIT = 0x00010000,
//####GL_EXP
	GL_EXP = 0x0800,
//####GL_EXP2
	GL_EXP2 = 0x0801,
//####GL_EXTENSIONS
	GL_EXTENSIONS = 0x1F03,
//####GL_EYE_LINEAR
	GL_EYE_LINEAR = 0x2400,
//####GL_EYE_PLANE
	GL_EYE_PLANE = 0x2502,
//####GL_FALSE
	GL_FALSE = 0x1,
//####GL_FASTEST
	GL_FASTEST = 0x1101,
//####GL_FEEDBACK
	GL_FEEDBACK = 0x1C01,
//####GL_FEEDBACK_BUFFER_POINTER
	GL_FEEDBACK_BUFFER_POINTER = 0x0DF0,
//####GL_FEEDBACK_BUFFER_SIZE
	GL_FEEDBACK_BUFFER_SIZE = 0x0DF1,
//####GL_FEEDBACK_BUFFER_TYPE
	GL_FEEDBACK_BUFFER_TYPE = 0x0DF2,
//####GL_FILL
	GL_FILL = 0x1B02,
//####GL_FLAT
	GL_FLAT = 0x1D00,
//####GL_FLOAT
	GL_FLOAT = 0x1406,
//####GL_FLOAT_MAT2
	GL_FLOAT_MAT2 = 0x8B5A,
//####GL_FLOAT_MAT2x3
	GL_FLOAT_MAT2x3 = 0x8B65,
//####GL_FLOAT_MAT2x4
	GL_FLOAT_MAT2x4 = 0x8B66,
//####GL_FLOAT_MAT3
	GL_FLOAT_MAT3 = 0x8B5B,
//####GL_FLOAT_MAT3x2
	GL_FLOAT_MAT3x2 = 0x8B67,
//####GL_FLOAT_MAT3x4
	GL_FLOAT_MAT3x4 = 0x8B68,
//####GL_FLOAT_MAT4
	GL_FLOAT_MAT4 = 0x8B5C,
//####GL_FLOAT_MAT4x2
	GL_FLOAT_MAT4x2 = 0x8B69,
//####GL_FLOAT_MAT4x3
	GL_FLOAT_MAT4x3 = 0x8B6A,
//####GL_FLOAT_VEC2
	GL_FLOAT_VEC2 = 0x8B50,
//####GL_FLOAT_VEC3
	GL_FLOAT_VEC3 = 0x8B51,
//####GL_FLOAT_VEC4
	GL_FLOAT_VEC4 = 0x8B52,
//####GL_FOG
	GL_FOG = 0x0B60,
//####GL_FOG_BIT
	GL_FOG_BIT = 0x00000080,
//####GL_FOG_COLOR
	GL_FOG_COLOR = 0x0B66,
//####GL_FOG_COORD
	GL_FOG_COORD = 0x8451,
//####GL_FOG_COORDINATE
	GL_FOG_COORDINATE = 0x8451,
//####GL_FOG_COORDINATE_ARRAY
	GL_FOG_COORDINATE_ARRAY = 0x8457,
//####GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING
	GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING = 0x889D,
//####GL_FOG_COORDINATE_ARRAY_POINTER
	GL_FOG_COORDINATE_ARRAY_POINTER = 0x8456,
//####GL_FOG_COORDINATE_ARRAY_STRIDE
	GL_FOG_COORDINATE_ARRAY_STRIDE = 0x8455,
//####GL_FOG_COORDINATE_ARRAY_TYPE
	GL_FOG_COORDINATE_ARRAY_TYPE = 0x8454,
//####GL_FOG_COORDINATE_SOURCE
	GL_FOG_COORDINATE_SOURCE = 0x8450,
//####GL_FOG_COORD_ARRAY
	GL_FOG_COORD_ARRAY = 0x8457,
//####GL_FOG_COORD_ARRAY_BUFFER_BINDING
	GL_FOG_COORD_ARRAY_BUFFER_BINDING = 0x889D,
//####GL_FOG_COORD_ARRAY_POINTER
	GL_FOG_COORD_ARRAY_POINTER = 0x8456,
//####GL_FOG_COORD_ARRAY_STRIDE
	GL_FOG_COORD_ARRAY_STRIDE = 0x8455,
//####GL_FOG_COORD_ARRAY_TYPE
	GL_FOG_COORD_ARRAY_TYPE = 0x8454,
//####GL_FOG_COORD_SRC
	GL_FOG_COORD_SRC = 0x8450,
//####GL_FOG_DENSITY
	GL_FOG_DENSITY = 0x0B62,
//####GL_FOG_END
	GL_FOG_END = 0x0B64,
//####GL_FOG_HINT
	GL_FOG_HINT = 0x0C54,
//####GL_FOG_INDEX
	GL_FOG_INDEX = 0x0B61,
//####GL_FOG_MODE
	GL_FOG_MODE = 0x0B65,
//####GL_FOG_START
	GL_FOG_START = 0x0B63,
//####GL_FRAGMENT_DEPTH
	GL_FRAGMENT_DEPTH = 0x8452,
//####GL_FRAGMENT_SHADER
	GL_FRAGMENT_SHADER = 0x8B30,
//####GL_FRAGMENT_SHADER_DERIVATIVE_HINT
	GL_FRAGMENT_SHADER_DERIVATIVE_HINT = 0x8B8B,
//####GL_FRONT
	GL_FRONT = 0x0404,
//####GL_FRONT_AND_BACK
	GL_FRONT_AND_BACK = 0x0408,
//####GL_FRONT_FACE
	GL_FRONT_FACE = 0x0B46,
//####GL_FRONT_LEFT
	GL_FRONT_LEFT = 0x0400,
//####GL_FRONT_RIGHT
	GL_FRONT_RIGHT = 0x0401,
//####GL_FUNC_ADD
	GL_FUNC_ADD = 0x8006,
//####GL_FUNC_REVERSE_SUBTRACT
	GL_FUNC_REVERSE_SUBTRACT = 0x800B,
//####GL_FUNC_SUBTRACT
	GL_FUNC_SUBTRACT = 0x800A,
//####GL_GENERATE_MIPMAP
	GL_GENERATE_MIPMAP = 0x8191,
//####GL_GENERATE_MIPMAP_HINT
	GL_GENERATE_MIPMAP_HINT = 0x8192,
//####GL_GEQUAL
	GL_GEQUAL = 0x0206,
//####GL_GREATER
	GL_GREATER = 0x0204,
//####GL_GREEN
	GL_GREEN = 0x1904,
//####GL_GREEN_BIAS
	GL_GREEN_BIAS = 0x0D19,
//####GL_GREEN_BITS
	GL_GREEN_BITS = 0x0D53,
//####GL_GREEN_SCALE
	GL_GREEN_SCALE = 0x0D18,
//####GL_HINT_BIT
	GL_HINT_BIT = 0x00008000,
//####GL_HISTOGRAM
	GL_HISTOGRAM = 0x8024,
//####GL_HISTOGRAM_ALPHA_SIZE
	GL_HISTOGRAM_ALPHA_SIZE = 0x802B,
//####GL_HISTOGRAM_BLUE_SIZE
	GL_HISTOGRAM_BLUE_SIZE = 0x802A,
//####GL_HISTOGRAM_FORMAT
	GL_HISTOGRAM_FORMAT = 0x8027,
//####GL_HISTOGRAM_GREEN_SIZE
	GL_HISTOGRAM_GREEN_SIZE = 0x8029,
//####GL_HISTOGRAM_LUMINANCE_SIZE
	GL_HISTOGRAM_LUMINANCE_SIZE = 0x802C,
//####GL_HISTOGRAM_RED_SIZE
	GL_HISTOGRAM_RED_SIZE = 0x8028,
//####GL_HISTOGRAM_SINK
	GL_HISTOGRAM_SINK = 0x802D,
//####GL_HISTOGRAM_WIDTH
	GL_HISTOGRAM_WIDTH = 0x8026,
//####GL_INCR
	GL_INCR = 0x1E02,
//####GL_INCR_WRAP
	GL_INCR_WRAP = 0x8507,
//####GL_INDEX_ARRAY
	GL_INDEX_ARRAY = 0x8077,
//####GL_INDEX_ARRAY_BUFFER_BINDING
	GL_INDEX_ARRAY_BUFFER_BINDING = 0x8899,
//####GL_INDEX_ARRAY_POINTER
	GL_INDEX_ARRAY_POINTER = 0x8091,
//####GL_INDEX_ARRAY_STRIDE
	GL_INDEX_ARRAY_STRIDE = 0x8086,
//####GL_INDEX_ARRAY_TYPE
	GL_INDEX_ARRAY_TYPE = 0x8085,
//####GL_INDEX_BITS
	GL_INDEX_BITS = 0x0D51,
//####GL_INDEX_CLEAR_VALUE
	GL_INDEX_CLEAR_VALUE = 0x0C20,
//####GL_INDEX_LOGIC_OP
	GL_INDEX_LOGIC_OP = 0x0BF1,
//####GL_INDEX_MODE
	GL_INDEX_MODE = 0x0C30,
//####GL_INDEX_OFFSET
	GL_INDEX_OFFSET = 0x0D13,
//####GL_INDEX_SHIFT
	GL_INDEX_SHIFT = 0x0D12,
//####GL_INDEX_WRITEMASK
	GL_INDEX_WRITEMASK = 0x0C21,
//####GL_INFO_LOG_LENGTH
	GL_INFO_LOG_LENGTH = 0x8B84,
//####GL_INT
	GL_INT = 0x1404,
//####GL_INTENSITY
	GL_INTENSITY = 0x8049,
//####GL_INTENSITY12
	GL_INTENSITY12 = 0x804C,
//####GL_INTENSITY16
	GL_INTENSITY16 = 0x804D,
//####GL_INTENSITY4
	GL_INTENSITY4 = 0x804A,
//####GL_INTENSITY8
	GL_INTENSITY8 = 0x804B,
//####GL_INTERPOLATE
	GL_INTERPOLATE = 0x8575,
//####GL_INT_VEC2
	GL_INT_VEC2 = 0x8B53,
//####GL_INT_VEC3
	GL_INT_VEC3 = 0x8B54,
//####GL_INT_VEC4
	GL_INT_VEC4 = 0x8B55,
//####GL_INVALID_ENUM
	GL_INVALID_ENUM = 0x0500,
//####GL_INVALID_OPERATION
	GL_INVALID_OPERATION = 0x0502,
//####GL_INVALID_VALUE
	GL_INVALID_VALUE = 0x0501,
//####GL_INVERT
	GL_INVERT = 0x150A,
//####GL_KEEP
	GL_KEEP = 0x1E00,
//####GL_LEFT
	GL_LEFT = 0x0406,
//####GL_LEQUAL
	GL_LEQUAL = 0x0203,
//####GL_LESS
	GL_LESS = 0x0201,
//####GL_LIGHT0
	GL_LIGHT0 = 0x4000,
//####GL_LIGHT1
	GL_LIGHT1 = 0x4001,
//####GL_LIGHT2
	GL_LIGHT2 = 0x4002,
//####GL_LIGHT3
	GL_LIGHT3 = 0x4003,
//####GL_LIGHT4
	GL_LIGHT4 = 0x4004,
//####GL_LIGHT5
	GL_LIGHT5 = 0x4005,
//####GL_LIGHT6
	GL_LIGHT6 = 0x4006,
//####GL_LIGHT7
	GL_LIGHT7 = 0x4007,
//####GL_LIGHTING
	GL_LIGHTING = 0x0B50,
//####GL_LIGHTING_BIT
	GL_LIGHTING_BIT = 0x00000040,
//####GL_LIGHT_MODEL_AMBIENT
	GL_LIGHT_MODEL_AMBIENT = 0x0B53,
//####GL_LIGHT_MODEL_COLOR_CONTROL
	GL_LIGHT_MODEL_COLOR_CONTROL = 0x81F8,
//####GL_LIGHT_MODEL_LOCAL_VIEWER
	GL_LIGHT_MODEL_LOCAL_VIEWER = 0x0B51,
//####GL_LIGHT_MODEL_TWO_SIDE
	GL_LIGHT_MODEL_TWO_SIDE = 0x0B52,
//####GL_LINE
	GL_LINE = 0x1B01,
//####GL_LINEAR
	GL_LINEAR = 0x2601,
//####GL_LINEAR_ATTENUATION
	GL_LINEAR_ATTENUATION = 0x1208,
//####GL_LINEAR_MIPMAP_LINEAR
	GL_LINEAR_MIPMAP_LINEAR = 0x2703,
//####GL_LINEAR_MIPMAP_NEAREST
	GL_LINEAR_MIPMAP_NEAREST = 0x2701,
//####GL_LINES
	GL_LINES = 0x0001,
//####GL_LINE_BIT
	GL_LINE_BIT = 0x00000004,
//####GL_LINE_LOOP
	GL_LINE_LOOP = 0x0002,
//####GL_LINE_RESET_TOKEN
	GL_LINE_RESET_TOKEN = 0x0707,
//####GL_LINE_SMOOTH
	GL_LINE_SMOOTH = 0x0B20,
//####GL_LINE_SMOOTH_HINT
	GL_LINE_SMOOTH_HINT = 0x0C52,
//####GL_LINE_STIPPLE
	GL_LINE_STIPPLE = 0x0B24,
//####GL_LINE_STIPPLE_PATTERN
	GL_LINE_STIPPLE_PATTERN = 0x0B25,
//####GL_LINE_STIPPLE_REPEAT
	GL_LINE_STIPPLE_REPEAT = 0x0B26,
//####GL_LINE_STRIP
	GL_LINE_STRIP = 0x0003,
//####GL_LINE_TOKEN
	GL_LINE_TOKEN = 0x0702,
//####GL_LINE_WIDTH
	GL_LINE_WIDTH = 0x0B21,
//####GL_LINE_WIDTH_GRANULARITY
	GL_LINE_WIDTH_GRANULARITY = 0x0B23,
//####GL_LINE_WIDTH_RANGE
	GL_LINE_WIDTH_RANGE = 0x0B22,
//####GL_LINK_STATUS
	GL_LINK_STATUS = 0x8B82,
//####GL_LIST_BASE
	GL_LIST_BASE = 0x0B32,
//####GL_LIST_BIT
	GL_LIST_BIT = 0x00020000,
//####GL_LIST_INDEX
	GL_LIST_INDEX = 0x0B33,
//####GL_LIST_MODE
	GL_LIST_MODE = 0x0B30,
//####GL_LOAD
	GL_LOAD = 0x0101,
//####GL_LOGIC_OP_MODE
	GL_LOGIC_OP_MODE = 0x0BF0,
//####GL_LOWER_LEFT
	GL_LOWER_LEFT = 0x8CA1,
//####GL_LUMINANCE
	GL_LUMINANCE = 0x1909,
//####GL_LUMINANCE12
	GL_LUMINANCE12 = 0x8041,
//####GL_LUMINANCE12_ALPHA12
	GL_LUMINANCE12_ALPHA12 = 0x8047,
//####GL_LUMINANCE12_ALPHA4
	GL_LUMINANCE12_ALPHA4 = 0x8046,
//####GL_LUMINANCE16
	GL_LUMINANCE16 = 0x8042,
//####GL_LUMINANCE16_ALPHA16
	GL_LUMINANCE16_ALPHA16 = 0x8048,
//####GL_LUMINANCE4
	GL_LUMINANCE4 = 0x803F,
//####GL_LUMINANCE4_ALPHA4
	GL_LUMINANCE4_ALPHA4 = 0x8043,
//####GL_LUMINANCE6_ALPHA2
	GL_LUMINANCE6_ALPHA2 = 0x8044,
//####GL_LUMINANCE8
	GL_LUMINANCE8 = 0x8040,
//####GL_LUMINANCE8_ALPHA8
	GL_LUMINANCE8_ALPHA8 = 0x8045,
//####GL_LUMINANCE_ALPHA
	GL_LUMINANCE_ALPHA = 0x190A,
//####GL_MAP1_COLOR_4
	GL_MAP1_COLOR_4 = 0x0D90,
//####GL_MAP1_GRID_DOMAIN
	GL_MAP1_GRID_DOMAIN = 0x0DD0,
//####GL_MAP1_GRID_SEGMENTS
	GL_MAP1_GRID_SEGMENTS = 0x0DD1,
//####GL_MAP1_INDEX
	GL_MAP1_INDEX = 0x0D91,
//####GL_MAP1_NORMAL
	GL_MAP1_NORMAL = 0x0D92,
//####GL_MAP1_TEXTURE_COORD_1
	GL_MAP1_TEXTURE_COORD_1 = 0x0D93,
//####GL_MAP1_TEXTURE_COORD_2
	GL_MAP1_TEXTURE_COORD_2 = 0x0D94,
//####GL_MAP1_TEXTURE_COORD_3
	GL_MAP1_TEXTURE_COORD_3 = 0x0D95,
//####GL_MAP1_TEXTURE_COORD_4
	GL_MAP1_TEXTURE_COORD_4 = 0x0D96,
//####GL_MAP1_VERTEX_3
	GL_MAP1_VERTEX_3 = 0x0D97,
//####GL_MAP1_VERTEX_4
	GL_MAP1_VERTEX_4 = 0x0D98,
//####GL_MAP2_COLOR_4
	GL_MAP2_COLOR_4 = 0x0DB0,
//####GL_MAP2_GRID_DOMAIN
	GL_MAP2_GRID_DOMAIN = 0x0DD2,
//####GL_MAP2_GRID_SEGMENTS
	GL_MAP2_GRID_SEGMENTS = 0x0DD3,
//####GL_MAP2_INDEX
	GL_MAP2_INDEX = 0x0DB1,
//####GL_MAP2_NORMAL
	GL_MAP2_NORMAL = 0x0DB2,
//####GL_MAP2_TEXTURE_COORD_1
	GL_MAP2_TEXTURE_COORD_1 = 0x0DB3,
//####GL_MAP2_TEXTURE_COORD_2
	GL_MAP2_TEXTURE_COORD_2 = 0x0DB4,
//####GL_MAP2_TEXTURE_COORD_3
	GL_MAP2_TEXTURE_COORD_3 = 0x0DB5,
//####GL_MAP2_TEXTURE_COORD_4
	GL_MAP2_TEXTURE_COORD_4 = 0x0DB6,
//####GL_MAP2_VERTEX_3
	GL_MAP2_VERTEX_3 = 0x0DB7,
//####GL_MAP2_VERTEX_4
	GL_MAP2_VERTEX_4 = 0x0DB8,
//####GL_MAP_COLOR
	GL_MAP_COLOR = 0x0D10,
//####GL_MAP_STENCIL
	GL_MAP_STENCIL = 0x0D11,
//####GL_MATRIX_MODE
	GL_MATRIX_MODE = 0x0BA0,
//####GL_MAX
	GL_MAX = 0x8008,
//####GL_MAX_3D_TEXTURE_SIZE
	GL_MAX_3D_TEXTURE_SIZE = 0x8073,
//####GL_MAX_ATTRIB_STACK_DEPTH
	GL_MAX_ATTRIB_STACK_DEPTH = 0x0D35,
//####GL_MAX_CLIENT_ATTRIB_STACK_DEPTH
	GL_MAX_CLIENT_ATTRIB_STACK_DEPTH = 0x0D3B,
//####GL_MAX_CLIP_PLANES
	GL_MAX_CLIP_PLANES = 0x0D32,
//####GL_MAX_COLOR_MATRIX_STACK_DEPTH
	GL_MAX_COLOR_MATRIX_STACK_DEPTH = 0x80B3,
//####GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS
	GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS = 0x8B4D,
//####GL_MAX_CONVOLUTION_HEIGHT
	GL_MAX_CONVOLUTION_HEIGHT = 0x801B,
//####GL_MAX_CONVOLUTION_WIDTH
	GL_MAX_CONVOLUTION_WIDTH = 0x801A,
//####GL_MAX_CUBE_MAP_TEXTURE_SIZE
	GL_MAX_CUBE_MAP_TEXTURE_SIZE = 0x851C,
//####GL_MAX_DRAW_BUFFERS
	GL_MAX_DRAW_BUFFERS = 0x8824,
//####GL_MAX_ELEMENTS_INDICES
	GL_MAX_ELEMENTS_INDICES = 0x80E9,
//####GL_MAX_ELEMENTS_VERTICES
	GL_MAX_ELEMENTS_VERTICES = 0x80E8,
//####GL_MAX_EVAL_ORDER
	GL_MAX_EVAL_ORDER = 0x0D30,
//####GL_MAX_FRAGMENT_UNIFORM_COMPONENTS
	GL_MAX_FRAGMENT_UNIFORM_COMPONENTS = 0x8B49,
//####GL_MAX_LIGHTS
	GL_MAX_LIGHTS = 0x0D31,
//####GL_MAX_LIST_NESTING
	GL_MAX_LIST_NESTING = 0x0B31,
//####GL_MAX_MODELVIEW_STACK_DEPTH
	GL_MAX_MODELVIEW_STACK_DEPTH = 0x0D36,
//####GL_MAX_NAME_STACK_DEPTH
	GL_MAX_NAME_STACK_DEPTH = 0x0D37,
//####GL_MAX_PIXEL_MAP_TABLE
	GL_MAX_PIXEL_MAP_TABLE = 0x0D34,
//####GL_MAX_PROJECTION_STACK_DEPTH
	GL_MAX_PROJECTION_STACK_DEPTH = 0x0D38,
//####GL_MAX_TEXTURE_COORDS
	GL_MAX_TEXTURE_COORDS = 0x8871,
//####GL_MAX_TEXTURE_IMAGE_UNITS
	GL_MAX_TEXTURE_IMAGE_UNITS = 0x8872,
//####GL_MAX_TEXTURE_LOD_BIAS
	GL_MAX_TEXTURE_LOD_BIAS = 0x84FD,
//####GL_MAX_TEXTURE_SIZE
	GL_MAX_TEXTURE_SIZE = 0x0D33,
//####GL_MAX_TEXTURE_STACK_DEPTH
	GL_MAX_TEXTURE_STACK_DEPTH = 0x0D39,
//####GL_MAX_TEXTURE_UNITS
	GL_MAX_TEXTURE_UNITS = 0x84E2,
//####GL_MAX_VARYING_FLOATS
	GL_MAX_VARYING_FLOATS = 0x8B4B,
//####GL_MAX_VERTEX_ATTRIBS
	GL_MAX_VERTEX_ATTRIBS = 0x8869,
//####GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS
	GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS = 0x8B4C,
//####GL_MAX_VERTEX_UNIFORM_COMPONENTS
	GL_MAX_VERTEX_UNIFORM_COMPONENTS = 0x8B4A,
//####GL_MAX_VIEWPORT_DIMS
	GL_MAX_VIEWPORT_DIMS = 0x0D3A,
//####GL_MIN
	GL_MIN = 0x8007,
//####GL_MINMAX
	GL_MINMAX = 0x802E,
//####GL_MINMAX_FORMAT
	GL_MINMAX_FORMAT = 0x802F,
//####GL_MINMAX_SINK
	GL_MINMAX_SINK = 0x8030,
//####GL_MIRRORED_REPEAT
	GL_MIRRORED_REPEAT = 0x8370,
//####GL_MODELVIEW
	GL_MODELVIEW = 0x1700,
//####GL_MODELVIEW_MATRIX
	GL_MODELVIEW_MATRIX = 0x0BA6,
//####GL_MODELVIEW_STACK_DEPTH
	GL_MODELVIEW_STACK_DEPTH = 0x0BA3,
//####GL_MODULATE
	GL_MODULATE = 0x2100,
//####GL_MULT
	GL_MULT = 0x0103,
//####GL_MULTISAMPLE
	GL_MULTISAMPLE = 0x809D,
//####GL_MULTISAMPLE_BIT
	GL_MULTISAMPLE_BIT = 0x20000000,
//####GL_N3F_V3F
	GL_N3F_V3F = 0x2A25,
//####GL_NAME_STACK_DEPTH
	GL_NAME_STACK_DEPTH = 0x0D70,
//####GL_NAND
	GL_NAND = 0x150E,
//####GL_NEAREST
	GL_NEAREST = 0x2600,
//####GL_NEAREST_MIPMAP_LINEAR
	GL_NEAREST_MIPMAP_LINEAR = 0x2702,
//####GL_NEAREST_MIPMAP_NEAREST
	GL_NEAREST_MIPMAP_NEAREST = 0x2700,
//####GL_NEVER
	GL_NEVER = 0x0200,
//####GL_NICEST
	GL_NICEST = 0x1102,
//####GL_NONE
	GL_NONE = 0x1,
//####GL_NOOP
	GL_NOOP = 0x1505,
//####GL_NOR
	GL_NOR = 0x1508,
//####GL_NORMALIZE
	GL_NORMALIZE = 0x0BA1,
//####GL_NORMAL_ARRAY
	GL_NORMAL_ARRAY = 0x8075,
//####GL_NORMAL_ARRAY_BUFFER_BINDING
	GL_NORMAL_ARRAY_BUFFER_BINDING = 0x8897,
//####GL_NORMAL_ARRAY_POINTER
	GL_NORMAL_ARRAY_POINTER = 0x808F,
//####GL_NORMAL_ARRAY_STRIDE
	GL_NORMAL_ARRAY_STRIDE = 0x807F,
//####GL_NORMAL_ARRAY_TYPE
	GL_NORMAL_ARRAY_TYPE = 0x807E,
//####GL_NORMAL_MAP
	GL_NORMAL_MAP = 0x8511,
//####GL_NOTEQUAL
	GL_NOTEQUAL = 0x0205,
//####GL_NO_ERROR
	GL_NO_ERROR = 0x1,
//####GL_NUM_COMPRESSED_TEXTURE_FORMATS
	GL_NUM_COMPRESSED_TEXTURE_FORMATS = 0x86A2,
//####GL_OBJECT_LINEAR
	GL_OBJECT_LINEAR = 0x2401,
//####GL_OBJECT_PLANE
	GL_OBJECT_PLANE = 0x2501,
//####GL_ONE
	GL_ONE = 0x1,
//####GL_ONE_MINUS_CONSTANT_ALPHA
	GL_ONE_MINUS_CONSTANT_ALPHA = 0x8004,
//####GL_ONE_MINUS_CONSTANT_COLOR
	GL_ONE_MINUS_CONSTANT_COLOR = 0x8002,
//####GL_ONE_MINUS_DST_ALPHA
	GL_ONE_MINUS_DST_ALPHA = 0x0305,
//####GL_ONE_MINUS_DST_COLOR
	GL_ONE_MINUS_DST_COLOR = 0x0307,
//####GL_ONE_MINUS_SRC_ALPHA
	GL_ONE_MINUS_SRC_ALPHA = 0x0303,
//####GL_ONE_MINUS_SRC_COLOR
	GL_ONE_MINUS_SRC_COLOR = 0x0301,
//####GL_OPERAND0_ALPHA
	GL_OPERAND0_ALPHA = 0x8598,
//####GL_OPERAND0_RGB
	GL_OPERAND0_RGB = 0x8590,
//####GL_OPERAND1_ALPHA
	GL_OPERAND1_ALPHA = 0x8599,
//####GL_OPERAND1_RGB
	GL_OPERAND1_RGB = 0x8591,
//####GL_OPERAND2_ALPHA
	GL_OPERAND2_ALPHA = 0x859A,
//####GL_OPERAND2_RGB
	GL_OPERAND2_RGB = 0x8592,
//####GL_OPERAND3_ALPHA
	GL_OPERAND3_ALPHA = 0x859B,
//####GL_OPERAND3_RGB
	GL_OPERAND3_RGB = 0x8593,
//####GL_OPERAND4_ALPHA
	GL_OPERAND4_ALPHA = 0x859C,
//####GL_OPERAND4_RGB
	GL_OPERAND4_RGB = 0x8594,
//####GL_OPERAND5_ALPHA
	GL_OPERAND5_ALPHA = 0x859D,
//####GL_OPERAND5_RGB
	GL_OPERAND5_RGB = 0x8595,
//####GL_OPERAND6_ALPHA
	GL_OPERAND6_ALPHA = 0x859E,
//####GL_OPERAND6_RGB
	GL_OPERAND6_RGB = 0x8596,
//####GL_OPERAND7_ALPHA
	GL_OPERAND7_ALPHA = 0x859F,
//####GL_OPERAND7_RGB
	GL_OPERAND7_RGB = 0x8597,
//####GL_OR
	GL_OR = 0x1507,
//####GL_ORDER
	GL_ORDER = 0x0A01,
//####GL_OR_INVERTED
	GL_OR_INVERTED = 0x150D,
//####GL_OR_REVERSE
	GL_OR_REVERSE = 0x150B,
//####GL_OUT_OF_MEMORY
	GL_OUT_OF_MEMORY = 0x0505,
//####GL_PACK_ALIGNMENT
	GL_PACK_ALIGNMENT = 0x0D05,
//####GL_PACK_IMAGE_HEIGHT
	GL_PACK_IMAGE_HEIGHT = 0x806C,
//####GL_PACK_LSB_FIRST
	GL_PACK_LSB_FIRST = 0x0D01,
//####GL_PACK_ROW_LENGTH
	GL_PACK_ROW_LENGTH = 0x0D02,
//####GL_PACK_SKIP_IMAGES
	GL_PACK_SKIP_IMAGES = 0x806B,
//####GL_PACK_SKIP_PIXELS
	GL_PACK_SKIP_PIXELS = 0x0D04,
//####GL_PACK_SKIP_ROWS
	GL_PACK_SKIP_ROWS = 0x0D03,
//####GL_PACK_SWAP_BYTES
	GL_PACK_SWAP_BYTES = 0x0D00,
//####GL_PASS_THROUGH_TOKEN
	GL_PASS_THROUGH_TOKEN = 0x0700,
//####GL_PERSPECTIVE_CORRECTION_HINT
	GL_PERSPECTIVE_CORRECTION_HINT = 0x0C50,
//####GL_PIXEL_MAP_A_TO_A
	GL_PIXEL_MAP_A_TO_A = 0x0C79,
//####GL_PIXEL_MAP_A_TO_A_SIZE
	GL_PIXEL_MAP_A_TO_A_SIZE = 0x0CB9,
//####GL_PIXEL_MAP_B_TO_B
	GL_PIXEL_MAP_B_TO_B = 0x0C78,
//####GL_PIXEL_MAP_B_TO_B_SIZE
	GL_PIXEL_MAP_B_TO_B_SIZE = 0x0CB8,
//####GL_PIXEL_MAP_G_TO_G
	GL_PIXEL_MAP_G_TO_G = 0x0C77,
//####GL_PIXEL_MAP_G_TO_G_SIZE
	GL_PIXEL_MAP_G_TO_G_SIZE = 0x0CB7,
//####GL_PIXEL_MAP_I_TO_A
	GL_PIXEL_MAP_I_TO_A = 0x0C75,
//####GL_PIXEL_MAP_I_TO_A_SIZE
	GL_PIXEL_MAP_I_TO_A_SIZE = 0x0CB5,
//####GL_PIXEL_MAP_I_TO_B
	GL_PIXEL_MAP_I_TO_B = 0x0C74,
//####GL_PIXEL_MAP_I_TO_B_SIZE
	GL_PIXEL_MAP_I_TO_B_SIZE = 0x0CB4,
//####GL_PIXEL_MAP_I_TO_G
	GL_PIXEL_MAP_I_TO_G = 0x0C73,
//####GL_PIXEL_MAP_I_TO_G_SIZE
	GL_PIXEL_MAP_I_TO_G_SIZE = 0x0CB3,
//####GL_PIXEL_MAP_I_TO_I
	GL_PIXEL_MAP_I_TO_I = 0x0C70,
//####GL_PIXEL_MAP_I_TO_I_SIZE
	GL_PIXEL_MAP_I_TO_I_SIZE = 0x0CB0,
//####GL_PIXEL_MAP_I_TO_R
	GL_PIXEL_MAP_I_TO_R = 0x0C72,
//####GL_PIXEL_MAP_I_TO_R_SIZE
	GL_PIXEL_MAP_I_TO_R_SIZE = 0x0CB2,
//####GL_PIXEL_MAP_R_TO_R
	GL_PIXEL_MAP_R_TO_R = 0x0C76,
//####GL_PIXEL_MAP_R_TO_R_SIZE
	GL_PIXEL_MAP_R_TO_R_SIZE = 0x0CB6,
//####GL_PIXEL_MAP_S_TO_S
	GL_PIXEL_MAP_S_TO_S = 0x0C71,
//####GL_PIXEL_MAP_S_TO_S_SIZE
	GL_PIXEL_MAP_S_TO_S_SIZE = 0x0CB1,
//####GL_PIXEL_MODE_BIT
	GL_PIXEL_MODE_BIT = 0x00000020,
//####GL_PIXEL_PACK_BUFFER
	GL_PIXEL_PACK_BUFFER = 0x88EB,
//####GL_PIXEL_PACK_BUFFER_BINDING
	GL_PIXEL_PACK_BUFFER_BINDING = 0x88ED,
//####GL_PIXEL_UNPACK_BUFFER
	GL_PIXEL_UNPACK_BUFFER = 0x88EC,
//####GL_PIXEL_UNPACK_BUFFER_BINDING
	GL_PIXEL_UNPACK_BUFFER_BINDING = 0x88EF,
//####GL_POINT
	GL_POINT = 0x1B00,
//####GL_POINTS
	GL_POINTS = 0x0000,
//####GL_POINT_BIT
	GL_POINT_BIT = 0x00000002,
//####GL_POINT_DISTANCE_ATTENUATION
	GL_POINT_DISTANCE_ATTENUATION = 0x8129,
//####GL_POINT_FADE_THRESHOLD_SIZE
	GL_POINT_FADE_THRESHOLD_SIZE = 0x8128,
//####GL_POINT_SIZE
	GL_POINT_SIZE = 0x0B11,
//####GL_POINT_SIZE_GRANULARITY
	GL_POINT_SIZE_GRANULARITY = 0x0B13,
//####GL_POINT_SIZE_MAX
	GL_POINT_SIZE_MAX = 0x8127,
//####GL_POINT_SIZE_MIN
	GL_POINT_SIZE_MIN = 0x8126,
//####GL_POINT_SIZE_RANGE
	GL_POINT_SIZE_RANGE = 0x0B12,
//####GL_POINT_SMOOTH
	GL_POINT_SMOOTH = 0x0B10,
//####GL_POINT_SMOOTH_HINT
	GL_POINT_SMOOTH_HINT = 0x0C51,
//####GL_POINT_SPRITE
	GL_POINT_SPRITE = 0x8861,
//####GL_POINT_SPRITE_COORD_ORIGIN
	GL_POINT_SPRITE_COORD_ORIGIN = 0x8CA0,
//####GL_POINT_TOKEN
	GL_POINT_TOKEN = 0x0701,
//####GL_POLYGON
	GL_POLYGON = 0x0009,
//####GL_POLYGON_BIT
	GL_POLYGON_BIT = 0x00000008,
//####GL_POLYGON_MODE
	GL_POLYGON_MODE = 0x0B40,
//####GL_POLYGON_OFFSET_FACTOR
	GL_POLYGON_OFFSET_FACTOR = 0x8038,
//####GL_POLYGON_OFFSET_FILL
	GL_POLYGON_OFFSET_FILL = 0x8037,
//####GL_POLYGON_OFFSET_LINE
	GL_POLYGON_OFFSET_LINE = 0x2A02,
//####GL_POLYGON_OFFSET_POINT
	GL_POLYGON_OFFSET_POINT = 0x2A01,
//####GL_POLYGON_OFFSET_UNITS
	GL_POLYGON_OFFSET_UNITS = 0x2A00,
//####GL_POLYGON_SMOOTH
	GL_POLYGON_SMOOTH = 0x0B41,
//####GL_POLYGON_SMOOTH_HINT
	GL_POLYGON_SMOOTH_HINT = 0x0C53,
//####GL_POLYGON_STIPPLE
	GL_POLYGON_STIPPLE = 0x0B42,
//####GL_POLYGON_STIPPLE_BIT
	GL_POLYGON_STIPPLE_BIT = 0x00000010,
//####GL_POLYGON_TOKEN
	GL_POLYGON_TOKEN = 0x0703,
//####GL_POSITION
	GL_POSITION = 0x1203,
//####GL_POST_COLOR_MATRIX_ALPHA_BIAS
	GL_POST_COLOR_MATRIX_ALPHA_BIAS = 0x80BB,
//####GL_POST_COLOR_MATRIX_ALPHA_SCALE
	GL_POST_COLOR_MATRIX_ALPHA_SCALE = 0x80B7,
//####GL_POST_COLOR_MATRIX_BLUE_BIAS
	GL_POST_COLOR_MATRIX_BLUE_BIAS = 0x80BA,
//####GL_POST_COLOR_MATRIX_BLUE_SCALE
	GL_POST_COLOR_MATRIX_BLUE_SCALE = 0x80B6,
//####GL_POST_COLOR_MATRIX_COLOR_TABLE
	GL_POST_COLOR_MATRIX_COLOR_TABLE = 0x80D2,
//####GL_POST_COLOR_MATRIX_GREEN_BIAS
	GL_POST_COLOR_MATRIX_GREEN_BIAS = 0x80B9,
//####GL_POST_COLOR_MATRIX_GREEN_SCALE
	GL_POST_COLOR_MATRIX_GREEN_SCALE = 0x80B5,
//####GL_POST_COLOR_MATRIX_RED_BIAS
	GL_POST_COLOR_MATRIX_RED_BIAS = 0x80B8,
//####GL_POST_COLOR_MATRIX_RED_SCALE
	GL_POST_COLOR_MATRIX_RED_SCALE = 0x80B4,
//####GL_POST_CONVOLUTION_ALPHA_BIAS
	GL_POST_CONVOLUTION_ALPHA_BIAS = 0x8023,
//####GL_POST_CONVOLUTION_ALPHA_SCALE
	GL_POST_CONVOLUTION_ALPHA_SCALE = 0x801F,
//####GL_POST_CONVOLUTION_BLUE_BIAS
	GL_POST_CONVOLUTION_BLUE_BIAS = 0x8022,
//####GL_POST_CONVOLUTION_BLUE_SCALE
	GL_POST_CONVOLUTION_BLUE_SCALE = 0x801E,
//####GL_POST_CONVOLUTION_COLOR_TABLE
	GL_POST_CONVOLUTION_COLOR_TABLE = 0x80D1,
//####GL_POST_CONVOLUTION_GREEN_BIAS
	GL_POST_CONVOLUTION_GREEN_BIAS = 0x8021,
//####GL_POST_CONVOLUTION_GREEN_SCALE
	GL_POST_CONVOLUTION_GREEN_SCALE = 0x801D,
//####GL_POST_CONVOLUTION_RED_BIAS
	GL_POST_CONVOLUTION_RED_BIAS = 0x8020,
//####GL_POST_CONVOLUTION_RED_SCALE
	GL_POST_CONVOLUTION_RED_SCALE = 0x801C,
//####GL_PREVIOUS
	GL_PREVIOUS = 0x8578,
//####GL_PRIMARY_COLOR
	GL_PRIMARY_COLOR = 0x8577,
//####GL_PROJECTION
	GL_PROJECTION = 0x1701,
//####GL_PROJECTION_MATRIX
	GL_PROJECTION_MATRIX = 0x0BA7,
//####GL_PROJECTION_STACK_DEPTH
	GL_PROJECTION_STACK_DEPTH = 0x0BA4,
//####GL_PROXY_COLOR_TABLE
	GL_PROXY_COLOR_TABLE = 0x80D3,
//####GL_PROXY_HISTOGRAM
	GL_PROXY_HISTOGRAM = 0x8025,
//####GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE
	GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE = 0x80D5,
//####GL_PROXY_POST_CONVOLUTION_COLOR_TABLE
	GL_PROXY_POST_CONVOLUTION_COLOR_TABLE = 0x80D4,
//####GL_PROXY_TEXTURE_1D
	GL_PROXY_TEXTURE_1D = 0x8063,
//####GL_PROXY_TEXTURE_2D
	GL_PROXY_TEXTURE_2D = 0x8064,
//####GL_PROXY_TEXTURE_3D
	GL_PROXY_TEXTURE_3D = 0x8070,
//####GL_PROXY_TEXTURE_CUBE_MAP
	GL_PROXY_TEXTURE_CUBE_MAP = 0x851B,
//####GL_Q
	GL_Q = 0x2003,
//####GL_QUADRATIC_ATTENUATION
	GL_QUADRATIC_ATTENUATION = 0x1209,
//####GL_QUADS
	GL_QUADS = 0x0007,
//####GL_QUAD_STRIP
	GL_QUAD_STRIP = 0x0008,
//####GL_QUERY_COUNTER_BITS
	GL_QUERY_COUNTER_BITS = 0x8864,
//####GL_QUERY_RESULT
	GL_QUERY_RESULT = 0x8866,
//####GL_QUERY_RESULT_AVAILABLE
	GL_QUERY_RESULT_AVAILABLE = 0x8867,
//####GL_R
	GL_R = 0x2002,
//####GL_R3_G3_B2
	GL_R3_G3_B2 = 0x2A10,
//####GL_READ_BUFFER
	GL_READ_BUFFER = 0x0C02,
//####GL_READ_ONLY
	GL_READ_ONLY = 0x88B8,
//####GL_READ_WRITE
	GL_READ_WRITE = 0x88BA,
//####GL_RED
	GL_RED = 0x1903,
//####GL_REDUCE
	GL_REDUCE = 0x8016,
//####GL_RED_BIAS
	GL_RED_BIAS = 0x0D15,
//####GL_RED_BITS
	GL_RED_BITS = 0x0D52,
//####GL_RED_SCALE
	GL_RED_SCALE = 0x0D14,
//####GL_REFLECTION_MAP
	GL_REFLECTION_MAP = 0x8512,
//####GL_RENDER
	GL_RENDER = 0x1C00,
//####GL_RENDERER
	GL_RENDERER = 0x1F01,
//####GL_RENDER_MODE
	GL_RENDER_MODE = 0x0C40,
//####GL_REPEAT
	GL_REPEAT = 0x2901,
//####GL_REPLACE
	GL_REPLACE = 0x1E01,
//####GL_REPLICATE_BORDER
	GL_REPLICATE_BORDER = 0x8153,
//####GL_RESCALE_NORMAL
	GL_RESCALE_NORMAL = 0x803A,
//####GL_RETURN
	GL_RETURN = 0x0102,
//####GL_RGB
	GL_RGB = 0x1907,
//####GL_RGB10
	GL_RGB10 = 0x8052,
//####GL_RGB10_A2
	GL_RGB10_A2 = 0x8059,
//####GL_RGB12
	GL_RGB12 = 0x8053,
//####GL_RGB16
	GL_RGB16 = 0x8054,
//####GL_RGB4
	GL_RGB4 = 0x804F,
//####GL_RGB5
	GL_RGB5 = 0x8050,
//####GL_RGB5_A1
	GL_RGB5_A1 = 0x8057,
//####GL_RGB8
	GL_RGB8 = 0x8051,
//####GL_RGBA
	GL_RGBA = 0x1908,
//####GL_RGBA12
	GL_RGBA12 = 0x805A,
//####GL_RGBA16
	GL_RGBA16 = 0x805B,
//####GL_RGBA2
	GL_RGBA2 = 0x8055,
//####GL_RGBA4
	GL_RGBA4 = 0x8056,
//####GL_RGBA8
	GL_RGBA8 = 0x8058,
//####GL_RGBA_MODE
	GL_RGBA_MODE = 0x0C31,
//####GL_RGB_SCALE
	GL_RGB_SCALE = 0x8573,
//####GL_RIGHT
	GL_RIGHT = 0x0407,
//####GL_S
	GL_S = 0x2000,
//####GL_SAMPLER_1D
	GL_SAMPLER_1D = 0x8B5D,
//####GL_SAMPLER_1D_SHADOW
	GL_SAMPLER_1D_SHADOW = 0x8B61,
//####GL_SAMPLER_2D
	GL_SAMPLER_2D = 0x8B5E,
//####GL_SAMPLER_2D_SHADOW
	GL_SAMPLER_2D_SHADOW = 0x8B62,
//####GL_SAMPLER_3D
	GL_SAMPLER_3D = 0x8B5F,
//####GL_SAMPLER_CUBE
	GL_SAMPLER_CUBE = 0x8B60,
//####GL_SAMPLES
	GL_SAMPLES = 0x80A9,
//####GL_SAMPLES_PASSED
	GL_SAMPLES_PASSED = 0x8914,
//####GL_SAMPLE_ALPHA_TO_COVERAGE
	GL_SAMPLE_ALPHA_TO_COVERAGE = 0x809E,
//####GL_SAMPLE_ALPHA_TO_ONE
	GL_SAMPLE_ALPHA_TO_ONE = 0x809F,
//####GL_SAMPLE_BUFFERS
	GL_SAMPLE_BUFFERS = 0x80A8,
//####GL_SAMPLE_COVERAGE
	GL_SAMPLE_COVERAGE = 0x80A0,
//####GL_SAMPLE_COVERAGE_INVERT
	GL_SAMPLE_COVERAGE_INVERT = 0x80AB,
//####GL_SAMPLE_COVERAGE_VALUE
	GL_SAMPLE_COVERAGE_VALUE = 0x80AA,
//####GL_SCISSOR_BIT
	GL_SCISSOR_BIT = 0x00080000,
//####GL_SCISSOR_BOX
	GL_SCISSOR_BOX = 0x0C10,
//####GL_SCISSOR_TEST
	GL_SCISSOR_TEST = 0x0C11,
//####GL_SECONDARY_COLOR_ARRAY
	GL_SECONDARY_COLOR_ARRAY = 0x845E,
//####GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING
	GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING = 0x889C,
//####GL_SECONDARY_COLOR_ARRAY_POINTER
	GL_SECONDARY_COLOR_ARRAY_POINTER = 0x845D,
//####GL_SECONDARY_COLOR_ARRAY_SIZE
	GL_SECONDARY_COLOR_ARRAY_SIZE = 0x845A,
//####GL_SECONDARY_COLOR_ARRAY_STRIDE
	GL_SECONDARY_COLOR_ARRAY_STRIDE = 0x845C,
//####GL_SECONDARY_COLOR_ARRAY_TYPE
	GL_SECONDARY_COLOR_ARRAY_TYPE = 0x845B,
//####GL_SELECT
	GL_SELECT = 0x1C02,
//####GL_SELECTION_BUFFER_POINTER
	GL_SELECTION_BUFFER_POINTER = 0x0DF3,
//####GL_SELECTION_BUFFER_SIZE
	GL_SELECTION_BUFFER_SIZE = 0x0DF4,
//####GL_SEPARABLE_2D
	GL_SEPARABLE_2D = 0x8012,
//####GL_SEPARATE_SPECULAR_COLOR
	GL_SEPARATE_SPECULAR_COLOR = 0x81FA,
//####GL_SET
	GL_SET = 0x150F,
//####GL_SHADER_SOURCE_LENGTH
	GL_SHADER_SOURCE_LENGTH = 0x8B88,
//####GL_SHADER_TYPE
	GL_SHADER_TYPE = 0x8B4F,
//####GL_SHADE_MODEL
	GL_SHADE_MODEL = 0x0B54,
//####GL_SHADING_LANGUAGE_VERSION
	GL_SHADING_LANGUAGE_VERSION = 0x8B8C,
//####GL_SHININESS
	GL_SHININESS = 0x1601,
//####GL_SHORT
	GL_SHORT = 0x1402,
//####GL_SINGLE_COLOR
	GL_SINGLE_COLOR = 0x81F9,
//####GL_SLUMINANCE
	GL_SLUMINANCE = 0x8C46,
//####GL_SLUMINANCE8
	GL_SLUMINANCE8 = 0x8C47,
//####GL_SLUMINANCE8_ALPHA8
	GL_SLUMINANCE8_ALPHA8 = 0x8C45,
//####GL_SLUMINANCE_ALPHA
	GL_SLUMINANCE_ALPHA = 0x8C44,
//####GL_SMOOTH
	GL_SMOOTH = 0x1D01,
//####GL_SMOOTH_LINE_WIDTH_GRANULARITY
	GL_SMOOTH_LINE_WIDTH_GRANULARITY = 0x0B23,
//####GL_SMOOTH_LINE_WIDTH_RANGE
	GL_SMOOTH_LINE_WIDTH_RANGE = 0x0B22,
//####GL_SMOOTH_POINT_SIZE_GRANULARITY
	GL_SMOOTH_POINT_SIZE_GRANULARITY = 0x0B13,
//####GL_SMOOTH_POINT_SIZE_RANGE
	GL_SMOOTH_POINT_SIZE_RANGE = 0x0B12,
//####GL_SOURCE0_ALPHA
	GL_SOURCE0_ALPHA = 0x8588,
//####GL_SOURCE0_RGB
	GL_SOURCE0_RGB = 0x8580,
//####GL_SOURCE1_ALPHA
	GL_SOURCE1_ALPHA = 0x8589,
//####GL_SOURCE1_RGB
	GL_SOURCE1_RGB = 0x8581,
//####GL_SOURCE2_ALPHA
	GL_SOURCE2_ALPHA = 0x858A,
//####GL_SOURCE2_RGB
	GL_SOURCE2_RGB = 0x8582,
//####GL_SOURCE3_ALPHA
	GL_SOURCE3_ALPHA = 0x858B,
//####GL_SOURCE3_RGB
	GL_SOURCE3_RGB = 0x8583,
//####GL_SOURCE4_ALPHA
	GL_SOURCE4_ALPHA = 0x858C,
//####GL_SOURCE4_RGB
	GL_SOURCE4_RGB = 0x8584,
//####GL_SOURCE5_ALPHA
	GL_SOURCE5_ALPHA = 0x858D,
//####GL_SOURCE5_RGB
	GL_SOURCE5_RGB = 0x8585,
//####GL_SOURCE6_ALPHA
	GL_SOURCE6_ALPHA = 0x858E,
//####GL_SOURCE6_RGB
	GL_SOURCE6_RGB = 0x8586,
//####GL_SOURCE7_ALPHA
	GL_SOURCE7_ALPHA = 0x858F,
//####GL_SOURCE7_RGB
	GL_SOURCE7_RGB = 0x8587,
//####GL_SPECULAR
	GL_SPECULAR = 0x1202,
//####GL_SPHERE_MAP
	GL_SPHERE_MAP = 0x2402,
//####GL_SPOT_CUTOFF
	GL_SPOT_CUTOFF = 0x1206,
//####GL_SPOT_DIRECTION
	GL_SPOT_DIRECTION = 0x1204,
//####GL_SPOT_EXPONENT
	GL_SPOT_EXPONENT = 0x1205,
//####GL_SRC0_ALPHA
	GL_SRC0_ALPHA = 0x8588,
//####GL_SRC0_RGB
	GL_SRC0_RGB = 0x8580,
//####GL_SRC1_ALPHA
	GL_SRC1_ALPHA = 0x8589,
//####GL_SRC1_RGB
	GL_SRC1_RGB = 0x8581,
//####GL_SRC2_ALPHA
	GL_SRC2_ALPHA = 0x858A,
//####GL_SRC2_RGB
	GL_SRC2_RGB = 0x8582,
//####GL_SRC3_ALPHA
	GL_SRC3_ALPHA = 0x858B,
//####GL_SRC3_RGB
	GL_SRC3_RGB = 0x8583,
//####GL_SRC4_ALPHA
	GL_SRC4_ALPHA = 0x858C,
//####GL_SRC4_RGB
	GL_SRC4_RGB = 0x8584,
//####GL_SRC5_ALPHA
	GL_SRC5_ALPHA = 0x858D,
//####GL_SRC5_RGB
	GL_SRC5_RGB = 0x8585,
//####GL_SRC6_ALPHA
	GL_SRC6_ALPHA = 0x858E,
//####GL_SRC6_RGB
	GL_SRC6_RGB = 0x8586,
//####GL_SRC7_ALPHA
	GL_SRC7_ALPHA = 0x858F,
//####GL_SRC7_RGB
	GL_SRC7_RGB = 0x8587,
//####GL_SRC_ALPHA
	GL_SRC_ALPHA = 0x0302,
//####GL_SRC_ALPHA_SATURATE
	GL_SRC_ALPHA_SATURATE = 0x0308,
//####GL_SRC_COLOR
	GL_SRC_COLOR = 0x0300,
//####GL_SRGB
	GL_SRGB = 0x8C40,
//####GL_SRGB8
	GL_SRGB8 = 0x8C41,
//####GL_SRGB8_ALPHA8
	GL_SRGB8_ALPHA8 = 0x8C43,
//####GL_SRGB_ALPHA
	GL_SRGB_ALPHA = 0x8C42,
//####GL_STACK_OVERFLOW
	GL_STACK_OVERFLOW = 0x0503,
//####GL_STACK_UNDERFLOW
	GL_STACK_UNDERFLOW = 0x0504,
//####GL_STATIC_COPY
	GL_STATIC_COPY = 0x88E6,
//####GL_STATIC_DRAW
	GL_STATIC_DRAW = 0x88E4,
//####GL_STATIC_READ
	GL_STATIC_READ = 0x88E5,
//####GL_STENCIL
	GL_STENCIL = 0x1802,
//####GL_STENCIL_BACK_FAIL
	GL_STENCIL_BACK_FAIL = 0x8801,
//####GL_STENCIL_BACK_FUNC
	GL_STENCIL_BACK_FUNC = 0x8800,
//####GL_STENCIL_BACK_PASS_DEPTH_FAIL
	GL_STENCIL_BACK_PASS_DEPTH_FAIL = 0x8802,
//####GL_STENCIL_BACK_PASS_DEPTH_PASS
	GL_STENCIL_BACK_PASS_DEPTH_PASS = 0x8803,
//####GL_STENCIL_BACK_REF
	GL_STENCIL_BACK_REF = 0x8CA3,
//####GL_STENCIL_BACK_VALUE_MASK
	GL_STENCIL_BACK_VALUE_MASK = 0x8CA4,
//####GL_STENCIL_BACK_WRITEMASK
	GL_STENCIL_BACK_WRITEMASK = 0x8CA5,
//####GL_STENCIL_BITS
	GL_STENCIL_BITS = 0x0D57,
//####GL_STENCIL_BUFFER_BIT
	GL_STENCIL_BUFFER_BIT = 0x00000400,
//####GL_STENCIL_CLEAR_VALUE
	GL_STENCIL_CLEAR_VALUE = 0x0B91,
//####GL_STENCIL_FAIL
	GL_STENCIL_FAIL = 0x0B94,
//####GL_STENCIL_FUNC
	GL_STENCIL_FUNC = 0x0B92,
//####GL_STENCIL_INDEX
	GL_STENCIL_INDEX = 0x1901,
//####GL_STENCIL_PASS_DEPTH_FAIL
	GL_STENCIL_PASS_DEPTH_FAIL = 0x0B95,
//####GL_STENCIL_PASS_DEPTH_PASS
	GL_STENCIL_PASS_DEPTH_PASS = 0x0B96,
//####GL_STENCIL_REF
	GL_STENCIL_REF = 0x0B97,
//####GL_STENCIL_TEST
	GL_STENCIL_TEST = 0x0B90,
//####GL_STENCIL_VALUE_MASK
	GL_STENCIL_VALUE_MASK = 0x0B93,
//####GL_STENCIL_WRITEMASK
	GL_STENCIL_WRITEMASK = 0x0B98,
//####GL_STEREO
	GL_STEREO = 0x0C33,
//####GL_STREAM_COPY
	GL_STREAM_COPY = 0x88E2,
//####GL_STREAM_DRAW
	GL_STREAM_DRAW = 0x88E0,
//####GL_STREAM_READ
	GL_STREAM_READ = 0x88E1,
//####GL_SUBPIXEL_BITS
	GL_SUBPIXEL_BITS = 0x0D50,
//####GL_SUBTRACT
	GL_SUBTRACT = 0x84E7,
//####GL_T
	GL_T = 0x2001,
//####GL_T2F_C3F_V3F
	GL_T2F_C3F_V3F = 0x2A2A,
//####GL_T2F_C4F_N3F_V3F
	GL_T2F_C4F_N3F_V3F = 0x2A2C,
//####GL_T2F_C4UB_V3F
	GL_T2F_C4UB_V3F = 0x2A29,
//####GL_T2F_N3F_V3F
	GL_T2F_N3F_V3F = 0x2A2B,
//####GL_T2F_V3F
	GL_T2F_V3F = 0x2A27,
//####GL_T4F_C4F_N3F_V4F
	GL_T4F_C4F_N3F_V4F = 0x2A2D,
//####GL_T4F_V4F
	GL_T4F_V4F = 0x2A28,
//####GL_TABLE_TOO_LARGE
	GL_TABLE_TOO_LARGE = 0x8031,
//####GL_TEXTURE
	GL_TEXTURE = 0x1702,
//####GL_TEXTURE0
	GL_TEXTURE0 = 0x84C0,
//####GL_TEXTURE1
	GL_TEXTURE1 = 0x84C1,
//####GL_TEXTURE10
	GL_TEXTURE10 = 0x84CA,
//####GL_TEXTURE11
	GL_TEXTURE11 = 0x84CB,
//####GL_TEXTURE12
	GL_TEXTURE12 = 0x84CC,
//####GL_TEXTURE13
	GL_TEXTURE13 = 0x84CD,
//####GL_TEXTURE14
	GL_TEXTURE14 = 0x84CE,
//####GL_TEXTURE15
	GL_TEXTURE15 = 0x84CF,
//####GL_TEXTURE16
	GL_TEXTURE16 = 0x84D0,
//####GL_TEXTURE17
	GL_TEXTURE17 = 0x84D1,
//####GL_TEXTURE18
	GL_TEXTURE18 = 0x84D2,
//####GL_TEXTURE19
	GL_TEXTURE19 = 0x84D3,
//####GL_TEXTURE2
	GL_TEXTURE2 = 0x84C2,
//####GL_TEXTURE20
	GL_TEXTURE20 = 0x84D4,
//####GL_TEXTURE21
	GL_TEXTURE21 = 0x84D5,
//####GL_TEXTURE22
	GL_TEXTURE22 = 0x84D6,
//####GL_TEXTURE23
	GL_TEXTURE23 = 0x84D7,
//####GL_TEXTURE24
	GL_TEXTURE24 = 0x84D8,
//####GL_TEXTURE25
	GL_TEXTURE25 = 0x84D9,
//####GL_TEXTURE26
	GL_TEXTURE26 = 0x84DA,
//####GL_TEXTURE27
	GL_TEXTURE27 = 0x84DB,
//####GL_TEXTURE28
	GL_TEXTURE28 = 0x84DC,
//####GL_TEXTURE29
	GL_TEXTURE29 = 0x84DD,
//####GL_TEXTURE3
	GL_TEXTURE3 = 0x84C3,
//####GL_TEXTURE30
	GL_TEXTURE30 = 0x84DE,
//####GL_TEXTURE31
	GL_TEXTURE31 = 0x84DF,
//####GL_TEXTURE4
	GL_TEXTURE4 = 0x84C4,
//####GL_TEXTURE5
	GL_TEXTURE5 = 0x84C5,
//####GL_TEXTURE6
	GL_TEXTURE6 = 0x84C6,
//####GL_TEXTURE7
	GL_TEXTURE7 = 0x84C7,
//####GL_TEXTURE8
	GL_TEXTURE8 = 0x84C8,
//####GL_TEXTURE9
	GL_TEXTURE9 = 0x84C9,
//####GL_TEXTURE_1D
	GL_TEXTURE_1D = 0x0DE0,
//####GL_TEXTURE_2D
	GL_TEXTURE_2D = 0x0DE1,
//####GL_TEXTURE_3D
	GL_TEXTURE_3D = 0x806F,
//####GL_TEXTURE_ALPHA_SIZE
	GL_TEXTURE_ALPHA_SIZE = 0x805F,
//####GL_TEXTURE_BASE_LEVEL
	GL_TEXTURE_BASE_LEVEL = 0x813C,
//####GL_TEXTURE_BINDING_1D
	GL_TEXTURE_BINDING_1D = 0x8068,
//####GL_TEXTURE_BINDING_2D
	GL_TEXTURE_BINDING_2D = 0x8069,
//####GL_TEXTURE_BINDING_3D
	GL_TEXTURE_BINDING_3D = 0x806A,
//####GL_TEXTURE_BINDING_CUBE_MAP
	GL_TEXTURE_BINDING_CUBE_MAP = 0x8514,
//####GL_TEXTURE_BIT
	GL_TEXTURE_BIT = 0x00040000,
//####GL_TEXTURE_BLUE_SIZE
	GL_TEXTURE_BLUE_SIZE = 0x805E,
//####GL_TEXTURE_BORDER
	GL_TEXTURE_BORDER = 0x1005,
//####GL_TEXTURE_BORDER_COLOR
	GL_TEXTURE_BORDER_COLOR = 0x1004,
//####GL_TEXTURE_COMPARE_FUNC
	GL_TEXTURE_COMPARE_FUNC = 0x884D,
//####GL_TEXTURE_COMPARE_MODE
	GL_TEXTURE_COMPARE_MODE = 0x884C,
//####GL_TEXTURE_COMPRESSED
	GL_TEXTURE_COMPRESSED = 0x86A1,
//####GL_TEXTURE_COMPRESSED_IMAGE_SIZE
	GL_TEXTURE_COMPRESSED_IMAGE_SIZE = 0x86A0,
//####GL_TEXTURE_COMPRESSION_HINT
	GL_TEXTURE_COMPRESSION_HINT = 0x84EF,
//####GL_TEXTURE_COORD_ARRAY
	GL_TEXTURE_COORD_ARRAY = 0x8078,
//####GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING
	GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING = 0x889A,
//####GL_TEXTURE_COORD_ARRAY_POINTER
	GL_TEXTURE_COORD_ARRAY_POINTER = 0x8092,
//####GL_TEXTURE_COORD_ARRAY_SIZE
	GL_TEXTURE_COORD_ARRAY_SIZE = 0x8088,
//####GL_TEXTURE_COORD_ARRAY_STRIDE
	GL_TEXTURE_COORD_ARRAY_STRIDE = 0x808A,
//####GL_TEXTURE_COORD_ARRAY_TYPE
	GL_TEXTURE_COORD_ARRAY_TYPE = 0x8089,
//####GL_TEXTURE_CUBE_MAP
	GL_TEXTURE_CUBE_MAP = 0x8513,
//####GL_TEXTURE_CUBE_MAP_NEGATIVE_X
	GL_TEXTURE_CUBE_MAP_NEGATIVE_X = 0x8516,
//####GL_TEXTURE_CUBE_MAP_NEGATIVE_Y
	GL_TEXTURE_CUBE_MAP_NEGATIVE_Y = 0x8518,
//####GL_TEXTURE_CUBE_MAP_NEGATIVE_Z
	GL_TEXTURE_CUBE_MAP_NEGATIVE_Z = 0x851A,
//####GL_TEXTURE_CUBE_MAP_POSITIVE_X
	GL_TEXTURE_CUBE_MAP_POSITIVE_X = 0x8515,
//####GL_TEXTURE_CUBE_MAP_POSITIVE_Y
	GL_TEXTURE_CUBE_MAP_POSITIVE_Y = 0x8517,
//####GL_TEXTURE_CUBE_MAP_POSITIVE_Z
	GL_TEXTURE_CUBE_MAP_POSITIVE_Z = 0x8519,
//####GL_TEXTURE_DEPTH
	GL_TEXTURE_DEPTH = 0x8071,
//####GL_TEXTURE_DEPTH_SIZE
	GL_TEXTURE_DEPTH_SIZE = 0x884A,
//####GL_TEXTURE_ENV
	GL_TEXTURE_ENV = 0x2300,
//####GL_TEXTURE_ENV_COLOR
	GL_TEXTURE_ENV_COLOR = 0x2201,
//####GL_TEXTURE_ENV_MODE
	GL_TEXTURE_ENV_MODE = 0x2200,
//####GL_TEXTURE_FILTER_CONTROL
	GL_TEXTURE_FILTER_CONTROL = 0x8500,
//####GL_TEXTURE_GEN_MODE
	GL_TEXTURE_GEN_MODE = 0x2500,
//####GL_TEXTURE_GEN_Q
	GL_TEXTURE_GEN_Q = 0x0C63,
//####GL_TEXTURE_GEN_R
	GL_TEXTURE_GEN_R = 0x0C62,
//####GL_TEXTURE_GEN_S
	GL_TEXTURE_GEN_S = 0x0C60,
//####GL_TEXTURE_GEN_T
	GL_TEXTURE_GEN_T = 0x0C61,
//####GL_TEXTURE_GREEN_SIZE
	GL_TEXTURE_GREEN_SIZE = 0x805D,
//####GL_TEXTURE_HEIGHT
	GL_TEXTURE_HEIGHT = 0x1001,
//####GL_TEXTURE_INTENSITY_SIZE
	GL_TEXTURE_INTENSITY_SIZE = 0x8061,
//####GL_TEXTURE_INTERNAL_FORMAT
	GL_TEXTURE_INTERNAL_FORMAT = 0x1003,
//####GL_TEXTURE_LOD_BIAS
	GL_TEXTURE_LOD_BIAS = 0x8501,
//####GL_TEXTURE_LUMINANCE_SIZE
	GL_TEXTURE_LUMINANCE_SIZE = 0x8060,
//####GL_TEXTURE_MAG_FILTER
	GL_TEXTURE_MAG_FILTER = 0x2800,
//####GL_TEXTURE_MATRIX
	GL_TEXTURE_MATRIX = 0x0BA8,
//####GL_TEXTURE_MAX_LEVEL
	GL_TEXTURE_MAX_LEVEL = 0x813D,
//####GL_TEXTURE_MAX_LOD
	GL_TEXTURE_MAX_LOD = 0x813B,
//####GL_TEXTURE_MIN_FILTER
	GL_TEXTURE_MIN_FILTER = 0x2801,
//####GL_TEXTURE_MIN_LOD
	GL_TEXTURE_MIN_LOD = 0x813A,
//####GL_TEXTURE_PRIORITY
	GL_TEXTURE_PRIORITY = 0x8066,
//####GL_TEXTURE_RED_SIZE
	GL_TEXTURE_RED_SIZE = 0x805C,
//####GL_TEXTURE_RESIDENT
	GL_TEXTURE_RESIDENT = 0x8067,
//####GL_TEXTURE_STACK_DEPTH
	GL_TEXTURE_STACK_DEPTH = 0x0BA5,
//####GL_TEXTURE_WIDTH
	GL_TEXTURE_WIDTH = 0x1000,
//####GL_TEXTURE_WRAP_R
	GL_TEXTURE_WRAP_R = 0x8072,
//####GL_TEXTURE_WRAP_S
	GL_TEXTURE_WRAP_S = 0x2802,
//####GL_TEXTURE_WRAP_T
	GL_TEXTURE_WRAP_T = 0x2803,
//####GL_TRANSFORM_BIT
	GL_TRANSFORM_BIT = 0x00001000,
//####GL_TRANSPOSE_COLOR_MATRIX
	GL_TRANSPOSE_COLOR_MATRIX = 0x84E6,
//####GL_TRANSPOSE_MODELVIEW_MATRIX
	GL_TRANSPOSE_MODELVIEW_MATRIX = 0x84E3,
//####GL_TRANSPOSE_PROJECTION_MATRIX
	GL_TRANSPOSE_PROJECTION_MATRIX = 0x84E4,
//####GL_TRANSPOSE_TEXTURE_MATRIX
	GL_TRANSPOSE_TEXTURE_MATRIX = 0x84E5,
//####GL_TRIANGLES
	GL_TRIANGLES = 0x0004,
//####GL_TRIANGLE_FAN
	GL_TRIANGLE_FAN = 0x0006,
//####GL_TRIANGLE_STRIP
	GL_TRIANGLE_STRIP = 0x0005,
//####GL_TRUE
	GL_TRUE = 0x1,
//####GL_UNPACK_ALIGNMENT
	GL_UNPACK_ALIGNMENT = 0x0CF5,
//####GL_UNPACK_IMAGE_HEIGHT
	GL_UNPACK_IMAGE_HEIGHT = 0x806E,
//####GL_UNPACK_LSB_FIRST
	GL_UNPACK_LSB_FIRST = 0x0CF1,
//####GL_UNPACK_ROW_LENGTH
	GL_UNPACK_ROW_LENGTH = 0x0CF2,
//####GL_UNPACK_SKIP_IMAGES
	GL_UNPACK_SKIP_IMAGES = 0x806D,
//####GL_UNPACK_SKIP_PIXELS
	GL_UNPACK_SKIP_PIXELS = 0x0CF4,
//####GL_UNPACK_SKIP_ROWS
	GL_UNPACK_SKIP_ROWS = 0x0CF3,
//####GL_UNPACK_SWAP_BYTES
	GL_UNPACK_SWAP_BYTES = 0x0CF0,
//####GL_UNSIGNED_BYTE
	GL_UNSIGNED_BYTE = 0x1401,
//####GL_UNSIGNED_BYTE_2_3_3_REV
	GL_UNSIGNED_BYTE_2_3_3_REV = 0x8362,
//####GL_UNSIGNED_BYTE_3_3_2
	GL_UNSIGNED_BYTE_3_3_2 = 0x8032,
//####GL_UNSIGNED_INT
	GL_UNSIGNED_INT = 0x1405,
//####GL_UNSIGNED_INT_10_10_10_2
	GL_UNSIGNED_INT_10_10_10_2 = 0x8036,
//####GL_UNSIGNED_INT_2_10_10_10_REV
	GL_UNSIGNED_INT_2_10_10_10_REV = 0x8368,
//####GL_UNSIGNED_INT_8_8_8_8
	GL_UNSIGNED_INT_8_8_8_8 = 0x8035,
//####GL_UNSIGNED_INT_8_8_8_8_REV
	GL_UNSIGNED_INT_8_8_8_8_REV = 0x8367,
//####GL_UNSIGNED_SHORT
	GL_UNSIGNED_SHORT = 0x1403,
//####GL_UNSIGNED_SHORT_1_5_5_5_REV
	GL_UNSIGNED_SHORT_1_5_5_5_REV = 0x8366,
//####GL_UNSIGNED_SHORT_4_4_4_4
	GL_UNSIGNED_SHORT_4_4_4_4 = 0x8033,
//####GL_UNSIGNED_SHORT_4_4_4_4_REV
	GL_UNSIGNED_SHORT_4_4_4_4_REV = 0x8365,
//####GL_UNSIGNED_SHORT_5_5_5_1
	GL_UNSIGNED_SHORT_5_5_5_1 = 0x8034,
//####GL_UNSIGNED_SHORT_5_6_5
	GL_UNSIGNED_SHORT_5_6_5 = 0x8363,
//####GL_UNSIGNED_SHORT_5_6_5_REV
	GL_UNSIGNED_SHORT_5_6_5_REV = 0x8364,
//####GL_UPPER_LEFT
	GL_UPPER_LEFT = 0x8CA2,
//####GL_V2F
	GL_V2F = 0x2A20,
//####GL_V3F
	GL_V3F = 0x2A21,
//####GL_VALIDATE_STATUS
	GL_VALIDATE_STATUS = 0x8B83,
//####GL_VENDOR
	GL_VENDOR = 0x1F00,
//####GL_VERSION
	GL_VERSION = 0x1F02,
//####GL_VERTEX_ARRAY
	GL_VERTEX_ARRAY = 0x8074,
//####GL_VERTEX_ARRAY_BUFFER_BINDING
	GL_VERTEX_ARRAY_BUFFER_BINDING = 0x8896,
//####GL_VERTEX_ARRAY_POINTER
	GL_VERTEX_ARRAY_POINTER = 0x808E,
//####GL_VERTEX_ARRAY_SIZE
	GL_VERTEX_ARRAY_SIZE = 0x807A,
//####GL_VERTEX_ARRAY_STRIDE
	GL_VERTEX_ARRAY_STRIDE = 0x807C,
//####GL_VERTEX_ARRAY_TYPE
	GL_VERTEX_ARRAY_TYPE = 0x807B,
//####GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING
	GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 0x889F,
//####GL_VERTEX_ATTRIB_ARRAY_ENABLED
	GL_VERTEX_ATTRIB_ARRAY_ENABLED = 0x8622,
//####GL_VERTEX_ATTRIB_ARRAY_NORMALIZED
	GL_VERTEX_ATTRIB_ARRAY_NORMALIZED = 0x886A,
//####GL_VERTEX_ATTRIB_ARRAY_POINTER
	GL_VERTEX_ATTRIB_ARRAY_POINTER = 0x8645,
//####GL_VERTEX_ATTRIB_ARRAY_SIZE
	GL_VERTEX_ATTRIB_ARRAY_SIZE = 0x8623,
//####GL_VERTEX_ATTRIB_ARRAY_STRIDE
	GL_VERTEX_ATTRIB_ARRAY_STRIDE = 0x8624,
//####GL_VERTEX_ATTRIB_ARRAY_TYPE
	GL_VERTEX_ATTRIB_ARRAY_TYPE = 0x8625,
//####GL_VERTEX_PROGRAM_POINT_SIZE
	GL_VERTEX_PROGRAM_POINT_SIZE = 0x8642,
//####GL_VERTEX_PROGRAM_TWO_SIDE
	GL_VERTEX_PROGRAM_TWO_SIDE = 0x8643,
//####GL_VERTEX_SHADER
	GL_VERTEX_SHADER = 0x8B31,
//####GL_VIEWPORT
	GL_VIEWPORT = 0x0BA2,
//####GL_VIEWPORT_BIT
	GL_VIEWPORT_BIT = 0x00000800,
//####GL_WEIGHT_ARRAY_BUFFER_BINDING
	GL_WEIGHT_ARRAY_BUFFER_BINDING = 0x889E,
//####GL_WRITE_ONLY
	GL_WRITE_ONLY = 0x88B9,
//####GL_XOR
	GL_XOR = 0x1506,
//####GL_ZERO
	GL_ZERO = 0x1,
//####GL_ZOOM_X
	GL_ZOOM_X = 0x0D16,
//####GL_ZOOM_Y
	GL_ZOOM_Y = 0x0D17,
//####GL_WIN_swap_hint
	GL_WIN_swap_hint = 0x1,
//####WGL_ATI_render_texture_rectangle
	WGL_ATI_render_texture_rectangle = 0x1,
//####WGL_EXT_framebuffer_sRGB
	WGL_EXT_framebuffer_sRGB = 0x1,
//####WGL_EXT_pixel_format_packed_float
	WGL_EXT_pixel_format_packed_float = 0x1,
//####WGL_NV_gpu_affinity
	WGL_NV_gpu_affinity = 0x1,
//####WGL_ERROR_MISSING_AFFINITY_MASK_NV
	WGL_ERROR_MISSING_AFFINITY_MASK_NV = 0x20D1,
//####WGL_NV_vertex_array_range
=======
	GLX_AMD_gpu_association = 0x1,
	GLX_GPU_RENDERER_STRING_AMD = 0x1F01,
	GLX_GPU_OPENGL_VERSION_STRING_AMD = 0x1F02,
	GLX_GPU_FASTEST_TARGET_GPUS_AMD = 0x21A2,
	GLX_GPU_RAM_AMD = 0x21A3,
	GLX_GPU_CLOCK_AMD = 0x21A4,
	GLX_GPU_NUM_PIPES_AMD = 0x21A5,
	GLX_GPU_NUM_SIMD_AMD = 0x21A6,
	GLX_GPU_NUM_RB_AMD = 0x21A7,
	GLX_GPU_NUM_SPI_AMD = 0x21A8,
	GLX_ARB_get_proc_address = 0x1,
	GLX_ATI_pixel_format_float = 0x1,
	GLX_ATI_render_texture = 0x1,
	GLX_BIND_TO_TEXTURE_RGBA_ATI = 0x9801,
	GLX_TEXTURE_FORMAT_ATI = 0x9802,
	GLX_TEXTURE_TARGET_ATI = 0x9803,
	GLX_MIPMAP_TEXTURE_ATI = 0x9804,
	GLX_TEXTURE_RGB_ATI = 0x9805,
	GLX_TEXTURE_RGBA_ATI = 0x9806,
	GLX_NO_TEXTURE_ATI = 0x9807,
	GLX_TEXTURE_CUBE_MAP_ATI = 0x9808,
	GLX_TEXTURE_1D_ATI = 0x9809,
	GLX_TEXTURE_2D_ATI = 0x980A,
	GLX_MIPMAP_LEVEL_ATI = 0x980B,
	GLX_CUBE_MAP_FACE_ATI = 0x980C,
	GLX_TEXTURE_CUBE_MAP_POSITIVE_X_ATI = 0x980D,
	GLX_TEXTURE_CUBE_MAP_NEGATIVE_X_ATI = 0x980E,
	GLX_TEXTURE_CUBE_MAP_POSITIVE_Y_ATI = 0x980F,
	GLX_TEXTURE_CUBE_MAP_NEGATIVE_Y_ATI = 0x9810,
	GLX_TEXTURE_CUBE_MAP_POSITIVE_Z_ATI = 0x9811,
	GLX_TEXTURE_CUBE_MAP_NEGATIVE_Z_ATI = 0x9812,
	GLX_FRONT_LEFT_ATI = 0x9813,
	GLX_FRONT_RIGHT_ATI = 0x9814,
	GLX_BACK_LEFT_ATI = 0x9815,
	GLX_BACK_RIGHT_ATI = 0x9816,
	GLX_AUX0_ATI = 0x9817,
	GLX_AUX1_ATI = 0x9818,
	GLX_AUX2_ATI = 0x9819,
	GLX_AUX3_ATI = 0x981A,
	GLX_AUX4_ATI = 0x981B,
	GLX_AUX5_ATI = 0x981C,
	GLX_AUX6_ATI = 0x981D,
	GLX_AUX7_ATI = 0x981E,
	GLX_AUX8_ATI = 0x981F,
	GLX_AUX9_ATI = 0x9820,
	GLX_BIND_TO_TEXTURE_LUMINANCE_ATI = 0x9821,
	GLX_BIND_TO_TEXTURE_INTENSITY_ATI = 0x9822,
	GLX_EXT_fbconfig_packed_float = 0x1,
	GLX_RGBA_UNSIGNED_FLOAT_BIT_EXT = 0x00000008,
	GLX_EXT_framebuffer_sRGB = 0x1,
	GLX_NV_float_buffer = 0x1,
	GLX_NV_vertex_array_range = 0x1,
	GLX_SGIS_shared_multisample = 0x1,
	GLX_MULTISAMPLE_SUB_RECT_HEIGHT_SGIS = 0x8027,
	GLX_SGIX_hyperpipe = 0x1,
	GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX = 0x1,
	GLX_HYPERPIPE_DISPLAY_PIPE_SGIX = 0x00000001,
	GLX_HYPERPIPE_RENDER_PIPE_SGIX = 0x00000002,
	GLX_PIPE_RECT_SGIX = 0x00000001,
	GLX_PIPE_RECT_LIMITS_SGIX = 0x00000002,
	GLX_HYPERPIPE_STEREO_SGIX = 0x00000003,
	GLX_HYPERPIPE_PIXEL_AVERAGE_SGIX = 0x00000004,
	GLX_BAD_HYPERPIPE_CONFIG_SGIX = 0x1,
	GLX_BAD_HYPERPIPE_SGIX = 0x1,
	GLX_SGIX_swap_barrier = 0x1,
	GLX_SGIX_swap_group = 0x1,
	GLX_SGI_video_sync = 0x1,
	GLX_SUN_video_resize = 0x1,
	GLX_VIDEO_RESIZE_SUN = 0x8171,
	GLX_VERSION_1_2 = 0x1,
	GLX_VERSION_1_3 = 0x1,
	GLX_PIXMAP_BIT = 0x00000002,
	GLX_PBUFFER_BIT = 0x00000004,
	GLX_RGBA_BIT = 0x00000001,
	GLX_COLOR_INDEX_BIT = 0x00000002,
	GLX_PBUFFER_CLOBBER_MASK = 0x08000000,
	GLX_FRONT_LEFT_BUFFER_BIT = 0x00000001,
	GLX_FRONT_RIGHT_BUFFER_BIT = 0x00000002,
	GLX_BACK_LEFT_BUFFER_BIT = 0x00000004,
	GLX_BACK_RIGHT_BUFFER_BIT = 0x00000008,
	GLX_AUX_BUFFERS_BIT = 0x00000010,
	GLX_DEPTH_BUFFER_BIT = 0x00000020,
	GLX_STENCIL_BUFFER_BIT = 0x00000040,
	GLX_ACCUM_BUFFER_BIT = 0x00000080,
	GLX_CONFIG_CAVEAT = 0x20,
	GLX_X_VISUAL_TYPE = 0x22,
	GLX_TRANSPARENT_TYPE = 0x23,
	GLX_TRANSPARENT_INDEX_VALUE = 0x24,
	GLX_TRANSPARENT_RED_VALUE = 0x25,
	GLX_TRANSPARENT_GREEN_VALUE = 0x26,
	GLX_TRANSPARENT_BLUE_VALUE = 0x27,
	GLX_TRANSPARENT_ALPHA_VALUE = 0x28,
	GLX_DONT_CARE = 0xFFFFFFFF,
	GLX_NONE = 0x8000,
	GLX_SLOW_CONFIG = 0x8001,
	GLX_TRUE_COLOR = 0x8002,
	GLX_DIRECT_COLOR = 0x8003,
	GLX_PSEUDO_COLOR = 0x8004,
	GLX_STATIC_COLOR = 0x8005,
	GLX_GRAY_SCALE = 0x8006,
	GLX_STATIC_GRAY = 0x8007,
	GLX_TRANSPARENT_RGB = 0x8008,
	GLX_TRANSPARENT_INDEX = 0x8009,
	GLX_VISUAL_ID = 0x800B,
	GLX_SCREEN = 0x800C,
	GLX_NON_CONFORMANT_CONFIG = 0x800D,
	GLX_DRAWABLE_TYPE = 0x8010,
	GLX_RENDER_TYPE = 0x8011,
	GLX_X_RENDERABLE = 0x8012,
	GLX_FBCONFIG_ID = 0x8013,
	GLX_RGBA_TYPE = 0x8014,
	GLX_COLOR_INDEX_TYPE = 0x8015,
	GLX_MAX_PBUFFER_WIDTH = 0x8016,
	GLX_MAX_PBUFFER_HEIGHT = 0x8017,
	GLX_MAX_PBUFFER_PIXELS = 0x8018,
	GLX_PRESERVED_CONTENTS = 0x801B,
	GLX_LARGEST_PBUFFER = 0x801C,
	GLX_WIDTH = 0x801D,
	GLX_HEIGHT = 0x801E,
	GLX_EVENT_MASK = 0x801F,
	GLX_DAMAGED = 0x8020,
	GLX_SAVED = 0x8021,
	GLX_WINDOW = 0x8022,
	GLX_PBUFFER = 0x8023,
	GLX_PBUFFER_HEIGHT = 0x8040,
	GLX_PBUFFER_WIDTH = 0x8041,
	GLX_VERSION_1_4 = 0x1,
	GLX_SAMPLES = 0x1,
	GL_APPLE_float_pixels = 0x1,
	GL_COLOR_FLOAT_APPLE = 0x8A0F,
	GL_RGBA_FLOAT32_APPLE = 0x8814,
	GL_RGB_FLOAT32_APPLE = 0x8815,
	GL_ALPHA_FLOAT32_APPLE = 0x8816,
	GL_INTENSITY_FLOAT32_APPLE = 0x8817,
	GL_LUMINANCE_FLOAT32_APPLE = 0x8818,
	GL_LUMINANCE_ALPHA_FLOAT32_APPLE = 0x8819,
	GL_RGBA_FLOAT16_APPLE = 0x881A,
	GL_RGB_FLOAT16_APPLE = 0x881B,
	GL_ALPHA_FLOAT16_APPLE = 0x881C,
	GL_INTENSITY_FLOAT16_APPLE = 0x881D,
	GL_LUMINANCE_FLOAT16_APPLE = 0x881E,
	GL_LUMINANCE_ALPHA_FLOAT16_APPLE = 0x881F,
	GL_APPLE_pixel_buffer = 0x1,
	GL_APPLE_texture_range = 0x1,
	GL_STORAGE_PRIVATE_APPLE = 0x85BD,
	GL_STORAGE_CACHED_APPLE = 0x85BE,
	GL_STORAGE_SHARED_APPLE = 0x85BF,
	GL_TEXTURE_RANGE_LENGTH_APPLE = 0x85B7,
	GL_TEXTURE_RANGE_POINTER_APPLE = 0x85B8,
	GL_ARB_imaging = 0x1,
	GL_ONE_MINUS_CONSTANT_COLOR = 0x8002,
	GL_CONSTANT_ALPHA = 0x8003,
	GL_ONE_MINUS_CONSTANT_ALPHA = 0x8004,
	GL_BLEND_COLOR = 0x8005,
	GL_FUNC_ADD = 0x8006,
	GL_MIN = 0x8007,
	GL_MAX = 0x8008,
	GL_BLEND_EQUATION = 0x8009,
	GL_FUNC_SUBTRACT = 0x800A,
	GL_FUNC_REVERSE_SUBTRACT = 0x800B,
	GL_CONVOLUTION_1D = 0x8010,
	GL_CONVOLUTION_2D = 0x8011,
	GL_SEPARABLE_2D = 0x8012,
	GL_CONVOLUTION_BORDER_MODE = 0x8013,
	GL_CONVOLUTION_FILTER_SCALE = 0x8014,
	GL_CONVOLUTION_FILTER_BIAS = 0x8015,
	GL_REDUCE = 0x8016,
	GL_CONVOLUTION_FORMAT = 0x8017,
	GL_CONVOLUTION_WIDTH = 0x8018,
	GL_CONVOLUTION_HEIGHT = 0x8019,
	GL_MAX_CONVOLUTION_WIDTH = 0x801A,
	GL_MAX_CONVOLUTION_HEIGHT = 0x801B,
	GL_POST_CONVOLUTION_RED_SCALE = 0x801C,
	GL_POST_CONVOLUTION_GREEN_SCALE = 0x801D,
	GL_POST_CONVOLUTION_BLUE_SCALE = 0x801E,
	GL_POST_CONVOLUTION_ALPHA_SCALE = 0x801F,
	GL_POST_CONVOLUTION_RED_BIAS = 0x8020,
	GL_POST_CONVOLUTION_GREEN_BIAS = 0x8021,
	GL_POST_CONVOLUTION_BLUE_BIAS = 0x8022,
	GL_POST_CONVOLUTION_ALPHA_BIAS = 0x8023,
	GL_HISTOGRAM = 0x8024,
	GL_PROXY_HISTOGRAM = 0x8025,
	GL_HISTOGRAM_WIDTH = 0x8026,
	GL_HISTOGRAM_FORMAT = 0x8027,
	GL_HISTOGRAM_RED_SIZE = 0x8028,
	GL_HISTOGRAM_GREEN_SIZE = 0x8029,
	GL_HISTOGRAM_BLUE_SIZE = 0x802A,
	GL_HISTOGRAM_ALPHA_SIZE = 0x802B,
	GL_HISTOGRAM_LUMINANCE_SIZE = 0x802C,
	GL_HISTOGRAM_SINK = 0x802D,
	GL_MINMAX = 0x802E,
	GL_MINMAX_FORMAT = 0x802F,
	GL_MINMAX_SINK = 0x8030,
	GL_TABLE_TOO_LARGE = 0x8031,
	GL_COLOR_MATRIX = 0x80B1,
	GL_COLOR_MATRIX_STACK_DEPTH = 0x80B2,
	GL_MAX_COLOR_MATRIX_STACK_DEPTH = 0x80B3,
	GL_POST_COLOR_MATRIX_RED_SCALE = 0x80B4,
	GL_POST_COLOR_MATRIX_GREEN_SCALE = 0x80B5,
	GL_POST_COLOR_MATRIX_BLUE_SCALE = 0x80B6,
	GL_POST_COLOR_MATRIX_ALPHA_SCALE = 0x80B7,
	GL_POST_COLOR_MATRIX_RED_BIAS = 0x80B8,
	GL_POST_COLOR_MATRIX_GREEN_BIAS = 0x80B9,
	GL_POST_COLOR_MATRIX_BLUE_BIAS = 0x80BA,
	GL_POST_COLOR_MATRIX_ALPHA_BIAS = 0x80BB,
	GL_COLOR_TABLE = 0x80D0,
	GL_POST_CONVOLUTION_COLOR_TABLE = 0x80D1,
	GL_POST_COLOR_MATRIX_COLOR_TABLE = 0x80D2,
	GL_PROXY_COLOR_TABLE = 0x80D3,
	GL_PROXY_POST_CONVOLUTION_COLOR_TABLE = 0x80D4,
	GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE = 0x80D5,
	GL_COLOR_TABLE_SCALE = 0x80D6,
	GL_COLOR_TABLE_BIAS = 0x80D7,
	GL_COLOR_TABLE_FORMAT = 0x80D8,
	GL_COLOR_TABLE_WIDTH = 0x80D9,
	GL_COLOR_TABLE_RED_SIZE = 0x80DA,
	GL_COLOR_TABLE_GREEN_SIZE = 0x80DB,
	GL_COLOR_TABLE_BLUE_SIZE = 0x80DC,
	GL_COLOR_TABLE_ALPHA_SIZE = 0x80DD,
	GL_COLOR_TABLE_LUMINANCE_SIZE = 0x80DE,
	GL_COLOR_TABLE_INTENSITY_SIZE = 0x80DF,
	GL_IGNORE_BORDER = 0x8150,
	GL_CONSTANT_BORDER = 0x8151,
	GL_WRAP_BORDER = 0x8152,
	GL_REPLICATE_BORDER = 0x8153,
	GL_CONVOLUTION_BORDER_COLOR = 0x8154,
	GL_ARB_matrix_palette = 0x1,
	GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB = 0x8841,
	GL_MAX_PALETTE_MATRICES_ARB = 0x8842,
	GL_CURRENT_PALETTE_MATRIX_ARB = 0x8843,
	GL_MATRIX_INDEX_ARRAY_ARB = 0x8844,
	GL_CURRENT_MATRIX_INDEX_ARB = 0x8845,
	GL_MATRIX_INDEX_ARRAY_SIZE_ARB = 0x8846,
	GL_MATRIX_INDEX_ARRAY_TYPE_ARB = 0x8847,
	GL_MATRIX_INDEX_ARRAY_STRIDE_ARB = 0x8848,
	GL_MATRIX_INDEX_ARRAY_POINTER_ARB = 0x8849,
	GL_ARB_multitexture = 0x1,
	GL_TEXTURE1_ARB = 0x84C1,
	GL_TEXTURE2_ARB = 0x84C2,
	GL_TEXTURE3_ARB = 0x84C3,
	GL_TEXTURE4_ARB = 0x84C4,
	GL_TEXTURE5_ARB = 0x84C5,
	GL_TEXTURE6_ARB = 0x84C6,
	GL_TEXTURE7_ARB = 0x84C7,
	GL_TEXTURE8_ARB = 0x84C8,
	GL_TEXTURE9_ARB = 0x84C9,
	GL_TEXTURE10_ARB = 0x84CA,
	GL_TEXTURE11_ARB = 0x84CB,
	GL_TEXTURE12_ARB = 0x84CC,
	GL_TEXTURE13_ARB = 0x84CD,
	GL_TEXTURE14_ARB = 0x84CE,
	GL_TEXTURE15_ARB = 0x84CF,
	GL_TEXTURE16_ARB = 0x84D0,
	GL_TEXTURE17_ARB = 0x84D1,
	GL_TEXTURE18_ARB = 0x84D2,
	GL_TEXTURE19_ARB = 0x84D3,
	GL_TEXTURE20_ARB = 0x84D4,
	GL_TEXTURE21_ARB = 0x84D5,
	GL_TEXTURE22_ARB = 0x84D6,
	GL_TEXTURE23_ARB = 0x84D7,
	GL_TEXTURE24_ARB = 0x84D8,
	GL_TEXTURE25_ARB = 0x84D9,
	GL_TEXTURE26_ARB = 0x84DA,
	GL_TEXTURE27_ARB = 0x84DB,
	GL_TEXTURE28_ARB = 0x84DC,
	GL_TEXTURE29_ARB = 0x84DD,
	GL_TEXTURE30_ARB = 0x84DE,
	GL_TEXTURE31_ARB = 0x84DF,
	GL_ACTIVE_TEXTURE_ARB = 0x84E0,
	GL_CLIENT_ACTIVE_TEXTURE_ARB = 0x84E1,
	GL_MAX_TEXTURE_UNITS_ARB = 0x84E2,
	GL_ARB_point_parameters = 0x1,
	GL_POINT_SIZE_MAX_ARB = 0x8127,
	GL_POINT_FADE_THRESHOLD_SIZE_ARB = 0x8128,
	GL_POINT_DISTANCE_ATTENUATION_ARB = 0x8129,
	GL_ARB_robustness = 0x1,
	GL_LOSE_CONTEXT_ON_RESET_ARB = 0x8252,
	GL_GUILTY_CONTEXT_RESET_ARB = 0x8253,
	GL_INNOCENT_CONTEXT_RESET_ARB = 0x8254,
	GL_UNKNOWN_CONTEXT_RESET_ARB = 0x8255,
	GL_RESET_NOTIFICATION_STRATEGY_ARB = 0x8256,
	GL_NO_RESET_NOTIFICATION_ARB = 0x8261,
	GL_ARB_separate_shader_objects = 0x1,
	GL_FRAGMENT_SHADER_BIT = 0x00000002,
	GL_GEOMETRY_SHADER_BIT = 0x00000004,
	GL_TESS_CONTROL_SHADER_BIT = 0x00000008,
	GL_TESS_EVALUATION_SHADER_BIT = 0x00000010,
	GL_PROGRAM_SEPARABLE = 0x8258,
	GL_ACTIVE_PROGRAM = 0x8259,
	GL_PROGRAM_PIPELINE_BINDING = 0x825A,
	GL_ALL_SHADER_BITS = 0xFFFFFFFF,
	GL_ARB_vertex_attrib_64bit = 0x1,
	GL_DOUBLE_MAT3 = 0x8F47,
	GL_DOUBLE_MAT4 = 0x8F48,
	GL_DOUBLE_VEC2 = 0x8FFC,
	GL_DOUBLE_VEC3 = 0x8FFD,
	GL_DOUBLE_VEC4 = 0x8FFE,
	GL_ARB_vertex_blend = 0x1,
	GL_ACTIVE_VERTEX_UNITS_ARB = 0x86A5,
	GL_WEIGHT_SUM_UNITY_ARB = 0x86A6,
	GL_VERTEX_BLEND_ARB = 0x86A7,
	GL_CURRENT_WEIGHT_ARB = 0x86A8,
	GL_WEIGHT_ARRAY_TYPE_ARB = 0x86A9,
	GL_WEIGHT_ARRAY_STRIDE_ARB = 0x86AA,
	GL_WEIGHT_ARRAY_SIZE_ARB = 0x86AB,
	GL_WEIGHT_ARRAY_POINTER_ARB = 0x86AC,
	GL_WEIGHT_ARRAY_ARB = 0x86AD,
	GL_MODELVIEW0_ARB = 0x1700,
	GL_MODELVIEW1_ARB = 0x850A,
	GL_MODELVIEW2_ARB = 0x8722,
	GL_MODELVIEW3_ARB = 0x8723,
	GL_MODELVIEW4_ARB = 0x8724,
	GL_MODELVIEW5_ARB = 0x8725,
	GL_MODELVIEW6_ARB = 0x8726,
	GL_MODELVIEW7_ARB = 0x8727,
	GL_MODELVIEW8_ARB = 0x8728,
	GL_MODELVIEW9_ARB = 0x8729,
	GL_MODELVIEW10_ARB = 0x872A,
	GL_MODELVIEW11_ARB = 0x872B,
	GL_MODELVIEW12_ARB = 0x872C,
	GL_MODELVIEW13_ARB = 0x872D,
	GL_MODELVIEW14_ARB = 0x872E,
	GL_MODELVIEW15_ARB = 0x872F,
	GL_MODELVIEW16_ARB = 0x8730,
	GL_MODELVIEW17_ARB = 0x8731,
	GL_MODELVIEW18_ARB = 0x8732,
	GL_MODELVIEW19_ARB = 0x8733,
	GL_MODELVIEW20_ARB = 0x8734,
	GL_MODELVIEW21_ARB = 0x8735,
	GL_MODELVIEW22_ARB = 0x8736,
	GL_MODELVIEW23_ARB = 0x8737,
	GL_MODELVIEW24_ARB = 0x8738,
	GL_MODELVIEW25_ARB = 0x8739,
	GL_MODELVIEW26_ARB = 0x873A,
	GL_MODELVIEW27_ARB = 0x873B,
	GL_MODELVIEW28_ARB = 0x873C,
	GL_MODELVIEW29_ARB = 0x873D,
	GL_MODELVIEW30_ARB = 0x873E,
	GL_MODELVIEW31_ARB = 0x873F,
	GL_ATIX_point_sprites = 0x1,
	GL_TEXTURE_POINT_ONE_COORD_ATIX = 0x60B1,
	GL_TEXTURE_POINT_SPRITE_ATIX = 0x60B2,
	GL_POINT_SPRITE_CULL_MODE_ATIX = 0x60B3,
	GL_POINT_SPRITE_CULL_CENTER_ATIX = 0x60B4,
	GL_POINT_SPRITE_CULL_CLIP_ATIX = 0x60B5,
	GL_ATIX_texture_env_combine3 = 0x1,
	GL_MODULATE_SIGNED_ADD_ATIX = 0x8745,
	GL_MODULATE_SUBTRACT_ATIX = 0x8746,
	GL_ATIX_texture_env_route = 0x1,
	GL_TEXTURE_OUTPUT_RGB_ATIX = 0x8748,
	GL_TEXTURE_OUTPUT_ALPHA_ATIX = 0x8749,
	GL_ATIX_vertex_shader_output_point_size = 0x1,
	GL_ATI_envmap_bumpmap = 0x1,
	GL_BUMP_ROT_MATRIX_SIZE_ATI = 0x8776,
	GL_BUMP_NUM_TEX_UNITS_ATI = 0x8777,
	GL_BUMP_TEX_UNITS_ATI = 0x8778,
	GL_DUDV_ATI = 0x8779,
	GL_DU8DV8_ATI = 0x877A,
	GL_BUMP_ENVMAP_ATI = 0x877B,
	GL_BUMP_TARGET_ATI = 0x877C,
	GL_ATI_map_object_buffer = 0x1,
	GL_ATI_pn_triangles = 0x1,
	GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI = 0x87F1,
	GL_PN_TRIANGLES_POINT_MODE_ATI = 0x87F2,
	GL_PN_TRIANGLES_NORMAL_MODE_ATI = 0x87F3,
	GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI = 0x87F4,
	GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI = 0x87F5,
	GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI = 0x87F6,
	GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI = 0x87F7,
	GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI = 0x87F8,
	GL_ATI_separate_stencil = 0x1,
	GL_STENCIL_BACK_FAIL_ATI = 0x8801,
	GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI = 0x8802,
	GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI = 0x8803,
	GL_ATI_shader_texture_lod = 0x1,
	GL_ATI_texture_compression_3dc = 0x1,
	GL_ATI_vertex_streams = 0x1,
	GL_VERTEX_SOURCE_ATI = 0x876C,
	GL_VERTEX_STREAM0_ATI = 0x876D,
	GL_VERTEX_STREAM1_ATI = 0x876E,
	GL_VERTEX_STREAM2_ATI = 0x876F,
	GL_VERTEX_STREAM3_ATI = 0x8770,
	GL_VERTEX_STREAM4_ATI = 0x8771,
	GL_VERTEX_STREAM5_ATI = 0x8772,
	GL_VERTEX_STREAM6_ATI = 0x8773,
	GL_VERTEX_STREAM7_ATI = 0x8774,
	GL_EXT_bindable_uniform = 0x1,
	GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT = 0x8DE3,
	GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT = 0x8DE4,
	GL_MAX_BINDABLE_UNIFORM_SIZE_EXT = 0x8DED,
	GL_UNIFORM_BUFFER_BINDING_EXT = 0x8DEF,
	GL_UNIFORM_BUFFER_EXT = 0x8DEE,
	GL_EXT_Cg_shader = 0x1,
	GL_CG_FRAGMENT_SHADER_EXT = 0x890F,
	GL_EXT_depth_bounds_test = 0x1,
	GL_DEPTH_BOUNDS_EXT = 0x8891,
	GL_EXT_draw_instanced = 0x1,
	GL_EXT_draw_range_elements = 0x1,
	GL_MAX_ELEMENTS_INDICES_EXT = 0x80E9,
	GL_EXT_fog_coord = 0x1,
	GL_FOG_COORDINATE_EXT = 0x8451,
	GL_FRAGMENT_DEPTH_EXT = 0x8452,
	GL_CURRENT_FOG_COORDINATE_EXT = 0x8453,
	GL_FOG_COORDINATE_ARRAY_TYPE_EXT = 0x8454,
	GL_FOG_COORDINATE_ARRAY_STRIDE_EXT = 0x8455,
	GL_FOG_COORDINATE_ARRAY_POINTER_EXT = 0x8456,
	GL_FOG_COORDINATE_ARRAY_EXT = 0x8457,
	GL_EXT_framebuffer_sRGB = 0x1,
	GL_FRAMEBUFFER_SRGB_CAPABLE_EXT = 0x8DBA,
	GL_EXT_geometry_shader4 = 0x1,
	GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT = 0x8DDD,
	GL_MAX_VERTEX_VARYING_COMPONENTS_EXT = 0x8DDE,
	GL_MAX_VARYING_COMPONENTS_EXT = 0x8B4B,
	GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT = 0x8DDF,
	GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT = 0x8DE0,
	GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT = 0x8DE1,
	GL_GEOMETRY_VERTICES_OUT_EXT = 0x8DDA,
	GL_GEOMETRY_INPUT_TYPE_EXT = 0x8DDB,
	GL_GEOMETRY_OUTPUT_TYPE_EXT = 0x8DDC,
	GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT = 0x8C29,
	GL_LINES_ADJACENCY_EXT = 0xA,
	GL_LINE_STRIP_ADJACENCY_EXT = 0xB,
	GL_TRIANGLES_ADJACENCY_EXT = 0xC,
	GL_TRIANGLE_STRIP_ADJACENCY_EXT = 0xD,
	GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT = 0x8DA7,
	GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT = 0x8DA8,
	GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT = 0x8DA9,
	GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT = 0x8CD4,
	GL_PROGRAM_POINT_SIZE_EXT = 0x8642,
	GL_EXT_gpu_program_parameters = 0x1,
	GL_EXT_gpu_shader4 = 0x1,
	GL_SAMPLER_2D_ARRAY_EXT = 0x8DC1,
	GL_SAMPLER_BUFFER_EXT = 0x8DC2,
	GL_SAMPLER_1D_ARRAY_SHADOW_EXT = 0x8DC3,
	GL_SAMPLER_2D_ARRAY_SHADOW_EXT = 0x8DC4,
	GL_SAMPLER_CUBE_SHADOW_EXT = 0x8DC5,
	GL_UNSIGNED_INT_VEC2_EXT = 0x8DC6,
	GL_UNSIGNED_INT_VEC3_EXT = 0x8DC7,
	GL_UNSIGNED_INT_VEC4_EXT = 0x8DC8,
	GL_INT_SAMPLER_1D_EXT = 0x8DC9,
	GL_INT_SAMPLER_2D_EXT = 0x8DCA,
	GL_INT_SAMPLER_3D_EXT = 0x8DCB,
	GL_INT_SAMPLER_CUBE_EXT = 0x8DCC,
	GL_INT_SAMPLER_2D_RECT_EXT = 0x8DCD,
	GL_INT_SAMPLER_1D_ARRAY_EXT = 0x8DCE,
	GL_INT_SAMPLER_2D_ARRAY_EXT = 0x8DCF,
	GL_INT_SAMPLER_BUFFER_EXT = 0x8DD0,
	GL_UNSIGNED_INT_SAMPLER_1D_EXT = 0x8DD1,
	GL_UNSIGNED_INT_SAMPLER_2D_EXT = 0x8DD2,
	GL_UNSIGNED_INT_SAMPLER_3D_EXT = 0x8DD3,
	GL_UNSIGNED_INT_SAMPLER_CUBE_EXT = 0x8DD4,
	GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT = 0x8DD5,
	GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT = 0x8DD6,
	GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT = 0x8DD7,
	GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT = 0x8DD8,
	GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT = 0x88FD,
	GL_EXT_packed_float = 0x1,
	GL_UNSIGNED_INT_10F_11F_11F_REV_EXT = 0x8C3B,
	GL_RGBA_SIGNED_COMPONENTS_EXT = 0x8C3C,
	GL_EXT_pixel_buffer_object = 0x1,
	GL_PIXEL_UNPACK_BUFFER_EXT = 0x88EC,
	GL_PIXEL_PACK_BUFFER_BINDING_EXT = 0x88ED,
	GL_PIXEL_UNPACK_BUFFER_BINDING_EXT = 0x88EF,
	GL_EXT_point_parameters = 0x1,
	GL_POINT_SIZE_MAX_EXT = 0x8127,
	GL_POINT_FADE_THRESHOLD_SIZE_EXT = 0x8128,
	GL_DISTANCE_ATTENUATION_EXT = 0x8129,
	GL_EXT_secondary_color = 0x1,
	GL_CURRENT_SECONDARY_COLOR_EXT = 0x8459,
	GL_SECONDARY_COLOR_ARRAY_SIZE_EXT = 0x845A,
	GL_SECONDARY_COLOR_ARRAY_TYPE_EXT = 0x845B,
	GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT = 0x845C,
	GL_SECONDARY_COLOR_ARRAY_POINTER_EXT = 0x845D,
	GL_SECONDARY_COLOR_ARRAY_EXT = 0x845E,
	GL_EXT_texture_array = 0x1,
	GL_PROXY_TEXTURE_1D_ARRAY_EXT = 0x8C19,
	GL_TEXTURE_2D_ARRAY_EXT = 0x8C1A,
	GL_PROXY_TEXTURE_2D_ARRAY_EXT = 0x8C1B,
	GL_TEXTURE_BINDING_1D_ARRAY_EXT = 0x8C1C,
	GL_TEXTURE_BINDING_2D_ARRAY_EXT = 0x8C1D,
	GL_MAX_ARRAY_TEXTURE_LAYERS_EXT = 0x88FF,
	GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT = 0x884E,
	GL_EXT_texture_buffer_object = 0x1,
	GL_MAX_TEXTURE_BUFFER_SIZE_EXT = 0x8C2B,
	GL_TEXTURE_BINDING_BUFFER_EXT = 0x8C2C,
	GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT = 0x8C2D,
	GL_TEXTURE_BUFFER_FORMAT_EXT = 0x8C2E,
	GL_EXT_texture_compression_latc = 0x1,
	GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT = 0x8C71,
	GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT = 0x8C72,
	GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT = 0x8C73,
	GL_EXT_texture_compression_rgtc = 0x1,
	GL_COMPRESSED_SIGNED_RED_RGTC1_EXT = 0x8DBC,
	GL_COMPRESSED_RED_GREEN_RGTC2_EXT = 0x8DBD,
	GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT = 0x8DBE,
	GL_EXT_texture_cube_map = 0x1,
	GL_REFLECTION_MAP_EXT = 0x8512,
	GL_TEXTURE_CUBE_MAP_EXT = 0x8513,
	GL_TEXTURE_BINDING_CUBE_MAP_EXT = 0x8514,
	GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT = 0x8515,
	GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT = 0x8516,
	GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT = 0x8517,
	GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT = 0x8518,
	GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT = 0x8519,
	GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT = 0x851A,
	GL_PROXY_TEXTURE_CUBE_MAP_EXT = 0x851B,
	GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT = 0x851C,
	GL_EXT_texture_edge_clamp = 0x1,
	GL_EXT_texture_integer = 0x1,
	GL_RGB32UI_EXT = 0x8D71,
	GL_ALPHA32UI_EXT = 0x8D72,
	GL_INTENSITY32UI_EXT = 0x8D73,
	GL_LUMINANCE32UI_EXT = 0x8D74,
	GL_LUMINANCE_ALPHA32UI_EXT = 0x8D75,
	GL_RGBA16UI_EXT = 0x8D76,
	GL_RGB16UI_EXT = 0x8D77,
	GL_ALPHA16UI_EXT = 0x8D78,
	GL_INTENSITY16UI_EXT = 0x8D79,
	GL_LUMINANCE16UI_EXT = 0x8D7A,
	GL_LUMINANCE_ALPHA16UI_EXT = 0x8D7B,
	GL_RGBA8UI_EXT = 0x8D7C,
	GL_RGB8UI_EXT = 0x8D7D,
	GL_ALPHA8UI_EXT = 0x8D7E,
	GL_INTENSITY8UI_EXT = 0x8D7F,
	GL_LUMINANCE8UI_EXT = 0x8D80,
	GL_LUMINANCE_ALPHA8UI_EXT = 0x8D81,
	GL_RGBA32I_EXT = 0x8D82,
	GL_RGB32I_EXT = 0x8D83,
	GL_ALPHA32I_EXT = 0x8D84,
	GL_INTENSITY32I_EXT = 0x8D85,
	GL_LUMINANCE32I_EXT = 0x8D86,
	GL_LUMINANCE_ALPHA32I_EXT = 0x8D87,
	GL_RGBA16I_EXT = 0x8D88,
	GL_RGB16I_EXT = 0x8D89,
	GL_ALPHA16I_EXT = 0x8D8A,
	GL_INTENSITY16I_EXT = 0x8D8B,
	GL_LUMINANCE16I_EXT = 0x8D8C,
	GL_LUMINANCE_ALPHA16I_EXT = 0x8D8D,
	GL_RGBA8I_EXT = 0x8D8E,
	GL_RGB8I_EXT = 0x8D8F,
	GL_ALPHA8I_EXT = 0x8D90,
	GL_INTENSITY8I_EXT = 0x8D91,
	GL_LUMINANCE8I_EXT = 0x8D92,
	GL_LUMINANCE_ALPHA8I_EXT = 0x8D93,
	GL_RED_INTEGER_EXT = 0x8D94,
	GL_GREEN_INTEGER_EXT = 0x8D95,
	GL_BLUE_INTEGER_EXT = 0x8D96,
	GL_ALPHA_INTEGER_EXT = 0x8D97,
	GL_RGB_INTEGER_EXT = 0x8D98,
	GL_RGBA_INTEGER_EXT = 0x8D99,
	GL_BGR_INTEGER_EXT = 0x8D9A,
	GL_BGRA_INTEGER_EXT = 0x8D9B,
	GL_LUMINANCE_INTEGER_EXT = 0x8D9C,
	GL_LUMINANCE_ALPHA_INTEGER_EXT = 0x8D9D,
	GL_RGBA_INTEGER_MODE_EXT = 0x8D9E,
	GL_EXT_texture_rectangle = 0x1,
	GL_TEXTURE_BINDING_RECTANGLE_EXT = 0x84F6,
	GL_PROXY_TEXTURE_RECTANGLE_EXT = 0x84F7,
	GL_MAX_RECTANGLE_TEXTURE_SIZE_EXT = 0x84F8,
	GL_EXT_texture_shared_exponent = 0x1,
	GL_UNSIGNED_INT_5_9_9_9_REV_EXT = 0x8C3E,
	GL_TEXTURE_SHARED_SIZE_EXT = 0x8C3F,
	GL_EXT_timer_query = 0x1,
	GL_EXT_vertex_shader = 0x1,
	GL_VERTEX_SHADER_BINDING_EXT = 0x8781,
	GL_OP_INDEX_EXT = 0x8782,
	GL_OP_NEGATE_EXT = 0x8783,
	GL_OP_DOT3_EXT = 0x8784,
	GL_OP_DOT4_EXT = 0x8785,
	GL_OP_MUL_EXT = 0x8786,
	GL_OP_ADD_EXT = 0x8787,
	GL_OP_MADD_EXT = 0x8788,
	GL_OP_FRAC_EXT = 0x8789,
	GL_OP_MAX_EXT = 0x878A,
	GL_OP_MIN_EXT = 0x878B,
	GL_OP_SET_GE_EXT = 0x878C,
	GL_OP_SET_LT_EXT = 0x878D,
	GL_OP_CLAMP_EXT = 0x878E,
	GL_OP_FLOOR_EXT = 0x878F,
	GL_OP_ROUND_EXT = 0x8790,
	GL_OP_EXP_BASE_2_EXT = 0x8791,
	GL_OP_LOG_BASE_2_EXT = 0x8792,
	GL_OP_POWER_EXT = 0x8793,
	GL_OP_RECIP_EXT = 0x8794,
	GL_OP_RECIP_SQRT_EXT = 0x8795,
	GL_OP_SUB_EXT = 0x8796,
	GL_OP_CROSS_PRODUCT_EXT = 0x8797,
	GL_OP_MULTIPLY_MATRIX_EXT = 0x8798,
	GL_OP_MOV_EXT = 0x8799,
	GL_OUTPUT_VERTEX_EXT = 0x879A,
	GL_OUTPUT_COLOR0_EXT = 0x879B,
	GL_OUTPUT_COLOR1_EXT = 0x879C,
	GL_OUTPUT_TEXTURE_COORD0_EXT = 0x879D,
	GL_OUTPUT_TEXTURE_COORD1_EXT = 0x879E,
	GL_OUTPUT_TEXTURE_COORD2_EXT = 0x879F,
	GL_OUTPUT_TEXTURE_COORD3_EXT = 0x87A0,
	GL_OUTPUT_TEXTURE_COORD4_EXT = 0x87A1,
	GL_OUTPUT_TEXTURE_COORD5_EXT = 0x87A2,
	GL_OUTPUT_TEXTURE_COORD6_EXT = 0x87A3,
	GL_OUTPUT_TEXTURE_COORD7_EXT = 0x87A4,
	GL_OUTPUT_TEXTURE_COORD8_EXT = 0x87A5,
	GL_OUTPUT_TEXTURE_COORD9_EXT = 0x87A6,
	GL_OUTPUT_TEXTURE_COORD10_EXT = 0x87A7,
	GL_OUTPUT_TEXTURE_COORD11_EXT = 0x87A8,
	GL_OUTPUT_TEXTURE_COORD12_EXT = 0x87A9,
	GL_OUTPUT_TEXTURE_COORD13_EXT = 0x87AA,
	GL_OUTPUT_TEXTURE_COORD14_EXT = 0x87AB,
	GL_OUTPUT_TEXTURE_COORD15_EXT = 0x87AC,
	GL_OUTPUT_TEXTURE_COORD16_EXT = 0x87AD,
	GL_OUTPUT_TEXTURE_COORD17_EXT = 0x87AE,
	GL_OUTPUT_TEXTURE_COORD18_EXT = 0x87AF,
	GL_OUTPUT_TEXTURE_COORD19_EXT = 0x87B0,
	GL_OUTPUT_TEXTURE_COORD20_EXT = 0x87B1,
	GL_OUTPUT_TEXTURE_COORD21_EXT = 0x87B2,
	GL_OUTPUT_TEXTURE_COORD22_EXT = 0x87B3,
	GL_OUTPUT_TEXTURE_COORD23_EXT = 0x87B4,
	GL_OUTPUT_TEXTURE_COORD24_EXT = 0x87B5,
	GL_OUTPUT_TEXTURE_COORD25_EXT = 0x87B6,
	GL_OUTPUT_TEXTURE_COORD26_EXT = 0x87B7,
	GL_OUTPUT_TEXTURE_COORD27_EXT = 0x87B8,
	GL_OUTPUT_TEXTURE_COORD28_EXT = 0x87B9,
	GL_OUTPUT_TEXTURE_COORD29_EXT = 0x87BA,
	GL_OUTPUT_TEXTURE_COORD30_EXT = 0x87BB,
	GL_OUTPUT_TEXTURE_COORD31_EXT = 0x87BC,
	GL_OUTPUT_FOG_EXT = 0x87BD,
	GL_SCALAR_EXT = 0x87BE,
	GL_VECTOR_EXT = 0x87BF,
	GL_MATRIX_EXT = 0x87C0,
	GL_VARIANT_EXT = 0x87C1,
	GL_INVARIANT_EXT = 0x87C2,
	GL_LOCAL_CONSTANT_EXT = 0x87C3,
	GL_LOCAL_EXT = 0x87C4,
	GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT = 0x87C5,
	GL_MAX_VERTEX_SHADER_VARIANTS_EXT = 0x87C6,
	GL_MAX_VERTEX_SHADER_INVARIANTS_EXT = 0x87C7,
	GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT = 0x87C8,
	GL_MAX_VERTEX_SHADER_LOCALS_EXT = 0x87C9,
	GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT = 0x87CA,
	GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT = 0x87CB,
	GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT = 0x87CC,
	GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT = 0x87CD,
	GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT = 0x87CE,
	GL_VERTEX_SHADER_INSTRUCTIONS_EXT = 0x87CF,
	GL_VERTEX_SHADER_VARIANTS_EXT = 0x87D0,
	GL_VERTEX_SHADER_INVARIANTS_EXT = 0x87D1,
	GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT = 0x87D2,
	GL_VERTEX_SHADER_LOCALS_EXT = 0x87D3,
	GL_VERTEX_SHADER_OPTIMIZED_EXT = 0x87D4,
	GL_X_EXT = 0x87D5,
	GL_Y_EXT = 0x87D6,
	GL_Z_EXT = 0x87D7,
	GL_W_EXT = 0x87D8,
	GL_NEGATIVE_X_EXT = 0x87D9,
	GL_NEGATIVE_Y_EXT = 0x87DA,
	GL_NEGATIVE_Z_EXT = 0x87DB,
	GL_NEGATIVE_W_EXT = 0x87DC,
	GL_ZERO_EXT = 0x87DD,
	GL_ONE_EXT = 0x87DE,
	GL_NEGATIVE_ONE_EXT = 0x87DF,
	GL_NORMALIZED_RANGE_EXT = 0x87E0,
	GL_FULL_RANGE_EXT = 0x87E1,
	GL_CURRENT_VERTEX_EXT = 0x87E2,
	GL_MVP_MATRIX_EXT = 0x87E3,
	GL_VARIANT_VALUE_EXT = 0x87E4,
	GL_VARIANT_DATATYPE_EXT = 0x87E5,
	GL_VARIANT_ARRAY_STRIDE_EXT = 0x87E6,
	GL_VARIANT_ARRAY_TYPE_EXT = 0x87E7,
	GL_VARIANT_ARRAY_EXT = 0x87E8,
	GL_VARIANT_ARRAY_POINTER_EXT = 0x87E9,
	GL_INVARIANT_VALUE_EXT = 0x87EA,
	GL_INVARIANT_DATATYPE_EXT = 0x87EB,
	GL_LOCAL_CONSTANT_VALUE_EXT = 0x87EC,
	GL_LOCAL_CONSTANT_DATATYPE_EXT = 0x87ED,
	GL_KTX_buffer_region = 0x1,
	GL_KTX_BACK_REGION = 0x1,
	GL_KTX_Z_REGION = 0x2,
	GL_KTX_STENCIL_REGION = 0x3,
	GL_NV_depth_buffer_float = 0x1,
	GL_DEPTH32F_STENCIL8_NV = 0x8DAC,
	GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV = 0x8DAD,
	GL_DEPTH_BUFFER_FLOAT_MODE_NV = 0x8DAF,
	GL_NV_depth_range_unclamped = 0x1,
	GL_CURRENT_SAMPLE_COUNT_QUERY_NV = 0x8865,
	GL_QUERY_RESULT_NV = 0x8866,
	GL_QUERY_RESULT_AVAILABLE_NV = 0x8867,
	GL_SAMPLE_COUNT_NV = 0x8914,
	GL_NV_fragment_program2 = 0x1,
	GL_MAX_PROGRAM_CALL_DEPTH_NV = 0x88F5,
	GL_MAX_PROGRAM_IF_DEPTH_NV = 0x88F6,
	GL_MAX_PROGRAM_LOOP_DEPTH_NV = 0x88F7,
	GL_MAX_PROGRAM_LOOP_COUNT_NV = 0x88F8,
	GL_NV_fragment_program4 = 0x1,
	GL_NV_gpu_program4 = 0x1,
	GL_NV_fragment_program_option = 0x1,
	GL_NV_framebuffer_multisample_coverage = 0x1,
	GL_RENDERBUFFER_COLOR_SAMPLES_NV = 0x8E10,
	GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV = 0x8E11,
	GL_MULTISAMPLE_COVERAGE_MODES_NV = 0x8E12,
	GL_NV_geometry_program4 = 0x1,
	GL_GEOMETRY_PROGRAM_NV = 0x8C26,
	GL_MAX_PROGRAM_OUTPUT_VERTICES_NV = 0x8C27,
	GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV = 0x8C28,
	GL_NV_geometry_shader4 = 0x1,
	GL_NV_gpu_program4 = 0x1,
	GL_MAX_PROGRAM_TEXEL_OFFSET_NV = 0x8905,
	GL_PROGRAM_ATTRIB_COMPONENTS_NV = 0x8906,
	GL_PROGRAM_RESULT_COMPONENTS_NV = 0x8907,
	GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV = 0x8908,
	GL_MAX_PROGRAM_RESULT_COMPONENTS_NV = 0x8909,
	GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV = 0x8DA5,
	GL_MAX_PROGRAM_GENERIC_RESULTS_NV = 0x8DA6,
	GL_NV_gpu_program5 = 0x1,
	GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_NV = 0x8E5B,
	GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_NV = 0x8E5C,
	GL_FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV = 0x8E5D,
	GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV = 0x8E5E,
	GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV = 0x8E5F,
	GL_NV_parameter_buffer_object = 0x1,
	GL_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV = 0x8DA3,
	GL_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV = 0x8DA4,
	GL_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV = 0x8DA0,
	GL_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV = 0x8DA1,
	GL_NV_present_video = 0x1,
	GL_FIELDS_NV = 0x8E27,
	GL_CURRENT_TIME_NV = 0x8E28,
	GL_NUM_FILL_STREAMS_NV = 0x8E29,
	GL_PRESENT_TIME_NV = 0x8E2A,
	GL_PRESENT_DURATION_NV = 0x8E2B,
	GL_NV_tessellation_program5 = 0x1,
	GL_MAX_PROGRAM_PATCH_ATTRIBS_NV = 0x86D8,
	GL_TESS_CONTROL_PROGRAM_NV = 0x891E,
	GL_TESS_EVALUATION_PROGRAM_NV = 0x891F,
	GL_TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV = 0x8C74,
	GL_TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV = 0x8C75,
	GL_NV_transform_feedback = 0x1,
	GL_BACK_SECONDARY_COLOR_NV = 0x8C78,
	GL_TEXTURE_COORD_NV = 0x8C79,
	GL_CLIP_DISTANCE_NV = 0x8C7A,
	GL_VERTEX_ID_NV = 0x8C7B,
	GL_PRIMITIVE_ID_NV = 0x8C7C,
	GL_GENERIC_ATTRIB_NV = 0x8C7D,
	GL_TRANSFORM_FEEDBACK_ATTRIBS_NV = 0x8C7E,
	GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV = 0x8C7F,
	GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV = 0x8C80,
	GL_ACTIVE_VARYINGS_NV = 0x8C81,
	GL_ACTIVE_VARYING_MAX_LENGTH_NV = 0x8C82,
	GL_TRANSFORM_FEEDBACK_VARYINGS_NV = 0x8C83,
	GL_TRANSFORM_FEEDBACK_BUFFER_START_NV = 0x8C84,
	GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV = 0x8C85,
	GL_TRANSFORM_FEEDBACK_RECORD_NV = 0x8C86,
	GL_PRIMITIVES_GENERATED_NV = 0x8C87,
	GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV = 0x8C88,
	GL_RASTERIZER_DISCARD_NV = 0x8C89,
	GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV = 0x8C8A,
	GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV = 0x8C8B,
	GL_INTERLEAVED_ATTRIBS_NV = 0x8C8C,
	GL_SEPARATE_ATTRIBS_NV = 0x8C8D,
	GL_TRANSFORM_FEEDBACK_BUFFER_NV = 0x8C8E,
	GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV = 0x8C8F,
	GL_NV_vdpau_interop = 0x1,
	GL_SURFACE_REGISTERED_NV = 0x86FD,
	GL_SURFACE_MAPPED_NV = 0x8700,
	GL_WRITE_DISCARD_NV = 0x88BE,
	GL_NV_vertex_program2_option = 0x1,
	GL_MAX_PROGRAM_CALL_DEPTH_NV = 0x88F5,
	GL_NV_vertex_program3 = 0x1,
	GL_NV_vertex_program4 = 0x1,
	GL_VERTEX_ATTRIB_ARRAY_INTEGER_NV = 0x88FD,
	GL_SGIX_shadow = 0x1,
	GL_TEXTURE_COMPARE_OPERATOR_SGIX = 0x819B,
	GL_TEXTURE_LEQUAL_R_SGIX = 0x819C,
	GL_TEXTURE_GEQUAL_R_SGIX = 0x819D,
	GL_SUN_read_video_pixels = 0x1,
	GL_VERSION_1_2 = 0x1,
	GL_UNSIGNED_SHORT_4_4_4_4 = 0x8033,
	GL_UNSIGNED_SHORT_5_5_5_1 = 0x8034,
	GL_UNSIGNED_INT_8_8_8_8 = 0x8035,
	GL_UNSIGNED_INT_10_10_10_2 = 0x8036,
	GL_RESCALE_NORMAL = 0x803A,
	GL_UNSIGNED_BYTE_2_3_3_REV = 0x8362,
	GL_UNSIGNED_SHORT_5_6_5 = 0x8363,
	GL_UNSIGNED_SHORT_5_6_5_REV = 0x8364,
	GL_UNSIGNED_SHORT_4_4_4_4_REV = 0x8365,
	GL_UNSIGNED_SHORT_1_5_5_5_REV = 0x8366,
	GL_UNSIGNED_INT_8_8_8_8_REV = 0x8367,
	GL_UNSIGNED_INT_2_10_10_10_REV = 0x8368,
	GL_BGR = 0x80E0,
	GL_BGRA = 0x80E1,
	GL_MAX_ELEMENTS_VERTICES = 0x80E8,
	GL_MAX_ELEMENTS_INDICES = 0x80E9,
	GL_CLAMP_TO_EDGE = 0x812F,
	GL_TEXTURE_MIN_LOD = 0x813A,
	GL_TEXTURE_MAX_LOD = 0x813B,
	GL_TEXTURE_BASE_LEVEL = 0x813C,
	GL_TEXTURE_MAX_LEVEL = 0x813D,
	GL_LIGHT_MODEL_COLOR_CONTROL = 0x81F8,
	GL_SINGLE_COLOR = 0x81F9,
	GL_SEPARATE_SPECULAR_COLOR = 0x81FA,
	GL_SMOOTH_POINT_SIZE_RANGE = 0x0B12,
	GL_SMOOTH_POINT_SIZE_GRANULARITY = 0x0B13,
	GL_SMOOTH_LINE_WIDTH_RANGE = 0x0B22,
	GL_SMOOTH_LINE_WIDTH_GRANULARITY = 0x0B23,
	GL_ALIASED_POINT_SIZE_RANGE = 0x846D,
	GL_ALIASED_LINE_WIDTH_RANGE = 0x846E,
	GL_PACK_SKIP_IMAGES = 0x806B,
	GL_PACK_IMAGE_HEIGHT = 0x806C,
	GL_UNPACK_SKIP_IMAGES = 0x806D,
	GL_UNPACK_IMAGE_HEIGHT = 0x806E,
	GL_TEXTURE_3D = 0x806F,
	GL_PROXY_TEXTURE_3D = 0x8070,
	GL_TEXTURE_DEPTH = 0x8071,
	GL_TEXTURE_WRAP_R = 0x8072,
	GL_MAX_3D_TEXTURE_SIZE = 0x8073,
	GL_TEXTURE_BINDING_3D = 0x806A,
	GL_VERSION_1_3 = 0x1,
	GL_TEXTURE1 = 0x84C1,
	GL_TEXTURE2 = 0x84C2,
	GL_TEXTURE3 = 0x84C3,
	GL_TEXTURE4 = 0x84C4,
	GL_TEXTURE5 = 0x84C5,
	GL_TEXTURE6 = 0x84C6,
	GL_TEXTURE7 = 0x84C7,
	GL_TEXTURE8 = 0x84C8,
	GL_TEXTURE9 = 0x84C9,
	GL_TEXTURE10 = 0x84CA,
	GL_TEXTURE11 = 0x84CB,
	GL_TEXTURE12 = 0x84CC,
	GL_TEXTURE13 = 0x84CD,
	GL_TEXTURE14 = 0x84CE,
	GL_TEXTURE15 = 0x84CF,
	GL_TEXTURE16 = 0x84D0,
	GL_TEXTURE17 = 0x84D1,
	GL_TEXTURE18 = 0x84D2,
	GL_TEXTURE19 = 0x84D3,
	GL_TEXTURE20 = 0x84D4,
	GL_TEXTURE21 = 0x84D5,
	GL_TEXTURE22 = 0x84D6,
	GL_TEXTURE23 = 0x84D7,
	GL_TEXTURE24 = 0x84D8,
	GL_TEXTURE25 = 0x84D9,
	GL_TEXTURE26 = 0x84DA,
	GL_TEXTURE27 = 0x84DB,
	GL_TEXTURE28 = 0x84DC,
	GL_TEXTURE29 = 0x84DD,
	GL_TEXTURE30 = 0x84DE,
	GL_TEXTURE31 = 0x84DF,
	GL_ACTIVE_TEXTURE = 0x84E0,
	GL_CLIENT_ACTIVE_TEXTURE = 0x84E1,
	GL_MAX_TEXTURE_UNITS = 0x84E2,
	GL_NORMAL_MAP = 0x8511,
	GL_REFLECTION_MAP = 0x8512,
	GL_TEXTURE_CUBE_MAP = 0x8513,
	GL_TEXTURE_BINDING_CUBE_MAP = 0x8514,
	GL_TEXTURE_CUBE_MAP_POSITIVE_X = 0x8515,
	GL_TEXTURE_CUBE_MAP_NEGATIVE_X = 0x8516,
	GL_TEXTURE_CUBE_MAP_POSITIVE_Y = 0x8517,
	GL_TEXTURE_CUBE_MAP_NEGATIVE_Y = 0x8518,
	GL_TEXTURE_CUBE_MAP_POSITIVE_Z = 0x8519,
	GL_TEXTURE_CUBE_MAP_NEGATIVE_Z = 0x851A,
	GL_PROXY_TEXTURE_CUBE_MAP = 0x851B,
	GL_MAX_CUBE_MAP_TEXTURE_SIZE = 0x851C,
	GL_COMPRESSED_ALPHA = 0x84E9,
	GL_COMPRESSED_LUMINANCE = 0x84EA,
	GL_COMPRESSED_LUMINANCE_ALPHA = 0x84EB,
	GL_COMPRESSED_INTENSITY = 0x84EC,
	GL_COMPRESSED_RGB = 0x84ED,
	GL_COMPRESSED_RGBA = 0x84EE,
	GL_TEXTURE_COMPRESSION_HINT = 0x84EF,
	GL_TEXTURE_COMPRESSED_IMAGE_SIZE = 0x86A0,
	GL_TEXTURE_COMPRESSED = 0x86A1,
	GL_NUM_COMPRESSED_TEXTURE_FORMATS = 0x86A2,
	GL_COMPRESSED_TEXTURE_FORMATS = 0x86A3,
	GL_MULTISAMPLE = 0x809D,
	GL_SAMPLE_ALPHA_TO_COVERAGE = 0x809E,
	GL_SAMPLE_ALPHA_TO_ONE = 0x809F,
	GL_SAMPLE_COVERAGE = 0x80A0,
	GL_SAMPLE_BUFFERS = 0x80A8,
	GL_SAMPLES = 0x80A9,
	GL_SAMPLE_COVERAGE_VALUE = 0x80AA,
	GL_SAMPLE_COVERAGE_INVERT = 0x80AB,
	GL_MULTISAMPLE_BIT = 0x20000000,
	GL_TRANSPOSE_MODELVIEW_MATRIX = 0x84E3,
	GL_TRANSPOSE_PROJECTION_MATRIX = 0x84E4,
	GL_TRANSPOSE_TEXTURE_MATRIX = 0x84E5,
	GL_TRANSPOSE_COLOR_MATRIX = 0x84E6,
	GL_COMBINE = 0x8570,
	GL_COMBINE_RGB = 0x8571,
	GL_COMBINE_ALPHA = 0x8572,
	GL_SOURCE0_RGB = 0x8580,
	GL_SOURCE1_RGB = 0x8581,
	GL_SOURCE2_RGB = 0x8582,
	GL_SOURCE0_ALPHA = 0x8588,
	GL_SOURCE1_ALPHA = 0x8589,
	GL_SOURCE2_ALPHA = 0x858A,
	GL_OPERAND0_RGB = 0x8590,
	GL_OPERAND1_RGB = 0x8591,
	GL_OPERAND2_RGB = 0x8592,
	GL_OPERAND0_ALPHA = 0x8598,
	GL_OPERAND1_ALPHA = 0x8599,
	GL_OPERAND2_ALPHA = 0x859A,
	GL_RGB_SCALE = 0x8573,
	GL_ADD_SIGNED = 0x8574,
	GL_INTERPOLATE = 0x8575,
	GL_SUBTRACT = 0x84E7,
	GL_CONSTANT = 0x8576,
	GL_PRIMARY_COLOR = 0x8577,
	GL_PREVIOUS = 0x8578,
	GL_DOT3_RGB = 0x86AE,
	GL_DOT3_RGBA = 0x86AF,
	GL_CLAMP_TO_BORDER = 0x812D,
	GL_VERSION_1_4 = 0x1,
	GL_GENERATE_MIPMAP_HINT = 0x8192,
	GL_DEPTH_COMPONENT16 = 0x81A5,
	GL_DEPTH_COMPONENT24 = 0x81A6,
	GL_DEPTH_COMPONENT32 = 0x81A7,
	GL_TEXTURE_DEPTH_SIZE = 0x884A,
	GL_DEPTH_TEXTURE_MODE = 0x884B,
	GL_TEXTURE_COMPARE_MODE = 0x884C,
	GL_TEXTURE_COMPARE_FUNC = 0x884D,
	GL_COMPARE_R_TO_TEXTURE = 0x884E,
	GL_FOG_COORDINATE_SOURCE = 0x8450,
	GL_FOG_COORDINATE = 0x8451,
	GL_FRAGMENT_DEPTH = 0x8452,
	GL_CURRENT_FOG_COORDINATE = 0x8453,
	GL_FOG_COORDINATE_ARRAY_TYPE = 0x8454,
	GL_FOG_COORDINATE_ARRAY_STRIDE = 0x8455,
	GL_FOG_COORDINATE_ARRAY_POINTER = 0x8456,
	GL_FOG_COORDINATE_ARRAY = 0x8457,
	GL_POINT_SIZE_MIN = 0x8126,
	GL_POINT_SIZE_MAX = 0x8127,
	GL_POINT_FADE_THRESHOLD_SIZE = 0x8128,
	GL_POINT_DISTANCE_ATTENUATION = 0x8129,
	GL_COLOR_SUM = 0x8458,
	GL_CURRENT_SECONDARY_COLOR = 0x8459,
	GL_SECONDARY_COLOR_ARRAY_SIZE = 0x845A,
	GL_SECONDARY_COLOR_ARRAY_TYPE = 0x845B,
	GL_SECONDARY_COLOR_ARRAY_STRIDE = 0x845C,
	GL_SECONDARY_COLOR_ARRAY_POINTER = 0x845D,
	GL_SECONDARY_COLOR_ARRAY = 0x845E,
	GL_BLEND_DST_RGB = 0x80C8,
	GL_BLEND_SRC_RGB = 0x80C9,
	GL_BLEND_DST_ALPHA = 0x80CA,
	GL_BLEND_SRC_ALPHA = 0x80CB,
	GL_INCR_WRAP = 0x8507,
	GL_DECR_WRAP = 0x8508,
	GL_TEXTURE_FILTER_CONTROL = 0x8500,
	GL_TEXTURE_LOD_BIAS = 0x8501,
	GL_MAX_TEXTURE_LOD_BIAS = 0x84FD,
	GL_MIRRORED_REPEAT = 0x8370,
	GL_VERSION_1_5 = 0x1,
	GL_BUFFER_USAGE = 0x8765,
	GL_QUERY_COUNTER_BITS = 0x8864,
	GL_CURRENT_QUERY = 0x8865,
	GL_QUERY_RESULT = 0x8866,
	GL_QUERY_RESULT_AVAILABLE = 0x8867,
	GL_ARRAY_BUFFER = 0x8892,
	GL_ELEMENT_ARRAY_BUFFER = 0x8893,
	GL_ARRAY_BUFFER_BINDING = 0x8894,
	GL_ELEMENT_ARRAY_BUFFER_BINDING = 0x8895,
	GL_VERTEX_ARRAY_BUFFER_BINDING = 0x8896,
	GL_NORMAL_ARRAY_BUFFER_BINDING = 0x8897,
	GL_COLOR_ARRAY_BUFFER_BINDING = 0x8898,
	GL_INDEX_ARRAY_BUFFER_BINDING = 0x8899,
	GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING = 0x889A,
	GL_EDGE_FLAG_ARRAY_BUFFER_BINDING = 0x889B,
	GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING = 0x889C,
	GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING = 0x889D,
	GL_WEIGHT_ARRAY_BUFFER_BINDING = 0x889E,
	GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 0x889F,
	GL_READ_ONLY = 0x88B8,
	GL_WRITE_ONLY = 0x88B9,
	GL_READ_WRITE = 0x88BA,
	GL_BUFFER_ACCESS = 0x88BB,
	GL_BUFFER_MAPPED = 0x88BC,
	GL_BUFFER_MAP_POINTER = 0x88BD,
	GL_STREAM_DRAW = 0x88E0,
	GL_STREAM_READ = 0x88E1,
	GL_STREAM_COPY = 0x88E2,
	GL_STATIC_DRAW = 0x88E4,
	GL_STATIC_READ = 0x88E5,
	GL_STATIC_COPY = 0x88E6,
	GL_DYNAMIC_DRAW = 0x88E8,
	GL_DYNAMIC_READ = 0x88E9,
	GL_DYNAMIC_COPY = 0x88EA,
	GL_SAMPLES_PASSED = 0x8914,
	GL_FOG_COORD_SRC = 0x1,
	GL_FOG_COORD = 0x1,
	GL_CURRENT_FOG_COORD = 0x1,
	GL_FOG_COORD_ARRAY_TYPE = 0x1,
	GL_FOG_COORD_ARRAY_STRIDE = 0x1,
	GL_FOG_COORD_ARRAY_POINTER = 0x1,
	GL_FOG_COORD_ARRAY = 0x1,
	GL_FOG_COORD_ARRAY_BUFFER_BINDING = 0x1,
	GL_SRC0_RGB = 0x1,
	GL_SRC1_RGB = 0x1,
	GL_SRC2_RGB = 0x1,
	GL_SRC0_ALPHA = 0x1,
	GL_SRC1_ALPHA = 0x1,
	GL_SRC2_ALPHA = 0x1,
	GL_VERSION_2_0 = 0x1,
	GL_BLEND_EQUATION = 0x1,
	GL_VERTEX_ATTRIB_ARRAY_SIZE = 0x8623,
	GL_VERTEX_ATTRIB_ARRAY_STRIDE = 0x8624,
	GL_VERTEX_ATTRIB_ARRAY_TYPE = 0x8625,
	GL_CURRENT_VERTEX_ATTRIB = 0x8626,
	GL_VERTEX_PROGRAM_POINT_SIZE = 0x8642,
	GL_VERTEX_PROGRAM_TWO_SIDE = 0x8643,
	GL_VERTEX_ATTRIB_ARRAY_POINTER = 0x8645,
	GL_STENCIL_BACK_FUNC = 0x8800,
	GL_STENCIL_BACK_FAIL = 0x8801,
	GL_STENCIL_BACK_PASS_DEPTH_FAIL = 0x8802,
	GL_STENCIL_BACK_PASS_DEPTH_PASS = 0x8803,
	GL_MAX_DRAW_BUFFERS = 0x8824,
	GL_DRAW_BUFFER0 = 0x8825,
	GL_DRAW_BUFFER1 = 0x8826,
	GL_DRAW_BUFFER2 = 0x8827,
	GL_DRAW_BUFFER3 = 0x8828,
	GL_DRAW_BUFFER4 = 0x8829,
	GL_DRAW_BUFFER5 = 0x882A,
	GL_DRAW_BUFFER6 = 0x882B,
	GL_DRAW_BUFFER7 = 0x882C,
	GL_DRAW_BUFFER8 = 0x882D,
	GL_DRAW_BUFFER9 = 0x882E,
	GL_DRAW_BUFFER10 = 0x882F,
	GL_DRAW_BUFFER11 = 0x8830,
	GL_DRAW_BUFFER12 = 0x8831,
	GL_DRAW_BUFFER13 = 0x8832,
	GL_DRAW_BUFFER14 = 0x8833,
	GL_DRAW_BUFFER15 = 0x8834,
	GL_BLEND_EQUATION_ALPHA = 0x883D,
	GL_POINT_SPRITE = 0x8861,
	GL_COORD_REPLACE = 0x8862,
	GL_MAX_VERTEX_ATTRIBS = 0x8869,
	GL_VERTEX_ATTRIB_ARRAY_NORMALIZED = 0x886A,
	GL_MAX_TEXTURE_COORDS = 0x8871,
	GL_MAX_TEXTURE_IMAGE_UNITS = 0x8872,
	GL_FRAGMENT_SHADER = 0x8B30,
	GL_VERTEX_SHADER = 0x8B31,
	GL_MAX_FRAGMENT_UNIFORM_COMPONENTS = 0x8B49,
	GL_MAX_VERTEX_UNIFORM_COMPONENTS = 0x8B4A,
	GL_MAX_VARYING_FLOATS = 0x8B4B,
	GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS = 0x8B4C,
	GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS = 0x8B4D,
	GL_SHADER_TYPE = 0x8B4F,
	GL_FLOAT_VEC2 = 0x8B50,
	GL_FLOAT_VEC3 = 0x8B51,
	GL_FLOAT_VEC4 = 0x8B52,
	GL_INT_VEC2 = 0x8B53,
	GL_INT_VEC3 = 0x8B54,
	GL_INT_VEC4 = 0x8B55,
	GL_BOOL = 0x8B56,
	GL_BOOL_VEC2 = 0x8B57,
	GL_BOOL_VEC3 = 0x8B58,
	GL_BOOL_VEC4 = 0x8B59,
	GL_FLOAT_MAT2 = 0x8B5A,
	GL_FLOAT_MAT3 = 0x8B5B,
	GL_FLOAT_MAT4 = 0x8B5C,
	GL_SAMPLER_1D = 0x8B5D,
	GL_SAMPLER_2D = 0x8B5E,
	GL_SAMPLER_3D = 0x8B5F,
	GL_SAMPLER_CUBE = 0x8B60,
	GL_SAMPLER_1D_SHADOW = 0x8B61,
	GL_SAMPLER_2D_SHADOW = 0x8B62,
	GL_DELETE_STATUS = 0x8B80,
	GL_COMPILE_STATUS = 0x8B81,
	GL_LINK_STATUS = 0x8B82,
	GL_VALIDATE_STATUS = 0x8B83,
	GL_INFO_LOG_LENGTH = 0x8B84,
	GL_ATTACHED_SHADERS = 0x8B85,
	GL_ACTIVE_UNIFORMS = 0x8B86,
	GL_ACTIVE_UNIFORM_MAX_LENGTH = 0x8B87,
	GL_SHADER_SOURCE_LENGTH = 0x8B88,
	GL_ACTIVE_ATTRIBUTES = 0x8B89,
	GL_ACTIVE_ATTRIBUTE_MAX_LENGTH = 0x8B8A,
	GL_FRAGMENT_SHADER_DERIVATIVE_HINT = 0x8B8B,
	GL_SHADING_LANGUAGE_VERSION = 0x8B8C,
	GL_CURRENT_PROGRAM = 0x8B8D,
	GL_POINT_SPRITE_COORD_ORIGIN = 0x8CA0,
	GL_LOWER_LEFT = 0x8CA1,
	GL_UPPER_LEFT = 0x8CA2,
	GL_STENCIL_BACK_REF = 0x8CA3,
	GL_STENCIL_BACK_VALUE_MASK = 0x8CA4,
	GL_STENCIL_BACK_WRITEMASK = 0x8CA5,
	GL_VERSION_2_1 = 0x1,
	GL_PIXEL_PACK_BUFFER = 0x88EB,
	GL_PIXEL_UNPACK_BUFFER = 0x88EC,
	GL_PIXEL_PACK_BUFFER_BINDING = 0x88ED,
	GL_PIXEL_UNPACK_BUFFER_BINDING = 0x88EF,
	GL_FLOAT_MAT2x3 = 0x8B65,
	GL_FLOAT_MAT2x4 = 0x8B66,
	GL_FLOAT_MAT3x2 = 0x8B67,
	GL_FLOAT_MAT3x4 = 0x8B68,
	GL_FLOAT_MAT4x2 = 0x8B69,
	GL_FLOAT_MAT4x3 = 0x8B6A,
	GL_SRGB = 0x8C40,
	GL_SRGB8 = 0x8C41,
	GL_SRGB_ALPHA = 0x8C42,
	GL_SRGB8_ALPHA8 = 0x8C43,
	GL_SLUMINANCE_ALPHA = 0x8C44,
	GL_SLUMINANCE8_ALPHA8 = 0x8C45,
	GL_SLUMINANCE = 0x8C46,
	GL_SLUMINANCE8 = 0x8C47,
	GL_COMPRESSED_SRGB = 0x8C48,
	GL_COMPRESSED_SRGB_ALPHA = 0x8C49,
	GL_COMPRESSED_SLUMINANCE = 0x8C4A,
	GL_COMPRESSED_SLUMINANCE_ALPHA = 0x8C4B,
	GL_VERSION_3_0 = 0x1,
	GL_COMPARE_R_TO_TEXTURE_ARB = 0x1,
	GL_CLIP_PLANE0 = 0x1,
	GL_CLIP_PLANE1 = 0x1,
	GL_CLIP_PLANE2 = 0x1,
	GL_CLIP_PLANE3 = 0x1,
	GL_CLIP_PLANE4 = 0x1,
	GL_CLIP_PLANE5 = 0x1,
	GL_MAX_CLIP_PLANES = 0x1,
	GL_MINOR_VERSION = 0x821C,
	GL_NUM_EXTENSIONS = 0x821D,
	GL_CONTEXT_FLAGS = 0x821E,
	GL_DEPTH_BUFFER = 0x8223,
	GL_STENCIL_BUFFER = 0x8224,
	GL_COMPRESSED_RED = 0x8225,
	GL_COMPRESSED_RG = 0x8226,
	GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT = 0x0001,
	GL_RGBA32F = 0x8814,
	GL_RGB32F = 0x8815,
	GL_RGBA16F = 0x881A,
	GL_RGB16F = 0x881B,
	GL_VERTEX_ATTRIB_ARRAY_INTEGER = 0x88FD,
	GL_MAX_ARRAY_TEXTURE_LAYERS = 0x88FF,
	GL_MIN_PROGRAM_TEXEL_OFFSET = 0x8904,
	GL_MAX_PROGRAM_TEXEL_OFFSET = 0x8905,
	GL_CLAMP_VERTEX_COLOR = 0x891A,
	GL_CLAMP_FRAGMENT_COLOR = 0x891B,
	GL_CLAMP_READ_COLOR = 0x891C,
	GL_FIXED_ONLY = 0x891D,
	GL_MAX_VARYING_COMPONENTS = 0x1,
	GL_TEXTURE_RED_TYPE = 0x8C10,
	GL_TEXTURE_GREEN_TYPE = 0x8C11,
	GL_TEXTURE_BLUE_TYPE = 0x8C12,
	GL_TEXTURE_ALPHA_TYPE = 0x8C13,
	GL_TEXTURE_LUMINANCE_TYPE = 0x8C14,
	GL_TEXTURE_INTENSITY_TYPE = 0x8C15,
	GL_TEXTURE_DEPTH_TYPE = 0x8C16,
	GL_UNSIGNED_NORMALIZED = 0x8C17,
	GL_TEXTURE_1D_ARRAY = 0x8C18,
	GL_PROXY_TEXTURE_1D_ARRAY = 0x8C19,
	GL_TEXTURE_2D_ARRAY = 0x8C1A,
	GL_PROXY_TEXTURE_2D_ARRAY = 0x8C1B,
	GL_TEXTURE_BINDING_1D_ARRAY = 0x8C1C,
	GL_TEXTURE_BINDING_2D_ARRAY = 0x8C1D,
	GL_R11F_G11F_B10F = 0x8C3A,
	GL_UNSIGNED_INT_10F_11F_11F_REV = 0x8C3B,
	GL_RGB9_E5 = 0x8C3D,
	GL_UNSIGNED_INT_5_9_9_9_REV = 0x8C3E,
	GL_TEXTURE_SHARED_SIZE = 0x8C3F,
	GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH = 0x8C76,
	GL_TRANSFORM_FEEDBACK_BUFFER_MODE = 0x8C7F,
	GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS = 0x8C80,
	GL_TRANSFORM_FEEDBACK_VARYINGS = 0x8C83,
	GL_TRANSFORM_FEEDBACK_BUFFER_START = 0x8C84,
	GL_TRANSFORM_FEEDBACK_BUFFER_SIZE = 0x8C85,
	GL_PRIMITIVES_GENERATED = 0x8C87,
	GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN = 0x8C88,
	GL_RASTERIZER_DISCARD = 0x8C89,
	GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS = 0x8C8A,
	GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS = 0x8C8B,
	GL_INTERLEAVED_ATTRIBS = 0x8C8C,
	GL_SEPARATE_ATTRIBS = 0x8C8D,
	GL_TRANSFORM_FEEDBACK_BUFFER = 0x8C8E,
	GL_TRANSFORM_FEEDBACK_BUFFER_BINDING = 0x8C8F,
	GL_RGBA32UI = 0x8D70,
	GL_RGB32UI = 0x8D71,
	GL_RGBA16UI = 0x8D76,
	GL_RGB16UI = 0x8D77,
	GL_RGBA8UI = 0x8D7C,
	GL_RGB8UI = 0x8D7D,
	GL_RGBA32I = 0x8D82,
	GL_RGB32I = 0x8D83,
	GL_RGBA16I = 0x8D88,
	GL_RGB16I = 0x8D89,
	GL_RGBA8I = 0x8D8E,
	GL_RGB8I = 0x8D8F,
	GL_RED_INTEGER = 0x8D94,
	GL_GREEN_INTEGER = 0x8D95,
	GL_BLUE_INTEGER = 0x8D96,
	GL_ALPHA_INTEGER = 0x8D97,
	GL_RGB_INTEGER = 0x8D98,
	GL_RGBA_INTEGER = 0x8D99,
	GL_BGR_INTEGER = 0x8D9A,
	GL_BGRA_INTEGER = 0x8D9B,
	GL_SAMPLER_1D_ARRAY = 0x8DC0,
	GL_SAMPLER_2D_ARRAY = 0x8DC1,
	GL_SAMPLER_1D_ARRAY_SHADOW = 0x8DC3,
	GL_SAMPLER_2D_ARRAY_SHADOW = 0x8DC4,
	GL_SAMPLER_CUBE_SHADOW = 0x8DC5,
	GL_UNSIGNED_INT_VEC2 = 0x8DC6,
	GL_UNSIGNED_INT_VEC3 = 0x8DC7,
	GL_UNSIGNED_INT_VEC4 = 0x8DC8,
	GL_INT_SAMPLER_1D = 0x8DC9,
	GL_INT_SAMPLER_2D = 0x8DCA,
	GL_INT_SAMPLER_3D = 0x8DCB,
	GL_INT_SAMPLER_CUBE = 0x8DCC,
	GL_INT_SAMPLER_1D_ARRAY = 0x8DCE,
	GL_INT_SAMPLER_2D_ARRAY = 0x8DCF,
	GL_UNSIGNED_INT_SAMPLER_1D = 0x8DD1,
	GL_UNSIGNED_INT_SAMPLER_2D = 0x8DD2,
	GL_UNSIGNED_INT_SAMPLER_3D = 0x8DD3,
	GL_UNSIGNED_INT_SAMPLER_CUBE = 0x8DD4,
	GL_UNSIGNED_INT_SAMPLER_1D_ARRAY = 0x8DD6,
	GL_UNSIGNED_INT_SAMPLER_2D_ARRAY = 0x8DD7,
	GL_QUERY_WAIT = 0x8E13,
	GL_QUERY_NO_WAIT = 0x8E14,
	GL_QUERY_BY_REGION_WAIT = 0x8E15,
	GL_QUERY_BY_REGION_NO_WAIT = 0x8E16,
	GL_VERSION_3_1 = 0x1,
	GL_SAMPLER_2D_RECT_SHADOW = 0x8B64,
	GL_SAMPLER_BUFFER = 0x8DC2,
	GL_INT_SAMPLER_2D_RECT = 0x8DCD,
	GL_INT_SAMPLER_BUFFER = 0x8DD0,
	GL_UNSIGNED_INT_SAMPLER_2D_RECT = 0x8DD5,
	GL_UNSIGNED_INT_SAMPLER_BUFFER = 0x8DD8,
	GL_TEXTURE_BUFFER = 0x8C2A,
	GL_MAX_TEXTURE_BUFFER_SIZE = 0x8C2B,
	GL_TEXTURE_BINDING_BUFFER = 0x8C2C,
	GL_TEXTURE_BUFFER_DATA_STORE_BINDING = 0x8C2D,
	GL_TEXTURE_BUFFER_FORMAT = 0x8C2E,
	GL_TEXTURE_RECTANGLE = 0x84F5,
	GL_TEXTURE_BINDING_RECTANGLE = 0x84F6,
	GL_PROXY_TEXTURE_RECTANGLE = 0x84F7,
	GL_MAX_RECTANGLE_TEXTURE_SIZE = 0x84F8,
	GL_RED_SNORM = 0x8F90,
	GL_RG_SNORM = 0x8F91,
	GL_RGB_SNORM = 0x8F92,
	GL_RGBA_SNORM = 0x8F93,
	GL_R8_SNORM = 0x8F94,
	GL_RG8_SNORM = 0x8F95,
	GL_RGB8_SNORM = 0x8F96,
	GL_RGBA8_SNORM = 0x8F97,
	GL_R16_SNORM = 0x8F98,
	GL_RG16_SNORM = 0x8F99,
	GL_RGB16_SNORM = 0x8F9A,
	GL_RGBA16_SNORM = 0x8F9B,
	GL_SIGNED_NORMALIZED = 0x8F9C,
	GL_PRIMITIVE_RESTART = 0x8F9D,
	GL_PRIMITIVE_RESTART_INDEX = 0x8F9E,
	GL_BUFFER_ACCESS_FLAGS = 0x911F,
	GL_BUFFER_MAP_LENGTH = 0x9120,
	GL_BUFFER_MAP_OFFSET = 0x9121,
	GL_VERSION_3_2 = 0x1,
	GL_CONTEXT_COMPATIBILITY_PROFILE_BIT = 0x00000002,
	GL_LINES_ADJACENCY = 0x000A,
	GL_LINE_STRIP_ADJACENCY = 0x000B,
	GL_TRIANGLES_ADJACENCY = 0x000C,
	GL_TRIANGLE_STRIP_ADJACENCY = 0x000D,
	GL_PROGRAM_POINT_SIZE = 0x8642,
	GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS = 0x8C29,
	GL_FRAMEBUFFER_ATTACHMENT_LAYERED = 0x8DA7,
	GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS = 0x8DA8,
	GL_GEOMETRY_SHADER = 0x8DD9,
	GL_GEOMETRY_VERTICES_OUT = 0x8916,
	GL_GEOMETRY_INPUT_TYPE = 0x8917,
	GL_GEOMETRY_OUTPUT_TYPE = 0x8918,
	GL_MAX_GEOMETRY_UNIFORM_COMPONENTS = 0x8DDF,
	GL_MAX_GEOMETRY_OUTPUT_VERTICES = 0x8DE0,
	GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS = 0x8DE1,
	GL_MAX_VERTEX_OUTPUT_COMPONENTS = 0x9122,
	GL_MAX_GEOMETRY_INPUT_COMPONENTS = 0x9123,
	GL_MAX_GEOMETRY_OUTPUT_COMPONENTS = 0x9124,
	GL_MAX_FRAGMENT_INPUT_COMPONENTS = 0x9125,
	GL_CONTEXT_PROFILE_MASK = 0x9126,
	GL_VERSION_3_3 = 0x1,
	GL_TEXTURE_SWIZZLE_G = 0x8E43,
	GL_TEXTURE_SWIZZLE_B = 0x8E44,
	GL_TEXTURE_SWIZZLE_A = 0x8E45,
	GL_TEXTURE_SWIZZLE_RGBA = 0x8E46,
	GL_RGB10_A2UI = 0x906F,
	GL_ANY_SAMPLES_PASSED = 0x8C2F,
	GL_VERTEX_ATTRIB_ARRAY_DIVISOR = 0x88FE,
	GL_VERSION_4_0 = 0x1,
	GL_MIN_SAMPLE_SHADING_VALUE = 0x8C37,
	GL_GEOMETRY_SHADER_INVOCATIONS = 0x887F,
	GL_MAX_GEOMETRY_SHADER_INVOCATIONS = 0x8E5A,
	GL_MIN_FRAGMENT_INTERPOLATION_OFFSET = 0x8E5B,
	GL_MAX_FRAGMENT_INTERPOLATION_OFFSET = 0x8E5C,
	GL_FRAGMENT_INTERPOLATION_OFFSET_BITS = 0x8E5D,
	GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET = 0x8E5E,
	GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET = 0x8E5F,
	GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS = 0x8F9F,
	GL_TEXTURE_CUBE_MAP_ARRAY = 0x9009,
	GL_TEXTURE_BINDING_CUBE_MAP_ARRAY = 0x900A,
	GL_PROXY_TEXTURE_CUBE_MAP_ARRAY = 0x900B,
	GL_SAMPLER_CUBE_MAP_ARRAY = 0x900C,
	GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW = 0x900D,
	GL_INT_SAMPLER_CUBE_MAP_ARRAY = 0x900E,
	GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY = 0x900F,
	GL_VERSION_4_1 = 0x1,
	GL_ACCUM = 0x0100,
	GL_LOAD = 0x0101,
	GL_RETURN = 0x0102,
	GL_MULT = 0x0103,
	GL_ADD = 0x0104,
	GL_NEVER = 0x0200,
	GL_LESS = 0x0201,
	GL_EQUAL = 0x0202,
	GL_LEQUAL = 0x0203,
	GL_GREATER = 0x0204,
	GL_NOTEQUAL = 0x0205,
	GL_GEQUAL = 0x0206,
	GL_ALWAYS = 0x0207,
	GL_CURRENT_BIT = 0x00000001,
	GL_POINT_BIT = 0x00000002,
	GL_LINE_BIT = 0x00000004,
	GL_POLYGON_BIT = 0x00000008,
	GL_POLYGON_STIPPLE_BIT = 0x00000010,
	GL_PIXEL_MODE_BIT = 0x00000020,
	GL_LIGHTING_BIT = 0x00000040,
	GL_FOG_BIT = 0x00000080,
	GL_DEPTH_BUFFER_BIT = 0x00000100,
	GL_ACCUM_BUFFER_BIT = 0x00000200,
	GL_STENCIL_BUFFER_BIT = 0x00000400,
	GL_VIEWPORT_BIT = 0x00000800,
	GL_TRANSFORM_BIT = 0x00001000,
	GL_ENABLE_BIT = 0x00002000,
	GL_COLOR_BUFFER_BIT = 0x00004000,
	GL_HINT_BIT = 0x00008000,
	GL_EVAL_BIT = 0x00010000,
	GL_LIST_BIT = 0x00020000,
	GL_TEXTURE_BIT = 0x00040000,
	GL_SCISSOR_BIT = 0x00080000,
	GL_ALL_ATTRIB_BITS = 0x000fffff,
	GL_POINTS = 0x0000,
	GL_LINES = 0x0001,
	GL_LINE_LOOP = 0x0002,
	GL_LINE_STRIP = 0x0003,
	GL_TRIANGLES = 0x0004,
	GL_TRIANGLE_STRIP = 0x0005,
	GL_TRIANGLE_FAN = 0x0006,
	GL_QUADS = 0x0007,
	GL_QUAD_STRIP = 0x0008,
	GL_POLYGON = 0x0009,
	GL_ZERO = 0x1,
	GL_ONE = 0x1,
	GL_SRC_COLOR = 0x0300,
	GL_ONE_MINUS_SRC_COLOR = 0x0301,
	GL_SRC_ALPHA = 0x0302,
	GL_ONE_MINUS_SRC_ALPHA = 0x0303,
	GL_DST_ALPHA = 0x0304,
	GL_ONE_MINUS_DST_ALPHA = 0x0305,
	GL_DST_COLOR = 0x0306,
	GL_ONE_MINUS_DST_COLOR = 0x0307,
	GL_SRC_ALPHA_SATURATE = 0x0308,
	GL_TRUE = 0x1,
	GL_FALSE = 0x1,
	GL_CLIP_PLANE0 = 0x3000,
	GL_CLIP_PLANE1 = 0x3001,
	GL_CLIP_PLANE2 = 0x3002,
	GL_CLIP_PLANE3 = 0x3003,
	GL_CLIP_PLANE4 = 0x3004,
	GL_CLIP_PLANE5 = 0x3005,
	GL_BYTE = 0x1400,
	GL_UNSIGNED_BYTE = 0x1401,
	GL_SHORT = 0x1402,
	GL_UNSIGNED_SHORT = 0x1403,
	GL_INT = 0x1404,
	GL_UNSIGNED_INT = 0x1405,
	GL_FLOAT = 0x1406,
	GL_2_BYTES = 0x1407,
	GL_3_BYTES = 0x1408,
	GL_4_BYTES = 0x1409,
	GL_DOUBLE = 0x140A,
	GL_NONE = 0x1,
	GL_FRONT_LEFT = 0x0400,
	GL_FRONT_RIGHT = 0x0401,
	GL_BACK_LEFT = 0x0402,
	GL_BACK_RIGHT = 0x0403,
	GL_FRONT = 0x0404,
	GL_BACK = 0x0405,
	GL_LEFT = 0x0406,
	GL_RIGHT = 0x0407,
	GL_FRONT_AND_BACK = 0x0408,
	GL_AUX0 = 0x0409,
	GL_AUX1 = 0x040A,
	GL_AUX2 = 0x040B,
	GL_AUX3 = 0x040C,
	GL_NO_ERROR = 0x1,
	GL_INVALID_ENUM = 0x0500,
	GL_INVALID_VALUE = 0x0501,
	GL_INVALID_OPERATION = 0x0502,
	GL_STACK_OVERFLOW = 0x0503,
	GL_STACK_UNDERFLOW = 0x0504,
	GL_OUT_OF_MEMORY = 0x0505,
	GL_2D = 0x0600,
	GL_3D = 0x0601,
	GL_3D_COLOR = 0x0602,
	GL_3D_COLOR_TEXTURE = 0x0603,
	GL_4D_COLOR_TEXTURE = 0x0604,
	GL_PASS_THROUGH_TOKEN = 0x0700,
	GL_POINT_TOKEN = 0x0701,
	GL_LINE_TOKEN = 0x0702,
	GL_POLYGON_TOKEN = 0x0703,
	GL_BITMAP_TOKEN = 0x0704,
	GL_DRAW_PIXEL_TOKEN = 0x0705,
	GL_COPY_PIXEL_TOKEN = 0x0706,
	GL_LINE_RESET_TOKEN = 0x0707,
	GL_EXP = 0x0800,
	GL_EXP2 = 0x0801,
	GL_CW = 0x0900,
	GL_CCW = 0x0901,
	GL_COEFF = 0x0A00,
	GL_ORDER = 0x0A01,
	GL_DOMAIN = 0x0A02,
	GL_CURRENT_COLOR = 0x0B00,
	GL_CURRENT_INDEX = 0x0B01,
	GL_CURRENT_NORMAL = 0x0B02,
	GL_CURRENT_TEXTURE_COORDS = 0x0B03,
	GL_CURRENT_RASTER_COLOR = 0x0B04,
	GL_CURRENT_RASTER_INDEX = 0x0B05,
	GL_CURRENT_RASTER_TEXTURE_COORDS = 0x0B06,
	GL_CURRENT_RASTER_POSITION = 0x0B07,
	GL_CURRENT_RASTER_POSITION_VALID = 0x0B08,
	GL_CURRENT_RASTER_DISTANCE = 0x0B09,
	GL_POINT_SMOOTH = 0x0B10,
	GL_POINT_SIZE = 0x0B11,
	GL_POINT_SIZE_RANGE = 0x0B12,
	GL_POINT_SIZE_GRANULARITY = 0x0B13,
	GL_LINE_SMOOTH = 0x0B20,
	GL_LINE_WIDTH = 0x0B21,
	GL_LINE_WIDTH_RANGE = 0x0B22,
	GL_LINE_WIDTH_GRANULARITY = 0x0B23,
	GL_LINE_STIPPLE = 0x0B24,
	GL_LINE_STIPPLE_PATTERN = 0x0B25,
	GL_LINE_STIPPLE_REPEAT = 0x0B26,
	GL_LIST_MODE = 0x0B30,
	GL_MAX_LIST_NESTING = 0x0B31,
	GL_LIST_BASE = 0x0B32,
	GL_LIST_INDEX = 0x0B33,
	GL_POLYGON_MODE = 0x0B40,
	GL_POLYGON_SMOOTH = 0x0B41,
	GL_POLYGON_STIPPLE = 0x0B42,
	GL_EDGE_FLAG = 0x0B43,
	GL_CULL_FACE = 0x0B44,
	GL_CULL_FACE_MODE = 0x0B45,
	GL_FRONT_FACE = 0x0B46,
	GL_LIGHTING = 0x0B50,
	GL_LIGHT_MODEL_LOCAL_VIEWER = 0x0B51,
	GL_LIGHT_MODEL_TWO_SIDE = 0x0B52,
	GL_LIGHT_MODEL_AMBIENT = 0x0B53,
	GL_SHADE_MODEL = 0x0B54,
	GL_COLOR_MATERIAL_FACE = 0x0B55,
	GL_COLOR_MATERIAL_PARAMETER = 0x0B56,
	GL_COLOR_MATERIAL = 0x0B57,
	GL_FOG = 0x0B60,
	GL_FOG_INDEX = 0x0B61,
	GL_FOG_DENSITY = 0x0B62,
	GL_FOG_START = 0x0B63,
	GL_FOG_END = 0x0B64,
	GL_FOG_MODE = 0x0B65,
	GL_FOG_COLOR = 0x0B66,
	GL_DEPTH_RANGE = 0x0B70,
	GL_DEPTH_TEST = 0x0B71,
	GL_DEPTH_WRITEMASK = 0x0B72,
	GL_DEPTH_CLEAR_VALUE = 0x0B73,
	GL_DEPTH_FUNC = 0x0B74,
	GL_ACCUM_CLEAR_VALUE = 0x0B80,
	GL_STENCIL_TEST = 0x0B90,
	GL_STENCIL_CLEAR_VALUE = 0x0B91,
	GL_STENCIL_FUNC = 0x0B92,
	GL_STENCIL_VALUE_MASK = 0x0B93,
	GL_STENCIL_FAIL = 0x0B94,
	GL_STENCIL_PASS_DEPTH_FAIL = 0x0B95,
	GL_STENCIL_PASS_DEPTH_PASS = 0x0B96,
	GL_STENCIL_REF = 0x0B97,
	GL_STENCIL_WRITEMASK = 0x0B98,
	GL_MATRIX_MODE = 0x0BA0,
	GL_NORMALIZE = 0x0BA1,
	GL_VIEWPORT = 0x0BA2,
	GL_MODELVIEW_STACK_DEPTH = 0x0BA3,
	GL_PROJECTION_STACK_DEPTH = 0x0BA4,
	GL_TEXTURE_STACK_DEPTH = 0x0BA5,
	GL_MODELVIEW_MATRIX = 0x0BA6,
	GL_PROJECTION_MATRIX = 0x0BA7,
	GL_TEXTURE_MATRIX = 0x0BA8,
	GL_ATTRIB_STACK_DEPTH = 0x0BB0,
	GL_CLIENT_ATTRIB_STACK_DEPTH = 0x0BB1,
	GL_ALPHA_TEST = 0x0BC0,
	GL_ALPHA_TEST_FUNC = 0x0BC1,
	GL_ALPHA_TEST_REF = 0x0BC2,
	GL_DITHER = 0x0BD0,
	GL_BLEND_DST = 0x0BE0,
	GL_BLEND_SRC = 0x0BE1,
	GL_BLEND = 0x0BE2,
	GL_LOGIC_OP_MODE = 0x0BF0,
	GL_INDEX_LOGIC_OP = 0x0BF1,
	GL_COLOR_LOGIC_OP = 0x0BF2,
	GL_AUX_BUFFERS = 0x0C00,
	GL_DRAW_BUFFER = 0x0C01,
	GL_READ_BUFFER = 0x0C02,
	GL_SCISSOR_BOX = 0x0C10,
	GL_SCISSOR_TEST = 0x0C11,
	GL_INDEX_CLEAR_VALUE = 0x0C20,
	GL_INDEX_WRITEMASK = 0x0C21,
	GL_COLOR_CLEAR_VALUE = 0x0C22,
	GL_COLOR_WRITEMASK = 0x0C23,
	GL_INDEX_MODE = 0x0C30,
	GL_RGBA_MODE = 0x0C31,
	GL_DOUBLEBUFFER = 0x0C32,
	GL_STEREO = 0x0C33,
	GL_RENDER_MODE = 0x0C40,
	GL_PERSPECTIVE_CORRECTION_HINT = 0x0C50,
	GL_POINT_SMOOTH_HINT = 0x0C51,
	GL_LINE_SMOOTH_HINT = 0x0C52,
	GL_POLYGON_SMOOTH_HINT = 0x0C53,
	GL_FOG_HINT = 0x0C54,
	GL_TEXTURE_GEN_S = 0x0C60,
	GL_TEXTURE_GEN_T = 0x0C61,
	GL_TEXTURE_GEN_R = 0x0C62,
	GL_TEXTURE_GEN_Q = 0x0C63,
	GL_PIXEL_MAP_I_TO_I = 0x0C70,
	GL_PIXEL_MAP_S_TO_S = 0x0C71,
	GL_PIXEL_MAP_I_TO_R = 0x0C72,
	GL_PIXEL_MAP_I_TO_G = 0x0C73,
	GL_PIXEL_MAP_I_TO_B = 0x0C74,
	GL_PIXEL_MAP_I_TO_A = 0x0C75,
	GL_PIXEL_MAP_R_TO_R = 0x0C76,
	GL_PIXEL_MAP_G_TO_G = 0x0C77,
	GL_PIXEL_MAP_B_TO_B = 0x0C78,
	GL_PIXEL_MAP_A_TO_A = 0x0C79,
	GL_PIXEL_MAP_I_TO_I_SIZE = 0x0CB0,
	GL_PIXEL_MAP_S_TO_S_SIZE = 0x0CB1,
	GL_PIXEL_MAP_I_TO_R_SIZE = 0x0CB2,
	GL_PIXEL_MAP_I_TO_G_SIZE = 0x0CB3,
	GL_PIXEL_MAP_I_TO_B_SIZE = 0x0CB4,
	GL_PIXEL_MAP_I_TO_A_SIZE = 0x0CB5,
	GL_PIXEL_MAP_R_TO_R_SIZE = 0x0CB6,
	GL_PIXEL_MAP_G_TO_G_SIZE = 0x0CB7,
	GL_PIXEL_MAP_B_TO_B_SIZE = 0x0CB8,
	GL_PIXEL_MAP_A_TO_A_SIZE = 0x0CB9,
	GL_UNPACK_SWAP_BYTES = 0x0CF0,
	GL_UNPACK_LSB_FIRST = 0x0CF1,
	GL_UNPACK_ROW_LENGTH = 0x0CF2,
	GL_UNPACK_SKIP_ROWS = 0x0CF3,
	GL_UNPACK_SKIP_PIXELS = 0x0CF4,
	GL_UNPACK_ALIGNMENT = 0x0CF5,
	GL_PACK_SWAP_BYTES = 0x0D00,
	GL_PACK_LSB_FIRST = 0x0D01,
	GL_PACK_ROW_LENGTH = 0x0D02,
	GL_PACK_SKIP_ROWS = 0x0D03,
	GL_PACK_SKIP_PIXELS = 0x0D04,
	GL_PACK_ALIGNMENT = 0x0D05,
	GL_MAP_COLOR = 0x0D10,
	GL_MAP_STENCIL = 0x0D11,
	GL_INDEX_SHIFT = 0x0D12,
	GL_INDEX_OFFSET = 0x0D13,
	GL_RED_SCALE = 0x0D14,
	GL_RED_BIAS = 0x0D15,
	GL_ZOOM_X = 0x0D16,
	GL_ZOOM_Y = 0x0D17,
	GL_GREEN_SCALE = 0x0D18,
	GL_GREEN_BIAS = 0x0D19,
	GL_BLUE_SCALE = 0x0D1A,
	GL_BLUE_BIAS = 0x0D1B,
	GL_ALPHA_SCALE = 0x0D1C,
	GL_ALPHA_BIAS = 0x0D1D,
	GL_DEPTH_SCALE = 0x0D1E,
	GL_DEPTH_BIAS = 0x0D1F,
	GL_MAX_EVAL_ORDER = 0x0D30,
	GL_MAX_LIGHTS = 0x0D31,
	GL_MAX_CLIP_PLANES = 0x0D32,
	GL_MAX_TEXTURE_SIZE = 0x0D33,
	GL_MAX_PIXEL_MAP_TABLE = 0x0D34,
	GL_MAX_ATTRIB_STACK_DEPTH = 0x0D35,
	GL_MAX_MODELVIEW_STACK_DEPTH = 0x0D36,
	GL_MAX_NAME_STACK_DEPTH = 0x0D37,
	GL_MAX_PROJECTION_STACK_DEPTH = 0x0D38,
	GL_MAX_TEXTURE_STACK_DEPTH = 0x0D39,
	GL_MAX_VIEWPORT_DIMS = 0x0D3A,
	GL_MAX_CLIENT_ATTRIB_STACK_DEPTH = 0x0D3B,
	GL_SUBPIXEL_BITS = 0x0D50,
	GL_INDEX_BITS = 0x0D51,
	GL_RED_BITS = 0x0D52,
	GL_GREEN_BITS = 0x0D53,
	GL_BLUE_BITS = 0x0D54,
	GL_ALPHA_BITS = 0x0D55,
	GL_DEPTH_BITS = 0x0D56,
	GL_STENCIL_BITS = 0x0D57,
	GL_ACCUM_RED_BITS = 0x0D58,
	GL_ACCUM_GREEN_BITS = 0x0D59,
	GL_ACCUM_BLUE_BITS = 0x0D5A,
	GL_ACCUM_ALPHA_BITS = 0x0D5B,
	GL_NAME_STACK_DEPTH = 0x0D70,
	GL_AUTO_NORMAL = 0x0D80,
	GL_MAP1_COLOR_4 = 0x0D90,
	GL_MAP1_INDEX = 0x0D91,
	GL_MAP1_NORMAL = 0x0D92,
	GL_MAP1_TEXTURE_COORD_1 = 0x0D93,
	GL_MAP1_TEXTURE_COORD_2 = 0x0D94,
	GL_MAP1_TEXTURE_COORD_3 = 0x0D95,
	GL_MAP1_TEXTURE_COORD_4 = 0x0D96,
	GL_MAP1_VERTEX_3 = 0x0D97,
	GL_MAP1_VERTEX_4 = 0x0D98,
	GL_MAP2_COLOR_4 = 0x0DB0,
	GL_MAP2_INDEX = 0x0DB1,
	GL_MAP2_NORMAL = 0x0DB2,
	GL_MAP2_TEXTURE_COORD_1 = 0x0DB3,
	GL_MAP2_TEXTURE_COORD_2 = 0x0DB4,
	GL_MAP2_TEXTURE_COORD_3 = 0x0DB5,
	GL_MAP2_TEXTURE_COORD_4 = 0x0DB6,
	GL_MAP2_VERTEX_3 = 0x0DB7,
	GL_MAP2_VERTEX_4 = 0x0DB8,
	GL_MAP1_GRID_DOMAIN = 0x0DD0,
	GL_MAP1_GRID_SEGMENTS = 0x0DD1,
	GL_MAP2_GRID_DOMAIN = 0x0DD2,
	GL_MAP2_GRID_SEGMENTS = 0x0DD3,
	GL_TEXTURE_1D = 0x0DE0,
	GL_TEXTURE_2D = 0x0DE1,
	GL_FEEDBACK_BUFFER_POINTER = 0x0DF0,
	GL_FEEDBACK_BUFFER_SIZE = 0x0DF1,
	GL_FEEDBACK_BUFFER_TYPE = 0x0DF2,
	GL_SELECTION_BUFFER_POINTER = 0x0DF3,
	GL_SELECTION_BUFFER_SIZE = 0x0DF4,
	GL_TEXTURE_WIDTH = 0x1000,
	GL_TEXTURE_HEIGHT = 0x1001,
	GL_TEXTURE_INTERNAL_FORMAT = 0x1003,
	GL_TEXTURE_BORDER_COLOR = 0x1004,
	GL_TEXTURE_BORDER = 0x1005,
	GL_DONT_CARE = 0x1100,
	GL_FASTEST = 0x1101,
	GL_NICEST = 0x1102,
	GL_LIGHT0 = 0x4000,
	GL_LIGHT1 = 0x4001,
	GL_LIGHT2 = 0x4002,
	GL_LIGHT3 = 0x4003,
	GL_LIGHT4 = 0x4004,
	GL_LIGHT5 = 0x4005,
	GL_LIGHT6 = 0x4006,
	GL_LIGHT7 = 0x4007,
	GL_AMBIENT = 0x1200,
	GL_DIFFUSE = 0x1201,
	GL_SPECULAR = 0x1202,
	GL_POSITION = 0x1203,
	GL_SPOT_DIRECTION = 0x1204,
	GL_SPOT_EXPONENT = 0x1205,
	GL_SPOT_CUTOFF = 0x1206,
	GL_CONSTANT_ATTENUATION = 0x1207,
	GL_LINEAR_ATTENUATION = 0x1208,
	GL_QUADRATIC_ATTENUATION = 0x1209,
	GL_COMPILE = 0x1300,
	GL_COMPILE_AND_EXECUTE = 0x1301,
	GL_CLEAR = 0x1500,
	GL_AND = 0x1501,
	GL_AND_REVERSE = 0x1502,
	GL_COPY = 0x1503,
	GL_AND_INVERTED = 0x1504,
	GL_NOOP = 0x1505,
	GL_XOR = 0x1506,
	GL_OR = 0x1507,
	GL_NOR = 0x1508,
	GL_EQUIV = 0x1509,
	GL_INVERT = 0x150A,
	GL_OR_REVERSE = 0x150B,
	GL_COPY_INVERTED = 0x150C,
	GL_OR_INVERTED = 0x150D,
	GL_NAND = 0x150E,
	GL_SET = 0x150F,
	GL_EMISSION = 0x1600,
	GL_SHININESS = 0x1601,
	GL_AMBIENT_AND_DIFFUSE = 0x1602,
	GL_COLOR_INDEXES = 0x1603,
	GL_MODELVIEW = 0x1700,
	GL_PROJECTION = 0x1701,
	GL_TEXTURE = 0x1702,
	GL_COLOR = 0x1800,
	GL_DEPTH = 0x1801,
	GL_STENCIL = 0x1802,
	GL_COLOR_INDEX = 0x1900,
	GL_STENCIL_INDEX = 0x1901,
	GL_DEPTH_COMPONENT = 0x1902,
	GL_RED = 0x1903,
	GL_GREEN = 0x1904,
	GL_BLUE = 0x1905,
	GL_ALPHA = 0x1906,
	GL_RGB = 0x1907,
	GL_RGBA = 0x1908,
	GL_LUMINANCE = 0x1909,
	GL_LUMINANCE_ALPHA = 0x190A,
	GL_BITMAP = 0x1A00,
	GL_POINT = 0x1B00,
	GL_LINE = 0x1B01,
	GL_FILL = 0x1B02,
	GL_RENDER = 0x1C00,
	GL_FEEDBACK = 0x1C01,
	GL_SELECT = 0x1C02,
	GL_FLAT = 0x1D00,
	GL_SMOOTH = 0x1D01,
	GL_KEEP = 0x1E00,
	GL_REPLACE = 0x1E01,
	GL_INCR = 0x1E02,
	GL_DECR = 0x1E03,
	GL_VENDOR = 0x1F00,
	GL_RENDERER = 0x1F01,
	GL_VERSION = 0x1F02,
	GL_EXTENSIONS = 0x1F03,
	GL_S = 0x2000,
	GL_T = 0x2001,
	GL_R = 0x2002,
	GL_Q = 0x2003,
	GL_MODULATE = 0x2100,
	GL_DECAL = 0x2101,
	GL_TEXTURE_ENV_MODE = 0x2200,
	GL_TEXTURE_ENV_COLOR = 0x2201,
	GL_TEXTURE_ENV = 0x2300,
	GL_EYE_LINEAR = 0x2400,
	GL_OBJECT_LINEAR = 0x2401,
	GL_SPHERE_MAP = 0x2402,
	GL_TEXTURE_GEN_MODE = 0x2500,
	GL_OBJECT_PLANE = 0x2501,
	GL_EYE_PLANE = 0x2502,
	GL_NEAREST = 0x2600,
	GL_LINEAR = 0x2601,
	GL_NEAREST_MIPMAP_NEAREST = 0x2700,
	GL_LINEAR_MIPMAP_NEAREST = 0x2701,
	GL_NEAREST_MIPMAP_LINEAR = 0x2702,
	GL_LINEAR_MIPMAP_LINEAR = 0x2703,
	GL_TEXTURE_MAG_FILTER = 0x2800,
	GL_TEXTURE_MIN_FILTER = 0x2801,
	GL_TEXTURE_WRAP_S = 0x2802,
	GL_TEXTURE_WRAP_T = 0x2803,
	GL_CLAMP = 0x2900,
	GL_REPEAT = 0x2901,
	GL_CLIENT_PIXEL_STORE_BIT = 0x00000001,
	GL_CLIENT_VERTEX_ARRAY_BIT = 0x00000002,
	GL_CLIENT_ALL_ATTRIB_BITS = 0xffffffff,
	GL_POLYGON_OFFSET_FACTOR = 0x8038,
	GL_POLYGON_OFFSET_UNITS = 0x2A00,
	GL_POLYGON_OFFSET_POINT = 0x2A01,
	GL_POLYGON_OFFSET_LINE = 0x2A02,
	GL_POLYGON_OFFSET_FILL = 0x8037,
	GL_ALPHA4 = 0x803B,
	GL_ALPHA8 = 0x803C,
	GL_ALPHA12 = 0x803D,
	GL_ALPHA16 = 0x803E,
	GL_LUMINANCE4 = 0x803F,
	GL_LUMINANCE8 = 0x8040,
	GL_LUMINANCE12 = 0x8041,
	GL_LUMINANCE16 = 0x8042,
	GL_LUMINANCE4_ALPHA4 = 0x8043,
	GL_LUMINANCE6_ALPHA2 = 0x8044,
	GL_LUMINANCE8_ALPHA8 = 0x8045,
	GL_LUMINANCE12_ALPHA4 = 0x8046,
	GL_LUMINANCE12_ALPHA12 = 0x8047,
	GL_LUMINANCE16_ALPHA16 = 0x8048,
	GL_INTENSITY = 0x8049,
	GL_INTENSITY4 = 0x804A,
	GL_INTENSITY8 = 0x804B,
	GL_INTENSITY12 = 0x804C,
	GL_INTENSITY16 = 0x804D,
	GL_R3_G3_B2 = 0x2A10,
	GL_RGB4 = 0x804F,
	GL_RGB5 = 0x8050,
	GL_RGB8 = 0x8051,
	GL_RGB10 = 0x8052,
	GL_RGB12 = 0x8053,
	GL_RGB16 = 0x8054,
	GL_RGBA2 = 0x8055,
	GL_RGBA4 = 0x8056,
	GL_RGB5_A1 = 0x8057,
	GL_RGBA8 = 0x8058,
	GL_RGB10_A2 = 0x8059,
	GL_RGBA12 = 0x805A,
	GL_RGBA16 = 0x805B,
	GL_TEXTURE_RED_SIZE = 0x805C,
	GL_TEXTURE_GREEN_SIZE = 0x805D,
	GL_TEXTURE_BLUE_SIZE = 0x805E,
	GL_TEXTURE_ALPHA_SIZE = 0x805F,
	GL_TEXTURE_LUMINANCE_SIZE = 0x8060,
	GL_TEXTURE_INTENSITY_SIZE = 0x8061,
	GL_PROXY_TEXTURE_1D = 0x8063,
	GL_PROXY_TEXTURE_2D = 0x8064,
	GL_TEXTURE_PRIORITY = 0x8066,
	GL_TEXTURE_RESIDENT = 0x8067,
	GL_TEXTURE_BINDING_1D = 0x8068,
	GL_TEXTURE_BINDING_2D = 0x8069,
	GL_TEXTURE_BINDING_3D = 0x806A,
	GL_VERTEX_ARRAY = 0x8074,
	GL_NORMAL_ARRAY = 0x8075,
	GL_COLOR_ARRAY = 0x8076,
	GL_INDEX_ARRAY = 0x8077,
	GL_TEXTURE_COORD_ARRAY = 0x8078,
	GL_EDGE_FLAG_ARRAY = 0x8079,
	GL_VERTEX_ARRAY_SIZE = 0x807A,
	GL_VERTEX_ARRAY_TYPE = 0x807B,
	GL_VERTEX_ARRAY_STRIDE = 0x807C,
	GL_NORMAL_ARRAY_TYPE = 0x807E,
	GL_NORMAL_ARRAY_STRIDE = 0x807F,
	GL_COLOR_ARRAY_SIZE = 0x8081,
	GL_COLOR_ARRAY_TYPE = 0x8082,
	GL_COLOR_ARRAY_STRIDE = 0x8083,
	GL_INDEX_ARRAY_TYPE = 0x8085,
	GL_INDEX_ARRAY_STRIDE = 0x8086,
	GL_TEXTURE_COORD_ARRAY_SIZE = 0x8088,
	GL_TEXTURE_COORD_ARRAY_TYPE = 0x8089,
	GL_TEXTURE_COORD_ARRAY_STRIDE = 0x808A,
	GL_EDGE_FLAG_ARRAY_STRIDE = 0x808C,
	GL_VERTEX_ARRAY_POINTER = 0x808E,
	GL_NORMAL_ARRAY_POINTER = 0x808F,
	GL_COLOR_ARRAY_POINTER = 0x8090,
	GL_INDEX_ARRAY_POINTER = 0x8091,
	GL_TEXTURE_COORD_ARRAY_POINTER = 0x8092,
	GL_EDGE_FLAG_ARRAY_POINTER = 0x8093,
	GL_V2F = 0x2A20,
	GL_V3F = 0x2A21,
	GL_C4UB_V2F = 0x2A22,
	GL_C4UB_V3F = 0x2A23,
	GL_C3F_V3F = 0x2A24,
	GL_N3F_V3F = 0x2A25,
	GL_C4F_N3F_V3F = 0x2A26,
	GL_T2F_V3F = 0x2A27,
	GL_T4F_V4F = 0x2A28,
	GL_T2F_C4UB_V3F = 0x2A29,
	GL_T2F_C3F_V3F = 0x2A2A,
	GL_T2F_N3F_V3F = 0x2A2B,
	GL_T2F_C4F_N3F_V3F = 0x2A2C,
	GL_T4F_C4F_N3F_V4F = 0x2A2D,
	GL_BGR = 0x80E0,
	GL_BGRA = 0x80E1,
	GL_CONSTANT_COLOR = 0x8001,
	GL_ONE_MINUS_CONSTANT_COLOR = 0x8002,
	GL_CONSTANT_ALPHA = 0x8003,
	GL_ONE_MINUS_CONSTANT_ALPHA = 0x8004,
	GL_BLEND_COLOR = 0x8005,
	GL_FUNC_ADD = 0x8006,
	GL_MIN = 0x8007,
	GL_MAX = 0x8008,
	GL_BLEND_EQUATION = 0x8009,
	GL_BLEND_EQUATION_RGB = 0x8009,
	GL_BLEND_EQUATION_ALPHA = 0x883D,
	GL_FUNC_SUBTRACT = 0x800A,
	GL_FUNC_REVERSE_SUBTRACT = 0x800B,
	GL_COLOR_MATRIX = 0x80B1,
	GL_COLOR_MATRIX_STACK_DEPTH = 0x80B2,
	GL_MAX_COLOR_MATRIX_STACK_DEPTH = 0x80B3,
	GL_POST_COLOR_MATRIX_RED_SCALE = 0x80B4,
	GL_POST_COLOR_MATRIX_GREEN_SCALE = 0x80B5,
	GL_POST_COLOR_MATRIX_BLUE_SCALE = 0x80B6,
	GL_POST_COLOR_MATRIX_ALPHA_SCALE = 0x80B7,
	GL_POST_COLOR_MATRIX_RED_BIAS = 0x80B8,
	GL_POST_COLOR_MATRIX_GREEN_BIAS = 0x80B9,
	GL_POST_COLOR_MATRIX_BLUE_BIAS = 0x80BA,
	GL_POST_COLOR_MATRIX_ALPHA_BIAS = 0x80BB,
	GL_COLOR_TABLE = 0x80D0,
	GL_POST_CONVOLUTION_COLOR_TABLE = 0x80D1,
	GL_POST_COLOR_MATRIX_COLOR_TABLE = 0x80D2,
	GL_PROXY_COLOR_TABLE = 0x80D3,
	GL_PROXY_POST_CONVOLUTION_COLOR_TABLE = 0x80D4,
	GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE = 0x80D5,
	GL_COLOR_TABLE_SCALE = 0x80D6,
	GL_COLOR_TABLE_BIAS = 0x80D7,
	GL_COLOR_TABLE_FORMAT = 0x80D8,
	GL_COLOR_TABLE_WIDTH = 0x80D9,
	GL_COLOR_TABLE_RED_SIZE = 0x80DA,
	GL_COLOR_TABLE_GREEN_SIZE = 0x80DB,
	GL_COLOR_TABLE_BLUE_SIZE = 0x80DC,
	GL_COLOR_TABLE_ALPHA_SIZE = 0x80DD,
	GL_COLOR_TABLE_LUMINANCE_SIZE = 0x80DE,
	GL_COLOR_TABLE_INTENSITY_SIZE = 0x80DF,
	GL_CONVOLUTION_1D = 0x8010,
	GL_CONVOLUTION_2D = 0x8011,
	GL_SEPARABLE_2D = 0x8012,
	GL_CONVOLUTION_BORDER_MODE = 0x8013,
	GL_CONVOLUTION_FILTER_SCALE = 0x8014,
	GL_CONVOLUTION_FILTER_BIAS = 0x8015,
	GL_REDUCE = 0x8016,
	GL_CONVOLUTION_FORMAT = 0x8017,
	GL_CONVOLUTION_WIDTH = 0x8018,
	GL_CONVOLUTION_HEIGHT = 0x8019,
	GL_MAX_CONVOLUTION_WIDTH = 0x801A,
	GL_MAX_CONVOLUTION_HEIGHT = 0x801B,
	GL_POST_CONVOLUTION_RED_SCALE = 0x801C,
	GL_POST_CONVOLUTION_GREEN_SCALE = 0x801D,
	GL_POST_CONVOLUTION_BLUE_SCALE = 0x801E,
	GL_POST_CONVOLUTION_ALPHA_SCALE = 0x801F,
	GL_POST_CONVOLUTION_RED_BIAS = 0x8020,
	GL_POST_CONVOLUTION_GREEN_BIAS = 0x8021,
	GL_POST_CONVOLUTION_BLUE_BIAS = 0x8022,
	GL_POST_CONVOLUTION_ALPHA_BIAS = 0x8023,
	GL_CONSTANT_BORDER = 0x8151,
	GL_REPLICATE_BORDER = 0x8153,
	GL_CONVOLUTION_BORDER_COLOR = 0x8154,
	GL_MAX_ELEMENTS_VERTICES = 0x80E8,
	GL_MAX_ELEMENTS_INDICES = 0x80E9,
	GL_HISTOGRAM = 0x8024,
	GL_PROXY_HISTOGRAM = 0x8025,
	GL_HISTOGRAM_WIDTH = 0x8026,
	GL_HISTOGRAM_FORMAT = 0x8027,
	GL_HISTOGRAM_RED_SIZE = 0x8028,
	GL_HISTOGRAM_GREEN_SIZE = 0x8029,
	GL_HISTOGRAM_BLUE_SIZE = 0x802A,
	GL_HISTOGRAM_ALPHA_SIZE = 0x802B,
	GL_HISTOGRAM_LUMINANCE_SIZE = 0x802C,
	GL_HISTOGRAM_SINK = 0x802D,
	GL_MINMAX = 0x802E,
	GL_MINMAX_FORMAT = 0x802F,
	GL_MINMAX_SINK = 0x8030,
	GL_TABLE_TOO_LARGE = 0x8031,
	GL_UNSIGNED_BYTE_3_3_2 = 0x8032,
	GL_UNSIGNED_SHORT_4_4_4_4 = 0x8033,
	GL_UNSIGNED_SHORT_5_5_5_1 = 0x8034,
	GL_UNSIGNED_INT_8_8_8_8 = 0x8035,
	GL_UNSIGNED_INT_10_10_10_2 = 0x8036,
	GL_UNSIGNED_BYTE_2_3_3_REV = 0x8362,
	GL_UNSIGNED_SHORT_5_6_5 = 0x8363,
	GL_UNSIGNED_SHORT_5_6_5_REV = 0x8364,
	GL_UNSIGNED_SHORT_4_4_4_4_REV = 0x8365,
	GL_UNSIGNED_SHORT_1_5_5_5_REV = 0x8366,
	GL_UNSIGNED_INT_8_8_8_8_REV = 0x8367,
	GL_UNSIGNED_INT_2_10_10_10_REV = 0x8368,
	GL_RESCALE_NORMAL = 0x803A,
	GL_LIGHT_MODEL_COLOR_CONTROL = 0x81F8,
	GL_SINGLE_COLOR = 0x81F9,
	GL_SEPARATE_SPECULAR_COLOR = 0x81FA,
	GL_PACK_SKIP_IMAGES = 0x806B,
	GL_PACK_IMAGE_HEIGHT = 0x806C,
	GL_UNPACK_SKIP_IMAGES = 0x806D,
	GL_UNPACK_IMAGE_HEIGHT = 0x806E,
	GL_TEXTURE_3D = 0x806F,
	GL_PROXY_TEXTURE_3D = 0x8070,
	GL_TEXTURE_DEPTH = 0x8071,
	GL_TEXTURE_WRAP_R = 0x8072,
	GL_MAX_3D_TEXTURE_SIZE = 0x8073,
	GL_CLAMP_TO_EDGE = 0x812F,
	GL_CLAMP_TO_BORDER = 0x812D,
	GL_TEXTURE_MIN_LOD = 0x813A,
	GL_TEXTURE_MAX_LOD = 0x813B,
	GL_TEXTURE_BASE_LEVEL = 0x813C,
	GL_TEXTURE_MAX_LEVEL = 0x813D,
	GL_SMOOTH_POINT_SIZE_RANGE = 0x0B12,
	GL_SMOOTH_POINT_SIZE_GRANULARITY = 0x0B13,
	GL_SMOOTH_LINE_WIDTH_RANGE = 0x0B22,
	GL_SMOOTH_LINE_WIDTH_GRANULARITY = 0x0B23,
	GL_ALIASED_POINT_SIZE_RANGE = 0x846D,
	GL_ALIASED_LINE_WIDTH_RANGE = 0x846E,
	GL_TEXTURE0 = 0x84C0,
	GL_TEXTURE1 = 0x84C1,
	GL_TEXTURE2 = 0x84C2,
	GL_TEXTURE3 = 0x84C3,
	GL_TEXTURE4 = 0x84C4,
	GL_TEXTURE5 = 0x84C5,
	GL_TEXTURE6 = 0x84C6,
	GL_TEXTURE7 = 0x84C7,
	GL_TEXTURE8 = 0x84C8,
	GL_TEXTURE9 = 0x84C9,
	GL_TEXTURE10 = 0x84CA,
	GL_TEXTURE11 = 0x84CB,
	GL_TEXTURE12 = 0x84CC,
	GL_TEXTURE13 = 0x84CD,
	GL_TEXTURE14 = 0x84CE,
	GL_TEXTURE15 = 0x84CF,
	GL_TEXTURE16 = 0x84D0,
	GL_TEXTURE17 = 0x84D1,
	GL_TEXTURE18 = 0x84D2,
	GL_TEXTURE19 = 0x84D3,
	GL_TEXTURE20 = 0x84D4,
	GL_TEXTURE21 = 0x84D5,
	GL_TEXTURE22 = 0x84D6,
	GL_TEXTURE23 = 0x84D7,
	GL_TEXTURE24 = 0x84D8,
	GL_TEXTURE25 = 0x84D9,
	GL_TEXTURE26 = 0x84DA,
	GL_TEXTURE27 = 0x84DB,
	GL_TEXTURE28 = 0x84DC,
	GL_TEXTURE29 = 0x84DD,
	GL_TEXTURE30 = 0x84DE,
	GL_TEXTURE31 = 0x84DF,
	GL_ACTIVE_TEXTURE = 0x84E0,
	GL_CLIENT_ACTIVE_TEXTURE = 0x84E1,
	GL_MAX_TEXTURE_UNITS = 0x84E2,
	GL_COMBINE = 0x8570,
	GL_COMBINE_RGB = 0x8571,
	GL_COMBINE_ALPHA = 0x8572,
	GL_RGB_SCALE = 0x8573,
	GL_ADD_SIGNED = 0x8574,
	GL_INTERPOLATE = 0x8575,
	GL_CONSTANT = 0x8576,
	GL_PRIMARY_COLOR = 0x8577,
	GL_PREVIOUS = 0x8578,
	GL_SUBTRACT = 0x84E7,
	GL_SRC0_RGB = 0x8580,
	GL_SRC1_RGB = 0x8581,
	GL_SRC2_RGB = 0x8582,
	GL_SRC3_RGB = 0x8583,
	GL_SRC4_RGB = 0x8584,
	GL_SRC5_RGB = 0x8585,
	GL_SRC6_RGB = 0x8586,
	GL_SRC7_RGB = 0x8587,
	GL_SRC0_ALPHA = 0x8588,
	GL_SRC1_ALPHA = 0x8589,
	GL_SRC2_ALPHA = 0x858A,
	GL_SRC3_ALPHA = 0x858B,
	GL_SRC4_ALPHA = 0x858C,
	GL_SRC5_ALPHA = 0x858D,
	GL_SRC6_ALPHA = 0x858E,
	GL_SRC7_ALPHA = 0x858F,
	GL_SOURCE0_RGB = 0x8580,
	GL_SOURCE1_RGB = 0x8581,
	GL_SOURCE2_RGB = 0x8582,
	GL_SOURCE3_RGB = 0x8583,
	GL_SOURCE4_RGB = 0x8584,
	GL_SOURCE5_RGB = 0x8585,
	GL_SOURCE6_RGB = 0x8586,
	GL_SOURCE7_RGB = 0x8587,
	GL_SOURCE0_ALPHA = 0x8588,
	GL_SOURCE1_ALPHA = 0x8589,
	GL_SOURCE2_ALPHA = 0x858A,
	GL_SOURCE3_ALPHA = 0x858B,
	GL_SOURCE4_ALPHA = 0x858C,
	GL_SOURCE5_ALPHA = 0x858D,
	GL_SOURCE6_ALPHA = 0x858E,
	GL_SOURCE7_ALPHA = 0x858F,
	GL_OPERAND0_RGB = 0x8590,
	GL_OPERAND1_RGB = 0x8591,
	GL_OPERAND2_RGB = 0x8592,
	GL_OPERAND3_RGB = 0x8593,
	GL_OPERAND4_RGB = 0x8594,
	GL_OPERAND5_RGB = 0x8595,
	GL_OPERAND6_RGB = 0x8596,
	GL_OPERAND7_RGB = 0x8597,
	GL_OPERAND0_ALPHA = 0x8598,
	GL_OPERAND1_ALPHA = 0x8599,
	GL_OPERAND2_ALPHA = 0x859A,
	GL_OPERAND3_ALPHA = 0x859B,
	GL_OPERAND4_ALPHA = 0x859C,
	GL_OPERAND5_ALPHA = 0x859D,
	GL_OPERAND6_ALPHA = 0x859E,
	GL_OPERAND7_ALPHA = 0x859F,
	GL_DOT3_RGB = 0x86AE,
	GL_DOT3_RGBA = 0x86AF,
	GL_TRANSPOSE_MODELVIEW_MATRIX = 0x84E3,
	GL_TRANSPOSE_PROJECTION_MATRIX = 0x84E4,
	GL_TRANSPOSE_TEXTURE_MATRIX = 0x84E5,
	GL_TRANSPOSE_COLOR_MATRIX = 0x84E6,
	GL_NORMAL_MAP = 0x8511,
	GL_REFLECTION_MAP = 0x8512,
	GL_TEXTURE_CUBE_MAP = 0x8513,
	GL_TEXTURE_BINDING_CUBE_MAP = 0x8514,
	GL_TEXTURE_CUBE_MAP_POSITIVE_X = 0x8515,
	GL_TEXTURE_CUBE_MAP_NEGATIVE_X = 0x8516,
	GL_TEXTURE_CUBE_MAP_POSITIVE_Y = 0x8517,
	GL_TEXTURE_CUBE_MAP_NEGATIVE_Y = 0x8518,
	GL_TEXTURE_CUBE_MAP_POSITIVE_Z = 0x8519,
	GL_TEXTURE_CUBE_MAP_NEGATIVE_Z = 0x851A,
	GL_PROXY_TEXTURE_CUBE_MAP = 0x851B,
	GL_MAX_CUBE_MAP_TEXTURE_SIZE = 0x851C,
	GL_COMPRESSED_ALPHA = 0x84E9,
	GL_COMPRESSED_LUMINANCE = 0x84EA,
	GL_COMPRESSED_LUMINANCE_ALPHA = 0x84EB,
	GL_COMPRESSED_INTENSITY = 0x84EC,
	GL_COMPRESSED_RGB = 0x84ED,
	GL_COMPRESSED_RGBA = 0x84EE,
	GL_TEXTURE_COMPRESSION_HINT = 0x84EF,
	GL_TEXTURE_COMPRESSED_IMAGE_SIZE = 0x86A0,
	GL_TEXTURE_COMPRESSED = 0x86A1,
	GL_NUM_COMPRESSED_TEXTURE_FORMATS = 0x86A2,
	GL_COMPRESSED_TEXTURE_FORMATS = 0x86A3,
	GL_MULTISAMPLE = 0x809D,
	GL_SAMPLE_ALPHA_TO_COVERAGE = 0x809E,
	GL_SAMPLE_ALPHA_TO_ONE = 0x809F,
	GL_SAMPLE_COVERAGE = 0x80A0,
	GL_SAMPLE_BUFFERS = 0x80A8,
	GL_SAMPLES = 0x80A9,
	GL_SAMPLE_COVERAGE_VALUE = 0x80AA,
	GL_SAMPLE_COVERAGE_INVERT = 0x80AB,
	GL_MULTISAMPLE_BIT = 0x20000000,
	GL_DEPTH_COMPONENT16 = 0x81A5,
	GL_DEPTH_COMPONENT24 = 0x81A6,
	GL_DEPTH_COMPONENT32 = 0x81A7,
	GL_TEXTURE_DEPTH_SIZE = 0x884A,
	GL_DEPTH_TEXTURE_MODE = 0x884B,
	GL_TEXTURE_COMPARE_MODE = 0x884C,
	GL_TEXTURE_COMPARE_FUNC = 0x884D,
	GL_COMPARE_R_TO_TEXTURE = 0x884E,
	GL_QUERY_COUNTER_BITS = 0x8864,
	GL_CURRENT_QUERY = 0x8865,
	GL_QUERY_RESULT = 0x8866,
	GL_QUERY_RESULT_AVAILABLE = 0x8867,
	GL_SAMPLES_PASSED = 0x8914,
	GL_FOG_COORD_SRC = 0x8450,
	GL_FOG_COORD = 0x8451,
	GL_FRAGMENT_DEPTH = 0x8452,
	GL_CURRENT_FOG_COORD = 0x8453,
	GL_FOG_COORD_ARRAY_TYPE = 0x8454,
	GL_FOG_COORD_ARRAY_STRIDE = 0x8455,
	GL_FOG_COORD_ARRAY_POINTER = 0x8456,
	GL_FOG_COORD_ARRAY = 0x8457,
	GL_FOG_COORDINATE_SOURCE = 0x8450,
	GL_FOG_COORDINATE = 0x8451,
	GL_CURRENT_FOG_COORDINATE = 0x8453,
	GL_FOG_COORDINATE_ARRAY_TYPE = 0x8454,
	GL_FOG_COORDINATE_ARRAY_STRIDE = 0x8455,
	GL_FOG_COORDINATE_ARRAY_POINTER = 0x8456,
	GL_FOG_COORDINATE_ARRAY = 0x8457,
	GL_COLOR_SUM = 0x8458,
	GL_CURRENT_SECONDARY_COLOR = 0x8459,
	GL_SECONDARY_COLOR_ARRAY_SIZE = 0x845A,
	GL_SECONDARY_COLOR_ARRAY_TYPE = 0x845B,
	GL_SECONDARY_COLOR_ARRAY_STRIDE = 0x845C,
	GL_SECONDARY_COLOR_ARRAY_POINTER = 0x845D,
	GL_SECONDARY_COLOR_ARRAY = 0x845E,
	GL_POINT_SIZE_MIN = 0x8126,
	GL_POINT_SIZE_MAX = 0x8127,
	GL_POINT_FADE_THRESHOLD_SIZE = 0x8128,
	GL_POINT_DISTANCE_ATTENUATION = 0x8129,
	GL_BLEND_DST_RGB = 0x80C8,
	GL_BLEND_SRC_RGB = 0x80C9,
	GL_BLEND_DST_ALPHA = 0x80CA,
	GL_BLEND_SRC_ALPHA = 0x80CB,
	GL_GENERATE_MIPMAP = 0x8191,
	GL_GENERATE_MIPMAP_HINT = 0x8192,
	GL_INCR_WRAP = 0x8507,
	GL_DECR_WRAP = 0x8508,
	GL_MIRRORED_REPEAT = 0x8370,
	GL_MAX_TEXTURE_LOD_BIAS = 0x84FD,
	GL_TEXTURE_FILTER_CONTROL = 0x8500,
	GL_TEXTURE_LOD_BIAS = 0x8501,
	GL_ARRAY_BUFFER = 0x8892,
	GL_ELEMENT_ARRAY_BUFFER = 0x8893,
	GL_ARRAY_BUFFER_BINDING = 0x8894,
	GL_ELEMENT_ARRAY_BUFFER_BINDING = 0x8895,
	GL_VERTEX_ARRAY_BUFFER_BINDING = 0x8896,
	GL_NORMAL_ARRAY_BUFFER_BINDING = 0x8897,
	GL_COLOR_ARRAY_BUFFER_BINDING = 0x8898,
	GL_INDEX_ARRAY_BUFFER_BINDING = 0x8899,
	GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING = 0x889A,
	GL_EDGE_FLAG_ARRAY_BUFFER_BINDING = 0x889B,
	GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING = 0x889C,
	GL_FOG_COORD_ARRAY_BUFFER_BINDING = 0x889D,
	GL_WEIGHT_ARRAY_BUFFER_BINDING = 0x889E,
	GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 0x889F,
	GL_STREAM_DRAW = 0x88E0,
	GL_STREAM_READ = 0x88E1,
	GL_STREAM_COPY = 0x88E2,
	GL_STATIC_DRAW = 0x88E4,
	GL_STATIC_READ = 0x88E5,
	GL_STATIC_COPY = 0x88E6,
	GL_DYNAMIC_DRAW = 0x88E8,
	GL_DYNAMIC_READ = 0x88E9,
	GL_DYNAMIC_COPY = 0x88EA,
	GL_READ_ONLY = 0x88B8,
	GL_WRITE_ONLY = 0x88B9,
	GL_READ_WRITE = 0x88BA,
	GL_BUFFER_SIZE = 0x8764,
	GL_BUFFER_USAGE = 0x8765,
	GL_BUFFER_ACCESS = 0x88BB,
	GL_BUFFER_MAPPED = 0x88BC,
	GL_BUFFER_MAP_POINTER = 0x88BD,
	GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING = 0x889D,
	GL_CURRENT_PROGRAM = 0x8B8D,
	GL_SHADER_TYPE = 0x8B4F,
	GL_DELETE_STATUS = 0x8B80,
	GL_COMPILE_STATUS = 0x8B81,
	GL_LINK_STATUS = 0x8B82,
	GL_VALIDATE_STATUS = 0x8B83,
	GL_INFO_LOG_LENGTH = 0x8B84,
	GL_ATTACHED_SHADERS = 0x8B85,
	GL_ACTIVE_UNIFORMS = 0x8B86,
	GL_ACTIVE_UNIFORM_MAX_LENGTH = 0x8B87,
	GL_SHADER_SOURCE_LENGTH = 0x8B88,
	GL_FLOAT_VEC2 = 0x8B50,
	GL_FLOAT_VEC3 = 0x8B51,
	GL_FLOAT_VEC4 = 0x8B52,
	GL_INT_VEC2 = 0x8B53,
	GL_INT_VEC3 = 0x8B54,
	GL_INT_VEC4 = 0x8B55,
	GL_BOOL = 0x8B56,
	GL_BOOL_VEC2 = 0x8B57,
	GL_BOOL_VEC3 = 0x8B58,
	GL_BOOL_VEC4 = 0x8B59,
	GL_FLOAT_MAT2 = 0x8B5A,
	GL_FLOAT_MAT3 = 0x8B5B,
	GL_FLOAT_MAT4 = 0x8B5C,
	GL_SAMPLER_1D = 0x8B5D,
	GL_SAMPLER_2D = 0x8B5E,
	GL_SAMPLER_3D = 0x8B5F,
	GL_SAMPLER_CUBE = 0x8B60,
	GL_SAMPLER_1D_SHADOW = 0x8B61,
	GL_SAMPLER_2D_SHADOW = 0x8B62,
	GL_SHADING_LANGUAGE_VERSION = 0x8B8C,
	GL_VERTEX_SHADER = 0x8B31,
	GL_MAX_VERTEX_UNIFORM_COMPONENTS = 0x8B4A,
	GL_MAX_VARYING_FLOATS = 0x8B4B,
	GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS = 0x8B4C,
	GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS = 0x8B4D,
	GL_ACTIVE_ATTRIBUTES = 0x8B89,
	GL_ACTIVE_ATTRIBUTE_MAX_LENGTH = 0x8B8A,
	GL_FRAGMENT_SHADER = 0x8B30,
	GL_MAX_FRAGMENT_UNIFORM_COMPONENTS = 0x8B49,
	GL_FRAGMENT_SHADER_DERIVATIVE_HINT = 0x8B8B,
	GL_MAX_VERTEX_ATTRIBS = 0x8869,
	GL_VERTEX_ATTRIB_ARRAY_ENABLED = 0x8622,
	GL_VERTEX_ATTRIB_ARRAY_SIZE = 0x8623,
	GL_VERTEX_ATTRIB_ARRAY_STRIDE = 0x8624,
	GL_VERTEX_ATTRIB_ARRAY_TYPE = 0x8625,
	GL_VERTEX_ATTRIB_ARRAY_NORMALIZED = 0x886A,
	GL_CURRENT_VERTEX_ATTRIB = 0x8626,
	GL_VERTEX_ATTRIB_ARRAY_POINTER = 0x8645,
	GL_VERTEX_PROGRAM_POINT_SIZE = 0x8642,
	GL_VERTEX_PROGRAM_TWO_SIDE = 0x8643,
	GL_MAX_TEXTURE_COORDS = 0x8871,
	GL_MAX_TEXTURE_IMAGE_UNITS = 0x8872,
	GL_MAX_DRAW_BUFFERS = 0x8824,
	GL_DRAW_BUFFER0 = 0x8825,
	GL_DRAW_BUFFER1 = 0x8826,
	GL_DRAW_BUFFER2 = 0x8827,
	GL_DRAW_BUFFER3 = 0x8828,
	GL_DRAW_BUFFER4 = 0x8829,
	GL_DRAW_BUFFER5 = 0x882A,
	GL_DRAW_BUFFER6 = 0x882B,
	GL_DRAW_BUFFER7 = 0x882C,
	GL_DRAW_BUFFER8 = 0x882D,
	GL_DRAW_BUFFER9 = 0x882E,
	GL_DRAW_BUFFER10 = 0x882F,
	GL_DRAW_BUFFER11 = 0x8830,
	GL_DRAW_BUFFER12 = 0x8831,
	GL_DRAW_BUFFER13 = 0x8832,
	GL_DRAW_BUFFER14 = 0x8833,
	GL_DRAW_BUFFER15 = 0x8834,
	GL_POINT_SPRITE = 0x8861,
	GL_COORD_REPLACE = 0x8862,
	GL_POINT_SPRITE_COORD_ORIGIN = 0x8CA0,
	GL_LOWER_LEFT = 0x8CA1,
	GL_UPPER_LEFT = 0x8CA2,
	GL_STENCIL_BACK_FUNC = 0x8800,
	GL_STENCIL_BACK_VALUE_MASK = 0x8CA4,
	GL_STENCIL_BACK_REF = 0x8CA3,
	GL_STENCIL_BACK_FAIL = 0x8801,
	GL_STENCIL_BACK_PASS_DEPTH_FAIL = 0x8802,
	GL_STENCIL_BACK_PASS_DEPTH_PASS = 0x8803,
	GL_STENCIL_BACK_WRITEMASK = 0x8CA5,
	GL_CURRENT_RASTER_SECONDARY_COLOR = 0x845F,
	GL_PIXEL_PACK_BUFFER = 0x88EB,
	GL_PIXEL_UNPACK_BUFFER = 0x88EC,
	GL_PIXEL_PACK_BUFFER_BINDING = 0x88ED,
	GL_PIXEL_UNPACK_BUFFER_BINDING = 0x88EF,
	GL_FLOAT_MAT2x3 = 0x8B65,
	GL_FLOAT_MAT2x4 = 0x8B66,
	GL_FLOAT_MAT3x2 = 0x8B67,
	GL_FLOAT_MAT3x4 = 0x8B68,
	GL_FLOAT_MAT4x2 = 0x8B69,
	GL_FLOAT_MAT4x3 = 0x8B6A,
	GL_SRGB = 0x8C40,
	GL_SRGB8 = 0x8C41,
	GL_SRGB_ALPHA = 0x8C42,
	GL_SRGB8_ALPHA8 = 0x8C43,
	GL_SLUMINANCE_ALPHA = 0x8C44,
	GL_SLUMINANCE8_ALPHA8 = 0x8C45,
	GL_SLUMINANCE = 0x8C46,
	GL_SLUMINANCE8 = 0x8C47,
	GL_COMPRESSED_SRGB = 0x8C48,
	GL_COMPRESSED_SRGB_ALPHA = 0x8C49,
	GL_COMPRESSED_SLUMINANCE = 0x8C4A,
	GL_COMPRESSED_SLUMINANCE_ALPHA = 0x8C4B,
	GL_WIN_swap_hint = 0x1,
	WGL_ATI_render_texture_rectangle = 0x1,
	WGL_EXT_framebuffer_sRGB = 0x1,
	WGL_EXT_pixel_format_packed_float = 0x1,
	WGL_NV_gpu_affinity = 0x1,
	WGL_ERROR_MISSING_AFFINITY_MASK_NV = 0x20D1,
>>>>>>> 4e0f59d9d9c2cdf9336ba0cbc8b5128a844e3570
	WGL_NV_vertex_array_range = 0x1,
};


<<<<<<< HEAD
	typedef char GLchar;
	typedef char GLcharARB;
	typedef double GLclampd;
	typedef double GLdouble;
	typedef float GLclampf;
	typedef float GLfloat;
	typedef int GLint;
	typedef int GLsizei;
	typedef long GLsizeiptr;
	typedef long GLsizeiptrARB;
	typedef short GLshort;
	typedef signed char GLbyte;
	typedef unsigned char GLboolean;
	typedef unsigned char GLubyte;
	typedef unsigned int GLbitfield;
	typedef unsigned int GLenum;
	typedef unsigned int GLuint;
	typedef unsigned short GLhalf;
	typedef unsigned short GLhalfARB;
	typedef unsigned short GLushort;
	typedef void *GLhandleARB;
	typedef void GLvoid;



//####glTextureRangeAPPLE
	void glTextureRangeAPPLE (GLenum target, GLsizei length, GLvoid *pointer);
//####glGetTexParameterPointervAPPLE
	void glGetTexParameterPointervAPPLE (GLenum target, GLenum pname, GLvoid **params);
//####glColorTable
	void glColorTable (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *table);
//####glColorSubTable
	void glColorSubTable (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const GLvoid *data);
//####glColorTableParameteriv
	void glColorTableParameteriv (GLenum target, GLenum pname, const GLint *params);
//####glColorTableParameterfv
	void glColorTableParameterfv (GLenum target, GLenum pname, const GLfloat *params);
//####glCopyColorSubTable
	void glCopyColorSubTable (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);
//####glCopyColorTable
	void glCopyColorTable (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
//####glGetColorTable
	void glGetColorTable (GLenum target, GLenum format, GLenum type, GLvoid *table);
//####glGetColorTableParameterfv
	void glGetColorTableParameterfv (GLenum target, GLenum pname, GLfloat *params);
//####glGetColorTableParameteriv
	void glGetColorTableParameteriv (GLenum target, GLenum pname, GLint *params);
//####glHistogram
	void glHistogram (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);
//####glResetHistogram
	void glResetHistogram (GLenum target);
//####glGetHistogram
	void glGetHistogram (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);
//####glGetHistogramParameterfv
	void glGetHistogramParameterfv (GLenum target, GLenum pname, GLfloat *params);
//####glGetHistogramParameteriv
	void glGetHistogramParameteriv (GLenum target, GLenum pname, GLint *params);
//####glMinmax
	void glMinmax (GLenum target, GLenum internalformat, GLboolean sink);
//####glResetMinmax
	void glResetMinmax (GLenum target);
//####glGetMinmaxParameterfv
	void glGetMinmaxParameterfv (GLenum target, GLenum pname, GLfloat *params);
//####glGetMinmaxParameteriv
	void glGetMinmaxParameteriv (GLenum target, GLenum pname, GLint *params);
//####glConvolutionFilter1D
	void glConvolutionFilter1D (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *image);
//####glConvolutionFilter2D
	void glConvolutionFilter2D (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *image);
//####glConvolutionParameterf
	void glConvolutionParameterf (GLenum target, GLenum pname, GLfloat params);
//####glConvolutionParameterfv
	void glConvolutionParameterfv (GLenum target, GLenum pname, const GLfloat *params);
//####glConvolutionParameteri
	void glConvolutionParameteri (GLenum target, GLenum pname, GLint params);
//####glConvolutionParameteriv
	void glConvolutionParameteriv (GLenum target, GLenum pname, const GLint *params);
//####glCopyConvolutionFilter1D
	void glCopyConvolutionFilter1D (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
//####glCopyConvolutionFilter2D
	void glCopyConvolutionFilter2D (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);
//####glGetConvolutionFilter
	void glGetConvolutionFilter (GLenum target, GLenum format, GLenum type, GLvoid *image);
//####glGetConvolutionParameterfv
	void glGetConvolutionParameterfv (GLenum target, GLenum pname, GLfloat *params);
//####glGetConvolutionParameteriv
	void glGetConvolutionParameteriv (GLenum target, GLenum pname, GLint *params);
//####glSeparableFilter2D
	void glSeparableFilter2D (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *row, const GLvoid *column);
//####glGetSeparableFilter
	void glGetSeparableFilter (GLenum target, GLenum format, GLenum type, GLvoid *row, GLvoid *column, GLvoid *span);
//####glGetMinmax
	void glGetMinmax (GLenum target, GLboolean reset, GLenum format, GLenum types, GLvoid *values);
//####glCurrentPaletteMatrixARB
	void glCurrentPaletteMatrixARB (GLint index);
//####glMatrixIndexPointerARB
	void glMatrixIndexPointerARB (GLint size, GLenum type, GLsizei stride, GLvoid *pointer);
//####glMatrixIndexubvARB
	void glMatrixIndexubvARB (GLint size, GLubyte *indices);
//####glMatrixIndexusvARB
	void glMatrixIndexusvARB (GLint size, GLushort *indices);
//####glMatrixIndexuivARB
	void glMatrixIndexuivARB (GLint size, GLuint *indices);
//####glActiveTextureARB
	void glActiveTextureARB (GLenum texture);
//####glClientActiveTextureARB
	void glClientActiveTextureARB (GLenum texture);
//####glMultiTexCoord1dARB
	void glMultiTexCoord1dARB (GLenum target, GLdouble s);
//####glMultiTexCoord1dvARB
	void glMultiTexCoord1dvARB (GLenum target, const GLdouble *v);
//####glMultiTexCoord1fARB
	void glMultiTexCoord1fARB (GLenum target, GLfloat s);
//####glMultiTexCoord1fvARB
	void glMultiTexCoord1fvARB (GLenum target, const GLfloat *v);
//####glMultiTexCoord1iARB
	void glMultiTexCoord1iARB (GLenum target, GLint s);
//####glMultiTexCoord1ivARB
	void glMultiTexCoord1ivARB (GLenum target, const GLint *v);
//####glMultiTexCoord1sARB
	void glMultiTexCoord1sARB (GLenum target, GLshort s);
//####glMultiTexCoord1svARB
	void glMultiTexCoord1svARB (GLenum target, const GLshort *v);
//####glMultiTexCoord2dARB
	void glMultiTexCoord2dARB (GLenum target, GLdouble s, GLdouble t);
//####glMultiTexCoord2dvARB
	void glMultiTexCoord2dvARB (GLenum target, const GLdouble *v);
//####glMultiTexCoord2fARB
	void glMultiTexCoord2fARB (GLenum target, GLfloat s, GLfloat t);
//####glMultiTexCoord2fvARB
	void glMultiTexCoord2fvARB (GLenum target, const GLfloat *v);
//####glMultiTexCoord2iARB
	void glMultiTexCoord2iARB (GLenum target, GLint s, GLint t);
//####glMultiTexCoord2ivARB
	void glMultiTexCoord2ivARB (GLenum target, const GLint *v);
//####glMultiTexCoord2sARB
	void glMultiTexCoord2sARB (GLenum target, GLshort s, GLshort t);
//####glMultiTexCoord2svARB
	void glMultiTexCoord2svARB (GLenum target, const GLshort *v);
//####glMultiTexCoord3dARB
	void glMultiTexCoord3dARB (GLenum target, GLdouble s, GLdouble t, GLdouble r);
//####glMultiTexCoord3dvARB
	void glMultiTexCoord3dvARB (GLenum target, const GLdouble *v);
//####glMultiTexCoord3fARB
	void glMultiTexCoord3fARB (GLenum target, GLfloat s, GLfloat t, GLfloat r);
//####glMultiTexCoord3fvARB
	void glMultiTexCoord3fvARB (GLenum target, const GLfloat *v);
//####glMultiTexCoord3iARB
	void glMultiTexCoord3iARB (GLenum target, GLint s, GLint t, GLint r);
//####glMultiTexCoord3ivARB
	void glMultiTexCoord3ivARB (GLenum target, const GLint *v);
//####glMultiTexCoord3sARB
	void glMultiTexCoord3sARB (GLenum target, GLshort s, GLshort t, GLshort r);
//####glMultiTexCoord3svARB
	void glMultiTexCoord3svARB (GLenum target, const GLshort *v);
//####glMultiTexCoord4dARB
	void glMultiTexCoord4dARB (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
//####glMultiTexCoord4dvARB
	void glMultiTexCoord4dvARB (GLenum target, const GLdouble *v);
//####glMultiTexCoord4fARB
	void glMultiTexCoord4fARB (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
//####glMultiTexCoord4fvARB
	void glMultiTexCoord4fvARB (GLenum target, const GLfloat *v);
//####glMultiTexCoord4iARB
	void glMultiTexCoord4iARB (GLenum target, GLint s, GLint t, GLint r, GLint q);
//####glMultiTexCoord4ivARB
	void glMultiTexCoord4ivARB (GLenum target, const GLint *v);
//####glMultiTexCoord4sARB
	void glMultiTexCoord4sARB (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
//####glMultiTexCoord4svARB
	void glMultiTexCoord4svARB (GLenum target, const GLshort *v);
//####glPointParameterfARB
	void glPointParameterfARB (GLenum pname, GLfloat param);
//####glPointParameterfvARB
	void glPointParameterfvARB (GLenum pname, const GLfloat* params);
//####glGetnColorTableARB
	void glGetnColorTableARB (GLenum target, GLenum format, GLenum type, GLsizei bufSize, void* table);
//####glGetnCompressedTexImageARB
	void glGetnCompressedTexImageARB (GLenum target, GLint lod, GLsizei bufSize, void* img);
//####glGetnConvolutionFilterARB
	void glGetnConvolutionFilterARB (GLenum target, GLenum format, GLenum type, GLsizei bufSize, void* image);
//####glGetnHistogramARB
	void glGetnHistogramARB (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void* values);
//####glGetnMapdvARB
	void glGetnMapdvARB (GLenum target, GLenum query, GLsizei bufSize, GLdouble* v);
//####glGetnMapfvARB
	void glGetnMapfvARB (GLenum target, GLenum query, GLsizei bufSize, GLfloat* v);
//####glGetnMapivARB
	void glGetnMapivARB (GLenum target, GLenum query, GLsizei bufSize, GLint* v);
//####glGetnMinmaxARB
	void glGetnMinmaxARB (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void* values);
//####glGetnPixelMapfvARB
	void glGetnPixelMapfvARB (GLenum map, GLsizei bufSize, GLfloat* values);
//####glGetnPixelMapuivARB
	void glGetnPixelMapuivARB (GLenum map, GLsizei bufSize, GLuint* values);
//####glGetnPixelMapusvARB
	void glGetnPixelMapusvARB (GLenum map, GLsizei bufSize, GLushort* values);
//####glGetnPolygonStippleARB
	void glGetnPolygonStippleARB (GLsizei bufSize, GLubyte* pattern);
//####glGetnSeparableFilterARB
	void glGetnSeparableFilterARB (GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, void* row, GLsizei columnBufSize, GLvoid*column, GLvoid*span);
//####glGetnTexImageARB
	void glGetnTexImageARB (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void* img);
//####glGetnUniformdvARB
	void glGetnUniformdvARB (GLuint program, GLint location, GLsizei bufSize, GLdouble* params);
//####glGetnUniformfvARB
	void glGetnUniformfvARB (GLuint program, GLint location, GLsizei bufSize, GLfloat* params);
//####glGetnUniformivARB
	void glGetnUniformivARB (GLuint program, GLint location, GLsizei bufSize, GLint* params);
//####glGetnUniformuivARB
	void glGetnUniformuivARB (GLuint program, GLint location, GLsizei bufSize, GLuint* params);
//####glReadnPixelsARB
	void glReadnPixelsARB (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void* data);
//####glActiveShaderProgram
	void glActiveShaderProgram (GLuint pipeline, GLuint program);
//####glBindProgramPipeline
	void glBindProgramPipeline (GLuint pipeline);
//####glCreateShaderProgramv
	GLuint glCreateShaderProgramv (GLenum type, GLsizei count, const char ** strings);
//####glDeleteProgramPipelines
	void glDeleteProgramPipelines (GLsizei n, const GLuint* pipelines);
//####glGenProgramPipelines
	void glGenProgramPipelines (GLsizei n, GLuint* pipelines);
//####glGetProgramPipelineInfoLog
	void glGetProgramPipelineInfoLog (GLuint pipeline, GLsizei bufSize, GLsizei* length, char *infoLog);
//####glGetProgramPipelineiv
	void glGetProgramPipelineiv (GLuint pipeline, GLenum pname, GLint* params);
//####glIsProgramPipeline
	GLboolean glIsProgramPipeline (GLuint pipeline);
//####glProgramUniform1d
	void glProgramUniform1d (GLuint program, GLint location, GLdouble x);
//####glProgramUniform1dv
	void glProgramUniform1dv (GLuint program, GLint location, GLsizei count, const GLdouble* value);
//####glProgramUniform1f
	void glProgramUniform1f (GLuint program, GLint location, GLfloat x);
//####glProgramUniform1fv
	void glProgramUniform1fv (GLuint program, GLint location, GLsizei count, const GLfloat* value);
//####glProgramUniform1i
	void glProgramUniform1i (GLuint program, GLint location, GLint x);
//####glProgramUniform1iv
	void glProgramUniform1iv (GLuint program, GLint location, GLsizei count, const GLint* value);
//####glProgramUniform1ui
	void glProgramUniform1ui (GLuint program, GLint location, GLuint x);
//####glProgramUniform1uiv
	void glProgramUniform1uiv (GLuint program, GLint location, GLsizei count, const GLuint* value);
//####glProgramUniform2d
	void glProgramUniform2d (GLuint program, GLint location, GLdouble x, GLdouble y);
//####glProgramUniform2dv
	void glProgramUniform2dv (GLuint program, GLint location, GLsizei count, const GLdouble* value);
//####glProgramUniform2f
	void glProgramUniform2f (GLuint program, GLint location, GLfloat x, GLfloat y);
//####glProgramUniform2fv
	void glProgramUniform2fv (GLuint program, GLint location, GLsizei count, const GLfloat* value);
//####glProgramUniform2i
	void glProgramUniform2i (GLuint program, GLint location, GLint x, GLint y);
//####glProgramUniform2iv
	void glProgramUniform2iv (GLuint program, GLint location, GLsizei count, const GLint* value);
//####glProgramUniform2ui
	void glProgramUniform2ui (GLuint program, GLint location, GLuint x, GLuint y);
//####glProgramUniform2uiv
	void glProgramUniform2uiv (GLuint program, GLint location, GLsizei count, const GLuint* value);
//####glProgramUniform3d
	void glProgramUniform3d (GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z);
//####glProgramUniform3dv
	void glProgramUniform3dv (GLuint program, GLint location, GLsizei count, const GLdouble* value);
//####glProgramUniform3f
	void glProgramUniform3f (GLuint program, GLint location, GLfloat x, GLfloat y, GLfloat z);
//####glProgramUniform3fv
	void glProgramUniform3fv (GLuint program, GLint location, GLsizei count, const GLfloat* value);
//####glProgramUniform3i
	void glProgramUniform3i (GLuint program, GLint location, GLint x, GLint y, GLint z);
//####glProgramUniform3iv
	void glProgramUniform3iv (GLuint program, GLint location, GLsizei count, const GLint* value);
//####glProgramUniform3ui
	void glProgramUniform3ui (GLuint program, GLint location, GLuint x, GLuint y, GLuint z);
//####glProgramUniform3uiv
	void glProgramUniform3uiv (GLuint program, GLint location, GLsizei count, const GLuint* value);
//####glProgramUniform4d
	void glProgramUniform4d (GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
//####glProgramUniform4dv
	void glProgramUniform4dv (GLuint program, GLint location, GLsizei count, const GLdouble* value);
//####glProgramUniform4f
	void glProgramUniform4f (GLuint program, GLint location, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
//####glProgramUniform4fv
	void glProgramUniform4fv (GLuint program, GLint location, GLsizei count, const GLfloat* value);
//####glProgramUniform4i
	void glProgramUniform4i (GLuint program, GLint location, GLint x, GLint y, GLint z, GLint w);
//####glProgramUniform4iv
	void glProgramUniform4iv (GLuint program, GLint location, GLsizei count, const GLint* value);
//####glProgramUniform4ui
	void glProgramUniform4ui (GLuint program, GLint location, GLuint x, GLuint y, GLuint z, GLuint w);
//####glProgramUniform4uiv
	void glProgramUniform4uiv (GLuint program, GLint location, GLsizei count, const GLuint* value);
//####glProgramUniformMatrix2dv
	void glProgramUniformMatrix2dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value);
//####glProgramUniformMatrix2fv
	void glProgramUniformMatrix2fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
//####glProgramUniformMatrix2x3dv
	void glProgramUniformMatrix2x3dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value);
//####glProgramUniformMatrix2x3fv
	void glProgramUniformMatrix2x3fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
//####glProgramUniformMatrix2x4dv
	void glProgramUniformMatrix2x4dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value);
//####glProgramUniformMatrix2x4fv
	void glProgramUniformMatrix2x4fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
//####glProgramUniformMatrix3dv
	void glProgramUniformMatrix3dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value);
//####glProgramUniformMatrix3fv
	void glProgramUniformMatrix3fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
//####glProgramUniformMatrix3x2dv
	void glProgramUniformMatrix3x2dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value);
//####glProgramUniformMatrix3x2fv
	void glProgramUniformMatrix3x2fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
//####glProgramUniformMatrix3x4dv
	void glProgramUniformMatrix3x4dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value);
//####glProgramUniformMatrix3x4fv
	void glProgramUniformMatrix3x4fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
//####glProgramUniformMatrix4dv
	void glProgramUniformMatrix4dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value);
//####glProgramUniformMatrix4fv
	void glProgramUniformMatrix4fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
//####glProgramUniformMatrix4x2dv
	void glProgramUniformMatrix4x2dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value);
//####glProgramUniformMatrix4x2fv
	void glProgramUniformMatrix4x2fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
//####glProgramUniformMatrix4x3dv
	void glProgramUniformMatrix4x3dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value);
//####glProgramUniformMatrix4x3fv
	void glProgramUniformMatrix4x3fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
//####glUseProgramStages
	void glUseProgramStages (GLuint pipeline, GLbitfield stages, GLuint program);
//####glValidateProgramPipeline
	void glValidateProgramPipeline (GLuint pipeline);
//####glGetVertexAttribLdv
	void glGetVertexAttribLdv (GLuint index, GLenum pname, GLdouble* params);
//####glVertexAttribL1d
	void glVertexAttribL1d (GLuint index, GLdouble x);
//####glVertexAttribL1dv
	void glVertexAttribL1dv (GLuint index, const GLdouble* v);
//####glVertexAttribL2d
	void glVertexAttribL2d (GLuint index, GLdouble x, GLdouble y);
//####glVertexAttribL2dv
	void glVertexAttribL2dv (GLuint index, const GLdouble* v);
//####glVertexAttribL3d
	void glVertexAttribL3d (GLuint index, GLdouble x, GLdouble y, GLdouble z);
//####glVertexAttribL3dv
	void glVertexAttribL3dv (GLuint index, const GLdouble* v);
//####glVertexAttribL4d
	void glVertexAttribL4d (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
//####glVertexAttribL4dv
	void glVertexAttribL4dv (GLuint index, const GLdouble* v);
//####glVertexAttribLPointer
	void glVertexAttribLPointer (GLuint index, GLint size, GLenum type, GLsizei stride, const void* pointer);
//####glWeightbvARB
	void glWeightbvARB (GLint size, GLbyte *weights);
//####glWeightsvARB
	void glWeightsvARB (GLint size, GLshort *weights);
//####glWeightivARB
	void glWeightivARB (GLint size, GLint *weights);
//####glWeightfvARB
	void glWeightfvARB (GLint size, GLfloat *weights);
//####glWeightdvARB
	void glWeightdvARB (GLint size, GLdouble *weights);
//####glWeightubvARB
	void glWeightubvARB (GLint size, GLubyte *weights);
//####glWeightusvARB
	void glWeightusvARB (GLint size, GLushort *weights);
//####glWeightuivARB
	void glWeightuivARB (GLint size, GLuint *weights);
//####glWeightPointerARB
	void glWeightPointerARB (GLint size, GLenum type, GLsizei stride, GLvoid *pointer);
//####glVertexBlendARB
	void glVertexBlendARB (GLint count);
//####glTexBumpParameterivATI
	void glTexBumpParameterivATI (GLenum pname, GLint *param);
//####glTexBumpParameterfvATI
	void glTexBumpParameterfvATI (GLenum pname, GLfloat *param);
//####glGetTexBumpParameterivATI
	void glGetTexBumpParameterivATI (GLenum pname, GLint *param);
//####glGetTexBumpParameterfvATI
	void glGetTexBumpParameterfvATI (GLenum pname, GLfloat *param);
//####glMapObjectBufferATI
	void* glMapObjectBufferATI (GLuint buffer);
//####glUnmapObjectBufferATI
	void glUnmapObjectBufferATI (GLuint buffer);
//####glPNTrianglesiATI
	void glPNTrianglesiATI (GLenum pname, GLint param);
//####glPNTrianglesfATI
	void glPNTrianglesfATI (GLenum pname, GLfloat param);
//####glStencilOpSeparateATI
	void glStencilOpSeparateATI (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
//####glStencilFuncSeparateATI
	void glStencilFuncSeparateATI (GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask);
//####glClientActiveVertexStreamATI
	void glClientActiveVertexStreamATI (GLenum stream);
//####glVertexBlendEnviATI
	void glVertexBlendEnviATI (GLenum pname, GLint param);
//####glVertexBlendEnvfATI
	void glVertexBlendEnvfATI (GLenum pname, GLfloat param);
//####glVertexStream2sATI
	void glVertexStream2sATI (GLenum stream, GLshort x, GLshort y);
//####glVertexStream2svATI
	void glVertexStream2svATI (GLenum stream, const GLshort *v);
//####glVertexStream2iATI
	void glVertexStream2iATI (GLenum stream, GLint x, GLint y);
//####glVertexStream2ivATI
	void glVertexStream2ivATI (GLenum stream, const GLint *v);
//####glVertexStream2fATI
	void glVertexStream2fATI (GLenum stream, GLfloat x, GLfloat y);
//####glVertexStream2fvATI
	void glVertexStream2fvATI (GLenum stream, const GLfloat *v);
//####glVertexStream2dATI
	void glVertexStream2dATI (GLenum stream, GLdouble x, GLdouble y);
//####glVertexStream2dvATI
	void glVertexStream2dvATI (GLenum stream, const GLdouble *v);
//####glVertexStream3sATI
	void glVertexStream3sATI (GLenum stream, GLshort x, GLshort y, GLshort z);
//####glVertexStream3svATI
	void glVertexStream3svATI (GLenum stream, const GLshort *v);
//####glVertexStream3iATI
	void glVertexStream3iATI (GLenum stream, GLint x, GLint y, GLint z);
//####glVertexStream3ivATI
	void glVertexStream3ivATI (GLenum stream, const GLint *v);
//####glVertexStream3fATI
	void glVertexStream3fATI (GLenum stream, GLfloat x, GLfloat y, GLfloat z);
//####glVertexStream3fvATI
	void glVertexStream3fvATI (GLenum stream, const GLfloat *v);
//####glVertexStream3dATI
	void glVertexStream3dATI (GLenum stream, GLdouble x, GLdouble y, GLdouble z);
//####glVertexStream3dvATI
	void glVertexStream3dvATI (GLenum stream, const GLdouble *v);
//####glVertexStream4sATI
	void glVertexStream4sATI (GLenum stream, GLshort x, GLshort y, GLshort z, GLshort w);
//####glVertexStream4svATI
	void glVertexStream4svATI (GLenum stream, const GLshort *v);
//####glVertexStream4iATI
	void glVertexStream4iATI (GLenum stream, GLint x, GLint y, GLint z, GLint w);
//####glVertexStream4ivATI
	void glVertexStream4ivATI (GLenum stream, const GLint *v);
//####glVertexStream4fATI
	void glVertexStream4fATI (GLenum stream, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
//####glVertexStream4fvATI
	void glVertexStream4fvATI (GLenum stream, const GLfloat *v);
//####glVertexStream4dATI
	void glVertexStream4dATI (GLenum stream, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
//####glVertexStream4dvATI
	void glVertexStream4dvATI (GLenum stream, const GLdouble *v);
//####glNormalStream3bATI
	void glNormalStream3bATI (GLenum stream, GLbyte x, GLbyte y, GLbyte z);
//####glNormalStream3bvATI
	void glNormalStream3bvATI (GLenum stream, const GLbyte *v);
//####glNormalStream3sATI
	void glNormalStream3sATI (GLenum stream, GLshort x, GLshort y, GLshort z);
//####glNormalStream3svATI
	void glNormalStream3svATI (GLenum stream, const GLshort *v);
//####glNormalStream3iATI
	void glNormalStream3iATI (GLenum stream, GLint x, GLint y, GLint z);
//####glNormalStream3ivATI
	void glNormalStream3ivATI (GLenum stream, const GLint *v);
//####glNormalStream3fATI
	void glNormalStream3fATI (GLenum stream, GLfloat x, GLfloat y, GLfloat z);
//####glNormalStream3fvATI
	void glNormalStream3fvATI (GLenum stream, const GLfloat *v);
//####glNormalStream3dATI
	void glNormalStream3dATI (GLenum stream, GLdouble x, GLdouble y, GLdouble z);
//####glNormalStream3dvATI
	void glNormalStream3dvATI (GLenum stream, const GLdouble *v);
//####glUniformBufferEXT
	void glUniformBufferEXT (GLuint program, GLint location, GLuint buffer);
//####glGetUniformBufferSizeEXT
	GLint glGetUniformBufferSizeEXT (GLuint program, GLint location);
//####glDepthBoundsEXT
	void glDepthBoundsEXT (GLclampd zmin, GLclampd zmax);
//####glDrawArraysInstancedEXT
	void glDrawArraysInstancedEXT (GLenum mode, GLint start, GLsizei count, GLsizei primcount);
//####glDrawElementsInstancedEXT
	void glDrawElementsInstancedEXT (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei primcount);
//####glDrawRangeElementsEXT
	void glDrawRangeElementsEXT (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices);
//####glFogCoordfEXT
	void glFogCoordfEXT (GLfloat coord);
//####glFogCoordfvEXT
	void glFogCoordfvEXT (const GLfloat *coord);
//####glFogCoorddEXT
	void glFogCoorddEXT (GLdouble coord);
//####glFogCoorddvEXT
	void glFogCoorddvEXT (const GLdouble *coord);
//####glFogCoordPointerEXT
	void glFogCoordPointerEXT (GLenum type, GLsizei stride, const GLvoid *pointer);
//####glProgramParameteriEXT
	void glProgramParameteriEXT (GLuint program, GLenum pname, GLint value);
//####glFramebufferTextureEXT
	void glFramebufferTextureEXT (GLenum target, GLenum attachment, GLuint texture, GLint level);
//####glFramebufferTextureLayerEXT
	void glFramebufferTextureLayerEXT (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
//####glFramebufferTextureFaceEXT
	void glFramebufferTextureFaceEXT (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
//####glProgramEnvParameters4fvEXT
	void glProgramEnvParameters4fvEXT (GLenum target, GLuint index, GLsizei count, const GLfloat* params);
//####glProgramLocalParameters4fvEXT
	void glProgramLocalParameters4fvEXT (GLenum target, GLuint index, GLsizei count, const GLfloat* params);
//####glGetUniformuivEXT
	void glGetUniformuivEXT (GLuint program, GLint location, GLuint *params);
//####glBindFragDataLocationEXT
	void glBindFragDataLocationEXT (GLuint program, GLuint color, const GLchar *name);
//####glGetFragDataLocationEXT
	GLint glGetFragDataLocationEXT (GLuint program, const GLchar *name);
//####glUniform1uiEXT
	void glUniform1uiEXT (GLint location, GLuint v0);
//####glUniform2uiEXT
	void glUniform2uiEXT (GLint location, GLuint v0, GLuint v1);
//####glUniform3uiEXT
	void glUniform3uiEXT (GLint location, GLuint v0, GLuint v1, GLuint v2);
//####glUniform4uiEXT
	void glUniform4uiEXT (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
//####glUniform1uivEXT
	void glUniform1uivEXT (GLint location, GLsizei count, const GLuint *value);
//####glUniform2uivEXT
	void glUniform2uivEXT (GLint location, GLsizei count, const GLuint *value);
//####glUniform3uivEXT
	void glUniform3uivEXT (GLint location, GLsizei count, const GLuint *value);
//####glUniform4uivEXT
	void glUniform4uivEXT (GLint location, GLsizei count, const GLuint *value);
//####glVertexAttribI1iEXT
	void glVertexAttribI1iEXT (GLuint index, GLint x);
//####glVertexAttribI2iEXT
	void glVertexAttribI2iEXT (GLuint index, GLint x, GLint y);
//####glVertexAttribI3iEXT
	void glVertexAttribI3iEXT (GLuint index, GLint x, GLint y, GLint z);
//####glVertexAttribI4iEXT
	void glVertexAttribI4iEXT (GLuint index, GLint x, GLint y, GLint z, GLint w);
//####glVertexAttribI1uiEXT
	void glVertexAttribI1uiEXT (GLuint index, GLuint x);
//####glVertexAttribI2uiEXT
	void glVertexAttribI2uiEXT (GLuint index, GLuint x, GLuint y);
//####glVertexAttribI3uiEXT
	void glVertexAttribI3uiEXT (GLuint index, GLuint x, GLuint y, GLuint z);
//####glVertexAttribI4uiEXT
	void glVertexAttribI4uiEXT (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
//####glVertexAttribI1ivEXT
	void glVertexAttribI1ivEXT (GLuint index, const GLint *v);
//####glVertexAttribI2ivEXT
	void glVertexAttribI2ivEXT (GLuint index, const GLint *v);
//####glVertexAttribI3ivEXT
	void glVertexAttribI3ivEXT (GLuint index, const GLint *v);
//####glVertexAttribI4ivEXT
	void glVertexAttribI4ivEXT (GLuint index, const GLint *v);
//####glVertexAttribI1uivEXT
	void glVertexAttribI1uivEXT (GLuint index, const GLuint *v);
//####glVertexAttribI2uivEXT
	void glVertexAttribI2uivEXT (GLuint index, const GLuint *v);
//####glVertexAttribI3uivEXT
	void glVertexAttribI3uivEXT (GLuint index, const GLuint *v);
//####glVertexAttribI4uivEXT
	void glVertexAttribI4uivEXT (GLuint index, const GLuint *v);
//####glVertexAttribI4bvEXT
	void glVertexAttribI4bvEXT (GLuint index, const GLbyte *v);
//####glVertexAttribI4svEXT
	void glVertexAttribI4svEXT (GLuint index, const GLshort *v);
//####glVertexAttribI4ubvEXT
	void glVertexAttribI4ubvEXT (GLuint index, const GLubyte *v);
//####glVertexAttribI4usvEXT
	void glVertexAttribI4usvEXT (GLuint index, const GLushort *v);
//####glVertexAttribIPointerEXT
	void glVertexAttribIPointerEXT (GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
//####glGetVertexAttribIivEXT
	void glGetVertexAttribIivEXT (GLuint index, GLenum pname, GLint *params);
//####glGetVertexAttribIuivEXT
	void glGetVertexAttribIuivEXT (GLuint index, GLenum pname, GLuint *params);
//####glPointParameterfEXT
	void glPointParameterfEXT (GLenum pname, GLfloat param);
//####glPointParameterfvEXT
	void glPointParameterfvEXT (GLenum pname, const GLfloat* params);
//####glSecondaryColor3bEXT
	void glSecondaryColor3bEXT (GLbyte red, GLbyte green, GLbyte blue);
//####glSecondaryColor3bvEXT
	void glSecondaryColor3bvEXT (const GLbyte *v);
//####glSecondaryColor3dEXT
	void glSecondaryColor3dEXT (GLdouble red, GLdouble green, GLdouble blue);
//####glSecondaryColor3dvEXT
	void glSecondaryColor3dvEXT (const GLdouble *v);
//####glSecondaryColor3fEXT
	void glSecondaryColor3fEXT (GLfloat red, GLfloat green, GLfloat blue);
//####glSecondaryColor3fvEXT
	void glSecondaryColor3fvEXT (const GLfloat *v);
//####glSecondaryColor3iEXT
	void glSecondaryColor3iEXT (GLint red, GLint green, GLint blue);
//####glSecondaryColor3ivEXT
	void glSecondaryColor3ivEXT (const GLint *v);
//####glSecondaryColor3sEXT
	void glSecondaryColor3sEXT (GLshort red, GLshort green, GLshort blue);
//####glSecondaryColor3svEXT
	void glSecondaryColor3svEXT (const GLshort *v);
//####glSecondaryColor3ubEXT
	void glSecondaryColor3ubEXT (GLubyte red, GLubyte green, GLubyte blue);
//####glSecondaryColor3ubvEXT
	void glSecondaryColor3ubvEXT (const GLubyte *v);
//####glSecondaryColor3uiEXT
	void glSecondaryColor3uiEXT (GLuint red, GLuint green, GLuint blue);
//####glSecondaryColor3uivEXT
	void glSecondaryColor3uivEXT (const GLuint *v);
//####glSecondaryColor3usEXT
	void glSecondaryColor3usEXT (GLushort red, GLushort green, GLushort blue);
//####glSecondaryColor3usvEXT
	void glSecondaryColor3usvEXT (const GLushort *v);
//####glSecondaryColorPointerEXT
	void glSecondaryColorPointerEXT (GLint size, GLenum type, GLsizei stride, GLvoid *pointer);
//####glTexBufferEXT
	void glTexBufferEXT (GLenum target, GLenum internalformat, GLuint buffer);
//####glTexParameterIivEXT
	void glTexParameterIivEXT (GLenum target, GLenum pname, const GLint *params);
//####glTexParameterIuivEXT
	void glTexParameterIuivEXT (GLenum target, GLenum pname, const GLuint *params);
//####glGetTexParameterIivEXT
	void glGetTexParameterIivEXT (GLenum target, GLenum pname, GLint *params);
//####glGetTexParameterIuivEXT
	void glGetTexParameterIuivEXT (GLenum target, GLenum pname, GLuint *params);
//####glClearColorIiEXT
	void glClearColorIiEXT (GLint red, GLint green, GLint blue, GLint alpha);
//####glClearColorIuiEXT
	void glClearColorIuiEXT (GLuint red, GLuint green, GLuint blue, GLuint alpha);
//####glBeginVertexShaderEXT
	void glBeginVertexShaderEXT (void);
//####glEndVertexShaderEXT
	void glEndVertexShaderEXT (void);
//####glBindVertexShaderEXT
	void glBindVertexShaderEXT (GLuint id);
//####glGenVertexShadersEXT
	GLuint glGenVertexShadersEXT (GLuint range);
//####glDeleteVertexShaderEXT
	void glDeleteVertexShaderEXT (GLuint id);
//####glShaderOp1EXT
	void glShaderOp1EXT (GLenum op, GLuint res, GLuint arg1);
//####glShaderOp2EXT
	void glShaderOp2EXT (GLenum op, GLuint res, GLuint arg1, GLuint arg2);
//####glShaderOp3EXT
	void glShaderOp3EXT (GLenum op, GLuint res, GLuint arg1, GLuint arg2, GLuint arg3);
//####glSwizzleEXT
	void glSwizzleEXT (GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);
//####glWriteMaskEXT
	void glWriteMaskEXT (GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);
//####glInsertComponentEXT
	void glInsertComponentEXT (GLuint res, GLuint src, GLuint num);
//####glExtractComponentEXT
	void glExtractComponentEXT (GLuint res, GLuint src, GLuint num);
//####glGenSymbolsEXT
	GLuint glGenSymbolsEXT (GLenum dataType, GLenum storageType, GLenum range, GLuint components);
//####glSetInvariantEXT
	void glSetInvariantEXT (GLuint id, GLenum type, GLvoid *addr);
//####glSetLocalConstantEXT
	void glSetLocalConstantEXT (GLuint id, GLenum type, GLvoid *addr);
//####glVariantbvEXT
	void glVariantbvEXT (GLuint id, GLbyte *addr);
//####glVariantsvEXT
	void glVariantsvEXT (GLuint id, GLshort *addr);
//####glVariantivEXT
	void glVariantivEXT (GLuint id, GLint *addr);
//####glVariantfvEXT
	void glVariantfvEXT (GLuint id, GLfloat *addr);
//####glVariantdvEXT
	void glVariantdvEXT (GLuint id, GLdouble *addr);
//####glVariantubvEXT
	void glVariantubvEXT (GLuint id, GLubyte *addr);
//####glVariantusvEXT
	void glVariantusvEXT (GLuint id, GLushort *addr);
//####glVariantuivEXT
	void glVariantuivEXT (GLuint id, GLuint *addr);
//####glVariantPointerEXT
	void glVariantPointerEXT (GLuint id, GLenum type, GLuint stride, GLvoid *addr);
//####glEnableVariantClientStateEXT
	void glEnableVariantClientStateEXT (GLuint id);
//####glDisableVariantClientStateEXT
	void glDisableVariantClientStateEXT (GLuint id);
//####glBindLightParameterEXT
	GLuint glBindLightParameterEXT (GLenum light, GLenum value);
//####glBindMaterialParameterEXT
	GLuint glBindMaterialParameterEXT (GLenum face, GLenum value);
//####glBindTexGenParameterEXT
	GLuint glBindTexGenParameterEXT (GLenum unit, GLenum coord, GLenum value);
//####glBindTextureUnitParameterEXT
	GLuint glBindTextureUnitParameterEXT (GLenum unit, GLenum value);
//####glBindParameterEXT
	GLuint glBindParameterEXT (GLenum value);
//####glIsVariantEnabledEXT
	GLboolean glIsVariantEnabledEXT (GLuint id, GLenum cap);
//####glGetVariantBooleanvEXT
	void glGetVariantBooleanvEXT (GLuint id, GLenum value, GLboolean *data);
//####glGetVariantIntegervEXT
	void glGetVariantIntegervEXT (GLuint id, GLenum value, GLint *data);
//####glGetVariantFloatvEXT
	void glGetVariantFloatvEXT (GLuint id, GLenum value, GLfloat *data);
//####glGetVariantPointervEXT
	void glGetVariantPointervEXT (GLuint id, GLenum value, GLvoid **data);
//####glGetInvariantBooleanvEXT
	void glGetInvariantBooleanvEXT (GLuint id, GLenum value, GLboolean *data);
//####glGetInvariantIntegervEXT
	void glGetInvariantIntegervEXT (GLuint id, GLenum value, GLint *data);
//####glGetInvariantFloatvEXT
	void glGetInvariantFloatvEXT (GLuint id, GLenum value, GLfloat *data);
//####glGetLocalConstantBooleanvEXT
	void glGetLocalConstantBooleanvEXT (GLuint id, GLenum value, GLboolean *data);
//####glGetLocalConstantIntegervEXT
	void glGetLocalConstantIntegervEXT (GLuint id, GLenum value, GLint *data);
//####glGetLocalConstantFloatvEXT
	void glGetLocalConstantFloatvEXT (GLuint id, GLenum value, GLfloat *data);
//####glBufferRegionEnabledEXT
	GLuint glBufferRegionEnabledEXT (void);
//####glNewBufferRegionEXT
	GLuint glNewBufferRegionEXT (GLenum region);
//####glDeleteBufferRegionEXT
	void glDeleteBufferRegionEXT (GLenum region);
//####glReadBufferRegionEXT
	void glReadBufferRegionEXT (GLuint region, GLint x, GLint y, GLsizei width, GLsizei height);
//####glDrawBufferRegionEXT
	void glDrawBufferRegionEXT (GLuint region, GLint x, GLint y, GLsizei width, GLsizei height, GLint xDest, GLint yDest);
//####glDepthRangedNV
	void glDepthRangedNV (GLdouble zNear, GLdouble zFar);
//####glClearDepthdNV
	void glClearDepthdNV (GLdouble depth);
//####glDepthBoundsdNV
	void glDepthBoundsdNV (GLdouble zmin, GLdouble zmax);
//####glRenderbufferStorageMultisampleCoverageNV
	void glRenderbufferStorageMultisampleCoverageNV (GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);
//####glProgramVertexLimitNV
	void glProgramVertexLimitNV (GLenum target, GLint limit);
//####glProgramLocalParameterI4iNV
	void glProgramLocalParameterI4iNV (GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
//####glProgramLocalParameterI4ivNV
	void glProgramLocalParameterI4ivNV (GLenum target, GLuint index, const GLint *params);
//####glProgramLocalParametersI4ivNV
	void glProgramLocalParametersI4ivNV (GLenum target, GLuint index, GLsizei count, const GLint *params);
//####glProgramLocalParameterI4uiNV
	void glProgramLocalParameterI4uiNV (GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
//####glProgramLocalParameterI4uivNV
	void glProgramLocalParameterI4uivNV (GLenum target, GLuint index, const GLuint *params);
//####glProgramLocalParametersI4uivNV
	void glProgramLocalParametersI4uivNV (GLenum target, GLuint index, GLsizei count, const GLuint *params);
//####glProgramEnvParameterI4iNV
	void glProgramEnvParameterI4iNV (GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
//####glProgramEnvParameterI4ivNV
	void glProgramEnvParameterI4ivNV (GLenum target, GLuint index, const GLint *params);
//####glProgramEnvParametersI4ivNV
	void glProgramEnvParametersI4ivNV (GLenum target, GLuint index, GLsizei count, const GLint *params);
//####glProgramEnvParameterI4uiNV
	void glProgramEnvParameterI4uiNV (GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
//####glProgramEnvParameterI4uivNV
	void glProgramEnvParameterI4uivNV (GLenum target, GLuint index, const GLuint *params);
//####glProgramEnvParametersI4uivNV
	void glProgramEnvParametersI4uivNV (GLenum target, GLuint index, GLsizei count, const GLuint *params);
//####glProgramBufferParametersfvNV
	void glProgramBufferParametersfvNV (GLenum target, GLuint buffer, GLuint index, GLsizei count, const GLfloat *params);
//####glProgramBufferParametersIivNV
	void glProgramBufferParametersIivNV (GLenum target, GLuint buffer, GLuint index, GLsizei count, const GLint *params);
//####glProgramBufferParametersIuivNV
	void glProgramBufferParametersIuivNV (GLenum target, GLuint buffer, GLuint index, GLsizei count, const GLuint *params);
//####glGetVideoivNV
	void glGetVideoivNV (GLuint video_slot, GLenum pname, GLint* params);
//####glGetVideouivNV
	void glGetVideouivNV (GLuint video_slot, GLenum pname, GLuint* params);
//####glBeginTransformFeedbackNV
	void glBeginTransformFeedbackNV (GLenum primitiveMode);
//####glEndTransformFeedbackNV
	void glEndTransformFeedbackNV (void);
//####glTransformFeedbackAttribsNV
	void glTransformFeedbackAttribsNV (GLuint count, const GLint *attribs, GLenum bufferMode);
//####glBindBufferBaseNV
	void glBindBufferBaseNV (GLenum target, GLuint index, GLuint buffer);
//####glTransformFeedbackVaryingsNV
	void glTransformFeedbackVaryingsNV (GLuint program, GLsizei count, const GLint *locations, GLenum bufferMode);
//####glActiveVaryingNV
	void glActiveVaryingNV (GLuint program, const GLchar *name);
//####glGetVaryingLocationNV
	GLint glGetVaryingLocationNV (GLuint program, const GLchar *name);
//####glGetActiveVaryingNV
	void glGetActiveVaryingNV (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
//####glGetTransformFeedbackVaryingNV
	void glGetTransformFeedbackVaryingNV (GLuint program, GLuint index, GLint *location);
//####glVDPAUFiniNV
	void glVDPAUFiniNV (void);
//####glVDPAUInitNV
	void glVDPAUInitNV (const void* vdpDevice, const GLvoid*getProcAddress);
//####glReadVideoPixelsSUN
	void glReadVideoPixelsSUN (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid* pixels);
//####glDrawRangeElements
	void glDrawRangeElements (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices);
//####glTexImage3D
	void glTexImage3D (GLenum target, GLint level, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels);
//####glTexSubImage3D
	void glTexSubImage3D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels);
//####glCopyTexSubImage3D
	void glCopyTexSubImage3D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
//####glActiveTexture
	void glActiveTexture (GLenum texture);
//####glClientActiveTexture
	void glClientActiveTexture (GLenum texture);
//####glCompressedTexImage1D
	void glCompressedTexImage1D (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data);
//####glCompressedTexImage2D
	void glCompressedTexImage2D (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);
//####glCompressedTexImage3D
	void glCompressedTexImage3D (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data);
//####glCompressedTexSubImage1D
	void glCompressedTexSubImage1D (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);
//####glCompressedTexSubImage2D
	void glCompressedTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);
//####glCompressedTexSubImage3D
	void glCompressedTexSubImage3D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);
//####glGetCompressedTexImage
	void glGetCompressedTexImage (GLenum target, GLint lod, GLvoid *img);
//####glLoadTransposeMatrixd
	void glLoadTransposeMatrixd (const GLdouble m[16]);
//####glLoadTransposeMatrixf
	void glLoadTransposeMatrixf (const GLfloat m[16]);
//####glMultTransposeMatrixd
	void glMultTransposeMatrixd (const GLdouble m[16]);
//####glMultTransposeMatrixf
	void glMultTransposeMatrixf (const GLfloat m[16]);
//####glMultiTexCoord1d
	void glMultiTexCoord1d (GLenum target, GLdouble s);
//####glMultiTexCoord1dv
	void glMultiTexCoord1dv (GLenum target, const GLdouble *v);
//####glMultiTexCoord1f
	void glMultiTexCoord1f (GLenum target, GLfloat s);
//####glMultiTexCoord1fv
	void glMultiTexCoord1fv (GLenum target, const GLfloat *v);
//####glMultiTexCoord1i
	void glMultiTexCoord1i (GLenum target, GLint s);
//####glMultiTexCoord1iv
	void glMultiTexCoord1iv (GLenum target, const GLint *v);
//####glMultiTexCoord1s
	void glMultiTexCoord1s (GLenum target, GLshort s);
//####glMultiTexCoord1sv
	void glMultiTexCoord1sv (GLenum target, const GLshort *v);
//####glMultiTexCoord2d
	void glMultiTexCoord2d (GLenum target, GLdouble s, GLdouble t);
//####glMultiTexCoord2dv
	void glMultiTexCoord2dv (GLenum target, const GLdouble *v);
//####glMultiTexCoord2f
	void glMultiTexCoord2f (GLenum target, GLfloat s, GLfloat t);
//####glMultiTexCoord2fv
	void glMultiTexCoord2fv (GLenum target, const GLfloat *v);
//####glMultiTexCoord2i
	void glMultiTexCoord2i (GLenum target, GLint s, GLint t);
//####glMultiTexCoord2iv
	void glMultiTexCoord2iv (GLenum target, const GLint *v);
//####glMultiTexCoord2s
	void glMultiTexCoord2s (GLenum target, GLshort s, GLshort t);
//####glMultiTexCoord2sv
	void glMultiTexCoord2sv (GLenum target, const GLshort *v);
//####glMultiTexCoord3d
	void glMultiTexCoord3d (GLenum target, GLdouble s, GLdouble t, GLdouble r);
//####glMultiTexCoord3dv
	void glMultiTexCoord3dv (GLenum target, const GLdouble *v);
//####glMultiTexCoord3f
	void glMultiTexCoord3f (GLenum target, GLfloat s, GLfloat t, GLfloat r);
//####glMultiTexCoord3fv
	void glMultiTexCoord3fv (GLenum target, const GLfloat *v);
//####glMultiTexCoord3i
	void glMultiTexCoord3i (GLenum target, GLint s, GLint t, GLint r);
//####glMultiTexCoord3iv
	void glMultiTexCoord3iv (GLenum target, const GLint *v);
//####glMultiTexCoord3s
	void glMultiTexCoord3s (GLenum target, GLshort s, GLshort t, GLshort r);
//####glMultiTexCoord3sv
	void glMultiTexCoord3sv (GLenum target, const GLshort *v);
//####glMultiTexCoord4d
	void glMultiTexCoord4d (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
//####glMultiTexCoord4dv
	void glMultiTexCoord4dv (GLenum target, const GLdouble *v);
//####glMultiTexCoord4f
	void glMultiTexCoord4f (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
//####glMultiTexCoord4fv
	void glMultiTexCoord4fv (GLenum target, const GLfloat *v);
//####glMultiTexCoord4i
	void glMultiTexCoord4i (GLenum target, GLint s, GLint t, GLint r, GLint q);
//####glMultiTexCoord4iv
	void glMultiTexCoord4iv (GLenum target, const GLint *v);
//####glMultiTexCoord4s
	void glMultiTexCoord4s (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
//####glMultiTexCoord4sv
	void glMultiTexCoord4sv (GLenum target, const GLshort *v);
//####glSampleCoverage
	void glSampleCoverage (GLclampf value, GLboolean invert);
//####glBlendEquation
	void glBlendEquation (GLenum mode);
//####glBlendColor
	void glBlendColor (GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);
//####glFogCoordf
	void glFogCoordf (GLfloat coord);
//####glFogCoordfv
	void glFogCoordfv (const GLfloat *coord);
//####glFogCoordd
	void glFogCoordd (GLdouble coord);
//####glFogCoorddv
	void glFogCoorddv (const GLdouble *coord);
//####glFogCoordPointer
	void glFogCoordPointer (GLenum type, GLsizei stride, const GLvoid *pointer);
//####glMultiDrawArrays
	void glMultiDrawArrays (GLenum mode, GLint *first, GLsizei *count, GLsizei primcount);
//####glMultiDrawElements
	void glMultiDrawElements (GLenum mode, GLsizei *count, GLenum type, const GLvoid **indices, GLsizei primcount);
//####glPointParameteri
	void glPointParameteri (GLenum pname, GLint param);
//####glPointParameteriv
	void glPointParameteriv (GLenum pname, const GLint *params);
//####glPointParameterf
	void glPointParameterf (GLenum pname, GLfloat param);
//####glPointParameterfv
	void glPointParameterfv (GLenum pname, const GLfloat *params);
//####glSecondaryColor3b
	void glSecondaryColor3b (GLbyte red, GLbyte green, GLbyte blue);
//####glSecondaryColor3bv
	void glSecondaryColor3bv (const GLbyte *v);
//####glSecondaryColor3d
	void glSecondaryColor3d (GLdouble red, GLdouble green, GLdouble blue);
//####glSecondaryColor3dv
	void glSecondaryColor3dv (const GLdouble *v);
//####glSecondaryColor3f
	void glSecondaryColor3f (GLfloat red, GLfloat green, GLfloat blue);
//####glSecondaryColor3fv
	void glSecondaryColor3fv (const GLfloat *v);
//####glSecondaryColor3i
	void glSecondaryColor3i (GLint red, GLint green, GLint blue);
//####glSecondaryColor3iv
	void glSecondaryColor3iv (const GLint *v);
//####glSecondaryColor3s
	void glSecondaryColor3s (GLshort red, GLshort green, GLshort blue);
//####glSecondaryColor3sv
	void glSecondaryColor3sv (const GLshort *v);
//####glSecondaryColor3ub
	void glSecondaryColor3ub (GLubyte red, GLubyte green, GLubyte blue);
//####glSecondaryColor3ubv
	void glSecondaryColor3ubv (const GLubyte *v);
//####glSecondaryColor3ui
	void glSecondaryColor3ui (GLuint red, GLuint green, GLuint blue);
//####glSecondaryColor3uiv
	void glSecondaryColor3uiv (const GLuint *v);
//####glSecondaryColor3us
	void glSecondaryColor3us (GLushort red, GLushort green, GLushort blue);
//####glSecondaryColor3usv
	void glSecondaryColor3usv (const GLushort *v);
//####glSecondaryColorPointer
	void glSecondaryColorPointer (GLint size, GLenum type, GLsizei stride, GLvoid *pointer);
//####glBlendFuncSeparate
	void glBlendFuncSeparate (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
//####glWindowPos2d
	void glWindowPos2d (GLdouble x, GLdouble y);
//####glWindowPos2f
	void glWindowPos2f (GLfloat x, GLfloat y);
//####glWindowPos2i
	void glWindowPos2i (GLint x, GLint y);
//####glWindowPos2s
	void glWindowPos2s (GLshort x, GLshort y);
//####glWindowPos2dv
	void glWindowPos2dv (const GLdouble *p);
//####glWindowPos2fv
	void glWindowPos2fv (const GLfloat *p);
//####glWindowPos2iv
	void glWindowPos2iv (const GLint *p);
//####glWindowPos2sv
	void glWindowPos2sv (const GLshort *p);
//####glWindowPos3d
	void glWindowPos3d (GLdouble x, GLdouble y, GLdouble z);
//####glWindowPos3f
	void glWindowPos3f (GLfloat x, GLfloat y, GLfloat z);
//####glWindowPos3i
	void glWindowPos3i (GLint x, GLint y, GLint z);
//####glWindowPos3s
	void glWindowPos3s (GLshort x, GLshort y, GLshort z);
//####glWindowPos3dv
	void glWindowPos3dv (const GLdouble *p);
//####glWindowPos3fv
	void glWindowPos3fv (const GLfloat *p);
//####glWindowPos3iv
	void glWindowPos3iv (const GLint *p);
//####glWindowPos3sv
	void glWindowPos3sv (const GLshort *p);
//####glGenQueries
	void glGenQueries (GLsizei n, GLuint* ids);
//####glDeleteQueries
	void glDeleteQueries (GLsizei n, const GLuint* ids);
//####glIsQuery
	GLboolean glIsQuery (GLuint id);
//####glBeginQuery
	void glBeginQuery (GLenum target, GLuint id);
//####glEndQuery
	void glEndQuery (GLenum target);
//####glGetQueryiv
	void glGetQueryiv (GLenum target, GLenum pname, GLint* params);
//####glGetQueryObjectiv
	void glGetQueryObjectiv (GLuint id, GLenum pname, GLint* params);
//####glGetQueryObjectuiv
	void glGetQueryObjectuiv (GLuint id, GLenum pname, GLuint* params);
//####glBindBuffer
	void glBindBuffer (GLenum target, GLuint buffer);
//####glDeleteBuffers
	void glDeleteBuffers (GLsizei n, const GLuint* buffers);
//####glGenBuffers
	void glGenBuffers (GLsizei n, GLuint* buffers);
//####glIsBuffer
	GLboolean glIsBuffer (GLuint buffer);
//####glBufferData
	void glBufferData (GLenum target, GLsizeiptr size, const GLvoid* data, GLenum usage);
//####glMapBuffer
	GLvoid* glMapBuffer (GLenum target, GLenum access);
//####glUnmapBuffer
	GLboolean glUnmapBuffer (GLenum target);
//####glGetBufferParameteriv
	void glGetBufferParameteriv (GLenum target, GLenum pname, GLint* params);
//####glGetBufferPointerv
	void glGetBufferPointerv (GLenum target, GLenum pname, GLvoid** params);
//####glBlendEquationSeparate
	void glBlendEquationSeparate (GLenum, GLenum);
//####glDrawBuffers
	void glDrawBuffers (GLsizei n, const GLenum* bufs);
//####glStencilOpSeparate
	void glStencilOpSeparate (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
//####glStencilFuncSeparate
	void glStencilFuncSeparate (GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask);
//####glStencilMaskSeparate
	void glStencilMaskSeparate (GLenum, GLuint);
//####glAttachShader
	void glAttachShader (GLuint program, GLuint shader);
//####glBindAttribLocation
	void glBindAttribLocation (GLuint program, GLuint index, const GLchar* name);
//####glCompileShader
	void glCompileShader (GLuint shader);
//####glCreateProgram
	GLuint glCreateProgram (void);
//####glCreateShader
	GLuint glCreateShader (GLenum type);
//####glDeleteProgram
	void glDeleteProgram (GLuint program);
//####glDeleteShader
	void glDeleteShader (GLuint shader);
//####glDetachShader
	void glDetachShader (GLuint program, GLuint shader);
//####glDisableVertexAttribArray
	void glDisableVertexAttribArray (GLuint);
//####glEnableVertexAttribArray
	void glEnableVertexAttribArray (GLuint);
//####glGetActiveAttrib
	void glGetActiveAttrib (GLuint program, GLuint index, GLsizei maxLength, GLsizei* length, GLint* size, GLenum* type, GLchar* name);
//####glGetActiveUniform
	void glGetActiveUniform (GLuint program, GLuint index, GLsizei maxLength, GLsizei* length, GLint* size, GLenum* type, GLchar* name);
//####glGetAttachedShaders
	void glGetAttachedShaders (GLuint program, GLsizei maxCount, GLsizei* count, GLuint* shaders);
//####glGetAttribLocation
	GLint glGetAttribLocation (GLuint program, const GLchar* name);
//####glGetProgramiv
	void glGetProgramiv (GLuint program, GLenum pname, GLint* param);
//####glGetProgramInfoLog
	void glGetProgramInfoLog (GLuint program, GLsizei bufSize, GLsizei* length, GLchar* infoLog);
//####glGetShaderiv
	void glGetShaderiv (GLuint shader, GLenum pname, GLint* param);
//####glGetShaderInfoLog
	void glGetShaderInfoLog (GLuint shader, GLsizei bufSize, GLsizei* length, GLchar* infoLog);
//####glShaderSource
	void glShaderSource (GLuint shader, GLsizei count, const GLchar** strings, const GLint* lengths);
//####glGetUniformLocation
	GLint glGetUniformLocation (GLuint program, const GLchar* name);
//####glGetUniformfv
	void glGetUniformfv (GLuint program, GLint location, GLfloat* params);
//####glGetUniformiv
	void glGetUniformiv (GLuint program, GLint location, GLint* params);
//####glGetVertexAttribdv
	void glGetVertexAttribdv (GLuint, GLenum, GLdouble*);
//####glGetVertexAttribfv
	void glGetVertexAttribfv (GLuint, GLenum, GLfloat*);
//####glGetVertexAttribiv
	void glGetVertexAttribiv (GLuint, GLenum, GLint*);
//####glGetVertexAttribPointerv
	void glGetVertexAttribPointerv (GLuint, GLenum, GLvoid*);
//####glIsProgram
	GLboolean glIsProgram (GLuint program);
//####glIsShader
	GLboolean glIsShader (GLuint shader);
//####glLinkProgram
	void glLinkProgram (GLuint program);
//####glGetShaderSource
	void glGetShaderSource (GLint obj, GLsizei maxLength, GLsizei* length, GLchar* source);
//####glUseProgram
	void glUseProgram (GLuint program);
//####glUniform1f
	void glUniform1f (GLint location, GLfloat v0);
//####glUniform1fv
	void glUniform1fv (GLint location, GLsizei count, const GLfloat* value);
//####glUniform1i
	void glUniform1i (GLint location, GLint v0);
//####glUniform1iv
	void glUniform1iv (GLint location, GLsizei count, const GLint* value);
//####glUniform2f
	void glUniform2f (GLint location, GLfloat v0, GLfloat v1);
//####glUniform2fv
	void glUniform2fv (GLint location, GLsizei count, const GLfloat* value);
//####glUniform2i
	void glUniform2i (GLint location, GLint v0, GLint v1);
//####glUniform2iv
	void glUniform2iv (GLint location, GLsizei count, const GLint* value);
//####glUniform3f
	void glUniform3f (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
//####glUniform3fv
	void glUniform3fv (GLint location, GLsizei count, const GLfloat* value);
//####glUniform3i
	void glUniform3i (GLint location, GLint v0, GLint v1, GLint v2);
//####glUniform3iv
	void glUniform3iv (GLint location, GLsizei count, const GLint* value);
//####glUniform4f
	void glUniform4f (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
//####glUniform4fv
	void glUniform4fv (GLint location, GLsizei count, const GLfloat* value);
//####glUniform4i
	void glUniform4i (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
//####glUniform4iv
	void glUniform4iv (GLint location, GLsizei count, const GLint* value);
//####glUniformMatrix2fv
	void glUniformMatrix2fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
//####glUniformMatrix3fv
	void glUniformMatrix3fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
//####glUniformMatrix4fv
	void glUniformMatrix4fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
//####glValidateProgram
	void glValidateProgram (GLuint program);
//####glVertexAttrib1d
	void glVertexAttrib1d (GLuint index, GLdouble x);
//####glVertexAttrib1dv
	void glVertexAttrib1dv (GLuint index, const GLdouble* v);
//####glVertexAttrib1f
	void glVertexAttrib1f (GLuint index, GLfloat x);
//####glVertexAttrib1fv
	void glVertexAttrib1fv (GLuint index, const GLfloat* v);
//####glVertexAttrib1s
	void glVertexAttrib1s (GLuint index, GLshort x);
//####glVertexAttrib1sv
	void glVertexAttrib1sv (GLuint index, const GLshort* v);
//####glVertexAttrib2d
	void glVertexAttrib2d (GLuint index, GLdouble x, GLdouble y);
//####glVertexAttrib2dv
	void glVertexAttrib2dv (GLuint index, const GLdouble* v);
//####glVertexAttrib2f
	void glVertexAttrib2f (GLuint index, GLfloat x, GLfloat y);
//####glVertexAttrib2fv
	void glVertexAttrib2fv (GLuint index, const GLfloat* v);
//####glVertexAttrib2s
	void glVertexAttrib2s (GLuint index, GLshort x, GLshort y);
//####glVertexAttrib2sv
	void glVertexAttrib2sv (GLuint index, const GLshort* v);
//####glVertexAttrib3d
	void glVertexAttrib3d (GLuint index, GLdouble x, GLdouble y, GLdouble z);
//####glVertexAttrib3dv
	void glVertexAttrib3dv (GLuint index, const GLdouble* v);
//####glVertexAttrib3f
	void glVertexAttrib3f (GLuint index, GLfloat x, GLfloat y, GLfloat z);
//####glVertexAttrib3fv
	void glVertexAttrib3fv (GLuint index, const GLfloat* v);
//####glVertexAttrib3s
	void glVertexAttrib3s (GLuint index, GLshort x, GLshort y, GLshort z);
//####glVertexAttrib3sv
	void glVertexAttrib3sv (GLuint index, const GLshort* v);
//####glVertexAttrib4Nbv
	void glVertexAttrib4Nbv (GLuint index, const GLbyte* v);
//####glVertexAttrib4Niv
	void glVertexAttrib4Niv (GLuint index, const GLint* v);
//####glVertexAttrib4Nsv
	void glVertexAttrib4Nsv (GLuint index, const GLshort* v);
//####glVertexAttrib4Nub
	void glVertexAttrib4Nub (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
//####glVertexAttrib4Nubv
	void glVertexAttrib4Nubv (GLuint index, const GLubyte* v);
//####glVertexAttrib4Nuiv
	void glVertexAttrib4Nuiv (GLuint index, const GLuint* v);
//####glVertexAttrib4Nusv
	void glVertexAttrib4Nusv (GLuint index, const GLushort* v);
//####glVertexAttrib4bv
	void glVertexAttrib4bv (GLuint index, const GLbyte* v);
//####glVertexAttrib4d
	void glVertexAttrib4d (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
//####glVertexAttrib4dv
	void glVertexAttrib4dv (GLuint index, const GLdouble* v);
//####glVertexAttrib4f
	void glVertexAttrib4f (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
//####glVertexAttrib4fv
	void glVertexAttrib4fv (GLuint index, const GLfloat* v);
//####glVertexAttrib4iv
	void glVertexAttrib4iv (GLuint index, const GLint* v);
//####glVertexAttrib4s
	void glVertexAttrib4s (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
//####glVertexAttrib4sv
	void glVertexAttrib4sv (GLuint index, const GLshort* v);
//####glVertexAttrib4ubv
	void glVertexAttrib4ubv (GLuint index, const GLubyte* v);
//####glVertexAttrib4uiv
	void glVertexAttrib4uiv (GLuint index, const GLuint* v);
//####glVertexAttrib4usv
	void glVertexAttrib4usv (GLuint index, const GLushort* v);
//####glVertexAttribPointer
	void glVertexAttribPointer (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid* pointer);
//####glUniformMatrix2x3fv
	void glUniformMatrix2x3fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
//####glUniformMatrix3x2fv
	void glUniformMatrix3x2fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
//####glUniformMatrix2x4fv
	void glUniformMatrix2x4fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
//####glUniformMatrix4x2fv
	void glUniformMatrix4x2fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
//####glUniformMatrix3x4fv
	void glUniformMatrix3x4fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
//####glUniformMatrix4x3fv
	void glUniformMatrix4x3fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
//####glColorMaski
	void glColorMaski (GLuint param1, GLboolean param2, GLboolean param3, GLboolean param4, GLboolean param5);
//####glGetBooleani_v
	void glGetBooleani_v (GLenum param1, GLuint param2, GLboolean* param3);
//####glEnablei
	void glEnablei (GLenum param1, GLuint param2);
//####glDisablei
	void glDisablei (GLenum param1, GLuint param2);
//####glIsEnabledi
	GLboolean glIsEnabledi (GLenum param1, GLuint param2);
//####glBeginTransformFeedback
	void glBeginTransformFeedback (GLenum param1);
//####glEndTransformFeedback
	void glEndTransformFeedback (void);
//####glTransformFeedbackVaryings
	void glTransformFeedbackVaryings (GLuint param1, GLsizei param2, const GLchar ** param3, GLenum param4);
//####glGetTransformFeedbackVarying
	void glGetTransformFeedbackVarying (GLuint param1, GLuint param2, GLint* param3);
//####glClampColor
	void glClampColor (GLenum param1, GLenum param2);
//####glBeginConditionalRender
	void glBeginConditionalRender (GLuint param1, GLenum param2);
//####glEndConditionalRender
	void glEndConditionalRender (void);
//####glVertexAttribI1i
	void glVertexAttribI1i (GLuint param1, GLint param2);
//####glVertexAttribI2i
	void glVertexAttribI2i (GLuint param1, GLint param2, GLint param3);
//####glVertexAttribI3i
	void glVertexAttribI3i (GLuint param1, GLint param2, GLint param3, GLint param4);
//####glVertexAttribI4i
	void glVertexAttribI4i (GLuint param1, GLint param2, GLint param3, GLint param4, GLint param5);
//####glVertexAttribI1ui
	void glVertexAttribI1ui (GLuint param1, GLuint param2);
//####glVertexAttribI2ui
	void glVertexAttribI2ui (GLuint param1, GLuint param2, GLuint param3);
//####glVertexAttribI3ui
	void glVertexAttribI3ui (GLuint param1, GLuint param2, GLuint param3, GLuint param4);
//####glVertexAttribI4ui
	void glVertexAttribI4ui (GLuint param1, GLuint param2, GLuint param3, GLuint param4, GLuint param5);
//####glVertexAttribI1iv
	void glVertexAttribI1iv (GLuint param1, const GLint* param2);
//####glVertexAttribI2iv
	void glVertexAttribI2iv (GLuint param1, const GLint* param2);
//####glVertexAttribI3iv
	void glVertexAttribI3iv (GLuint param1, const GLint* param2);
//####glVertexAttribI4iv
	void glVertexAttribI4iv (GLuint param1, const GLint* param2);
//####glVertexAttribI1uiv
	void glVertexAttribI1uiv (GLuint param1, const GLuint* param2);
//####glVertexAttribI2uiv
	void glVertexAttribI2uiv (GLuint param1, const GLuint* param2);
//####glVertexAttribI3uiv
	void glVertexAttribI3uiv (GLuint param1, const GLuint* param2);
//####glVertexAttribI4uiv
	void glVertexAttribI4uiv (GLuint param1, const GLuint* param2);
//####glVertexAttribI4bv
	void glVertexAttribI4bv (GLuint param1, const GLbyte* param2);
//####glVertexAttribI4sv
	void glVertexAttribI4sv (GLuint param1, const GLshort* param2);
//####glVertexAttribI4ubv
	void glVertexAttribI4ubv (GLuint param1, const GLubyte* param2);
//####glVertexAttribI4usv
	void glVertexAttribI4usv (GLuint param1, const GLushort* param2);
//####glVertexAttribIPointer
	void glVertexAttribIPointer (GLuint param1, GLint param2, GLenum param3, GLsizei param4, const GLvoid* param5);
//####glGetVertexAttribIiv
	void glGetVertexAttribIiv (GLuint param1, GLenum param2, GLint* param3);
//####glGetVertexAttribIuiv
	void glGetVertexAttribIuiv (GLuint param1, GLenum param2, GLuint* param3);
//####glGetUniformuiv
	void glGetUniformuiv (GLuint param1, GLint param2, GLuint* param3);
//####glBindFragDataLocation
	void glBindFragDataLocation (GLuint param1, GLuint param2, const GLchar* param3);
//####glGetFragDataLocation
	GLint glGetFragDataLocation (GLuint param1, const GLchar* param2);
//####glUniform1ui
	void glUniform1ui (GLint param1, GLuint param2);
//####glUniform2ui
	void glUniform2ui (GLint param1, GLuint param2, GLuint param3);
//####glUniform3ui
	void glUniform3ui (GLint param1, GLuint param2, GLuint param3, GLuint param4);
//####glUniform4ui
	void glUniform4ui (GLint param1, GLuint param2, GLuint param3, GLuint param4, GLuint param5);
//####glUniform1uiv
	void glUniform1uiv (GLint param1, GLsizei param2, const GLuint* param3);
//####glUniform2uiv
	void glUniform2uiv (GLint param1, GLsizei param2, const GLuint* param3);
//####glUniform3uiv
	void glUniform3uiv (GLint param1, GLsizei param2, const GLuint* param3);
//####glUniform4uiv
	void glUniform4uiv (GLint param1, GLsizei param2, const GLuint* param3);
//####glTexParameterIiv
	void glTexParameterIiv (GLenum param1, GLenum param2, const GLint* param3);
//####glTexParameterIuiv
	void glTexParameterIuiv (GLenum param1, GLenum param2, const GLuint* param3);
//####glGetTexParameterIiv
	void glGetTexParameterIiv (GLenum param1, GLenum param2, GLint* param3);
//####glGetTexParameterIuiv
	void glGetTexParameterIuiv (GLenum param1, GLenum param2, GLuint* param3);
//####glClearBufferiv
	void glClearBufferiv (GLenum param1, GLint param2, const GLint* param3);
//####glClearBufferuiv
	void glClearBufferuiv (GLenum param1, GLint param2, const GLuint* param3);
//####glClearBufferfv
	void glClearBufferfv (GLenum param1, GLint param2, const GLfloat* param3);
//####glClearBufferfi
	void glClearBufferfi (GLenum param1, GLint param2, GLfloat param3, GLint param4);
//####glGetStringi
	const GLubyte* glGetStringi (GLenum param1, GLuint param2);
//####glDrawArraysInstanced
	void glDrawArraysInstanced (GLenum param1, GLint param2, GLsizei param3, GLsizei param4);
//####glDrawElementsInstanced
	void glDrawElementsInstanced (GLenum param1, GLsizei param2, GLenum param3, const GLvoid* param4, GLsizei param5);
//####glTexBuffer
	void glTexBuffer (GLenum param1, GLenum param2, GLuint param3);
//####glPrimitiveRestartIndex
	void glPrimitiveRestartIndex (GLuint param1);
//####glFramebufferTexture
	void glFramebufferTexture (GLenum param1, GLenum param2, GLuint param3, GLint param4);
//####glVertexAttribDivisor
	void glVertexAttribDivisor (GLuint index, GLuint divisor);
//####glMinSampleShading
	void glMinSampleShading (GLclampf value);
//####glBlendEquationSeparatei
	void glBlendEquationSeparatei (GLuint buf, GLenum modeRGB, GLenum modeAlpha);
//####glBlendEquationi
	void glBlendEquationi (GLuint buf, GLenum mode);
//####glBlendFuncSeparatei
	void glBlendFuncSeparatei (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
//####glBlendFunci
	void glBlendFunci (GLuint buf, GLenum src, GLenum dst);
//####glIsProgramARB
		GLboolean glIsProgramARB (GLuint program);
//####glGetUniformLocation
		GLint glGetUniformLocation (GLuint program, const GLchar *name);
//####glBlendColorEXT
		void glBlendColorEXT (GLclampf, GLclampf, GLclampf, GLclampf);
//####glCompileShaderARB
		void glCompileShaderARB (GLhandleARB shaderObj);
//####glGetConvolutionFilter
		void glGetConvolutionFilter (GLenum target, GLenum format, GLenum type, GLvoid *image);
//####glUniform4iARB
		void glUniform4iARB (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
//####glUniformMatrix3fv
		void glUniformMatrix3fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
//####glVertexArrayRangeAPPLE
		void glVertexArrayRangeAPPLE (GLsizei length, const GLvoid *pointer);
//####glAreTexturesResident
	GLboolean glAreTexturesResident (GLsizei n, const GLuint *textures, GLboolean *residences);
//####glIsBufferARB
	GLboolean glIsBufferARB (GLuint buffer);
//####glIsEnabled
	GLboolean glIsEnabled (GLenum cap);
//####glIsEnabledIndexedEXT
	GLboolean glIsEnabledIndexedEXT (GLenum target, GLuint index);
//####glIsFenceAPPLE
	GLboolean glIsFenceAPPLE (GLuint fence);
//####glIsFramebuffer
	GLboolean glIsFramebuffer (GLuint);
//####glIsFramebufferEXT
	GLboolean glIsFramebufferEXT (GLuint framebuffer);
//####glIsList
	GLboolean glIsList (GLuint list);
//####glIsProgramARB
	GLboolean glIsProgramARB (GLuint program);
//####glIsQueryARB
	GLboolean glIsQueryARB (GLuint id);
//####glIsRenderbuffer
	GLboolean glIsRenderbuffer (GLuint);
//####glIsRenderbufferEXT
	GLboolean glIsRenderbufferEXT (GLuint renderbuffer);
//####glIsTexture
	GLboolean glIsTexture (GLuint texture);
//####glIsVertexArrayAPPLE
	GLboolean glIsVertexArrayAPPLE (GLuint id);
//####glIsVertexAttribEnabledAPPLE
	GLboolean glIsVertexAttribEnabledAPPLE (GLuint index, GLenum pname);
//####glTestFenceAPPLE
	GLboolean glTestFenceAPPLE (GLuint fence);
//####glTestObjectAPPLE
	GLboolean glTestObjectAPPLE (GLenum object, GLuint name);
//####glUnmapBufferARB
	GLboolean glUnmapBufferARB (GLenum target);
//####glCheckFramebufferStatus
	GLenum glCheckFramebufferStatus (GLenum);
//####glCheckFramebufferStatusEXT
	GLenum glCheckFramebufferStatusEXT (GLenum target);
//####glGetError
	GLenum glGetError (void);
//####glObjectPurgeableAPPLE
	GLenum glObjectPurgeableAPPLE (GLenum objectType, GLuint name, GLenum option);
//####glObjectUnpurgeableAPPLE
	GLenum glObjectUnpurgeableAPPLE (GLenum objectType, GLuint name, GLenum option);
//####glCreateProgramObjectARB
	GLhandleARB glCreateProgramObjectARB (void);
//####glCreateShaderObjectARB
	GLhandleARB glCreateShaderObjectARB (GLenum shaderType);
//####glGetHandleARB
	GLhandleARB glGetHandleARB (GLenum pname);
//####glGetAttribLocation
	GLint glGetAttribLocation (GLuint program, const GLchar *name);
//####glGetAttribLocationARB
	GLint glGetAttribLocationARB (GLhandleARB programObj, const GLcharARB *name);
//####glGetUniformLocation
	GLint glGetUniformLocation (GLuint program, const GLchar *name);
//####glGetUniformLocationARB
	GLint glGetUniformLocationARB (GLhandleARB programObj, const GLcharARB *name);
//####glRenderMode
	GLint glRenderMode (GLenum mode);
//####glRenderMode
	GLint glRenderMode (GLenum mode)	;
//####glGenLists
	GLuint glGenLists (GLsizei range);
//####glGetUniformBlockIndex
	GLuint glGetUniformBlockIndex (GLuint program, const GLchar* uniformBlockName);
//####glMapBuffer
	GLvoid * glMapBuffer (GLenum target, GLenum access);
//####glMapBufferARB
	GLvoid * glMapBufferARB (GLenum target, GLenum access);
//####glGetString
	const GLubyte * glGetString (GLenum name);
//####glAccum
	void glAccum (GLenum op, GLfloat value);
//####glActiveStencilFaceEXT
	void glActiveStencilFaceEXT (GLenum face);
//####glAlphaFunc
	void glAlphaFunc (GLenum func, GLclampf ref);
//####glArrayElement
	void glArrayElement (GLint i);
//####glAttachObjectARB
	void glAttachObjectARB (GLhandleARB containerObj, GLhandleARB obj);
//####glBegin
	void glBegin (GLenum mode);
//####glBeginConditionalRenderNV
	void glBeginConditionalRenderNV (GLuint id, GLenum mode);
//####glBeginQueryARB
	void glBeginQueryARB (GLenum target, GLuint id);
//####glBeginTransformFeedbackEXT
	void glBeginTransformFeedbackEXT (GLenum primitiveMode);
//####glBindAttribLocation
	void glBindAttribLocation (GLuint program, GLuint index, const GLchar *name);
//####glBindAttribLocationARB
	void glBindAttribLocationARB (GLhandleARB programObj, GLuint index, const GLcharARB *name);
//####glBindBufferARB
	void glBindBufferARB (GLenum target, GLuint buffer);
//####glBindBufferBase
	void glBindBufferBase (GLenum target, GLuint index, GLuint buffer);
//####glBindBufferBaseEXT
	void glBindBufferBaseEXT (GLenum target, GLuint index, GLuint buffer);
//####glBindFragDataLocationEXT
	void glBindFragDataLocationEXT (GLuint program, GLuint colorNumber, const GLchar *name);
//####glBindFramebuffer
	void glBindFramebuffer (GLenum, GLuint);
//####glBindFramebufferEXT
	void glBindFramebufferEXT (GLenum target, GLuint framebuffer);
//####glBindProgramARB
	void glBindProgramARB (GLenum target, GLuint program);
//####glBindRenderbuffer
	void glBindRenderbuffer (GLenum, GLuint);
//####glBindRenderbufferEXT
	void glBindRenderbufferEXT (GLenum target, GLuint renderbuffer);
//####glBindTexture
	void glBindTexture (GLenum target, GLuint texture);
//####glBindVertexArrayAPPLE
	void glBindVertexArrayAPPLE (GLuint id);
//####glBitmap
	void glBitmap (GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, const GLubyte *bitmap);
//####glBlendColorEXT
	void glBlendColorEXT (GLclampf, GLclampf, GLclampf, GLclampf);
//####glBlendEquationEXT
	void glBlendEquationEXT (GLenum);
//####glBlendEquationSeparate
	void glBlendEquationSeparate (GLenum modeRGB, GLenum modeAlpha);
//####glBlendEquationSeparateATI
	void glBlendEquationSeparateATI (GLenum equationRGB, GLenum equationAlpha);
//####glBlendEquationSeparateEXT
	void glBlendEquationSeparateEXT (GLenum modeRGB, GLenum modeAlpha);
//####glBlendFunc
	void glBlendFunc (GLenum sfactor, GLenum dfactor);
//####glBlendFuncSeparate
	void glBlendFuncSeparate (GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
//####glBlendFuncSeparateEXT
	void glBlendFuncSeparateEXT (GLenum, GLenum, GLenum, GLenum);
//####glBlitFramebuffer
	void glBlitFramebuffer (GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum);
//####glBlitFramebufferEXT
	void glBlitFramebufferEXT (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
//####glBufferData
	void glBufferData (GLenum target, GLsizeiptr size, const GLvoid *data, GLenum usage);
//####glBufferDataARB
	void glBufferDataARB (GLenum target, GLsizeiptrARB size, const GLvoid *data, GLenum usage);
//####glBufferParameteriAPPLE
	void glBufferParameteriAPPLE (GLenum target, GLenum pname, GLint param);
//####glCallList
	void glCallList (GLuint list);
//####glCallLists
	void glCallLists (GLsizei n, GLenum type, const GLvoid *lists);
//####glClampColorARB
	void glClampColorARB (GLenum target, GLenum clamp);
//####glClear
	void glClear (GLbitfield mask);
//####glClearAccum
	void glClearAccum (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
//####glClearColor
	void glClearColor (GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);
//####glClearColorIiEXT
	void glClearColorIiEXT ( GLint r, GLint g, GLint b, GLint a );
//####glClearColorIuiEXT
	void glClearColorIuiEXT ( GLuint r, GLuint g, GLuint b, GLuint a );
//####glClearDepth
	void glClearDepth (GLclampd depth);
//####glClearIndex
	void glClearIndex (GLfloat c);
//####glClearStencil
	void glClearStencil (GLint s);
//####glClientActiveTextureARB
	void glClientActiveTextureARB (GLenum);
//####glClipPlane
	void glClipPlane (GLenum plane, const GLdouble *equation);
//####glColor3b
	void glColor3b (GLbyte red, GLbyte green, GLbyte blue);
//####glColor3bv
	void glColor3bv (const GLbyte *v);
//####glColor3d
	void glColor3d (GLdouble red, GLdouble green, GLdouble blue);
//####glColor3dv
	void glColor3dv (const GLdouble *v);
//####glColor3f
	void glColor3f (GLfloat red, GLfloat green, GLfloat blue);
//####glColor3fv
	void glColor3fv (const GLfloat *v);
//####glColor3i
	void glColor3i (GLint red, GLint green, GLint blue);
//####glColor3iv
	void glColor3iv (const GLint *v);
//####glColor3s
	void glColor3s (GLshort red, GLshort green, GLshort blue);
//####glColor3sv
	void glColor3sv (const GLshort *v);
//####glColor3ub
	void glColor3ub (GLubyte red, GLubyte green, GLubyte blue);
//####glColor3ubv
	void glColor3ubv (const GLubyte *v);
//####glColor3ui
	void glColor3ui (GLuint red, GLuint green, GLuint blue);
//####glColor3uiv
	void glColor3uiv (const GLuint *v);
//####glColor3us
	void glColor3us (GLushort red, GLushort green, GLushort blue);
//####glColor3usv
	void glColor3usv (const GLushort *v);
//####glColor4b
	void glColor4b (GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha);
//####glColor4bv
	void glColor4bv (const GLbyte *v);
//####glColor4d
	void glColor4d (GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha);
//####glColor4dv
	void glColor4dv (const GLdouble *v);
//####glColor4f
	void glColor4f (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
//####glColor4fv
	void glColor4fv (const GLfloat *v);
//####glColor4i
	void glColor4i (GLint red, GLint green, GLint blue, GLint alpha);
//####glColor4iv
	void glColor4iv (const GLint *v);
//####glColor4s
	void glColor4s (GLshort red, GLshort green, GLshort blue, GLshort alpha);
//####glColor4sv
	void glColor4sv (const GLshort *v);
//####glColor4ub
	void glColor4ub (GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha);
//####glColor4ubv
	void glColor4ubv (const GLubyte *v);
//####glColor4ui
	void glColor4ui (GLuint red, GLuint green, GLuint blue, GLuint alpha);
//####glColor4uiv
	void glColor4uiv (const GLuint *v);
//####glColor4us
	void glColor4us (GLushort red, GLushort green, GLushort blue, GLushort alpha);
//####glColor4usv
	void glColor4usv (const GLushort *v);
//####glColorMask
	void glColorMask (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
//####glColorMaskIndexedEXT
	void glColorMaskIndexedEXT (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
//####glColorMaterial
	void glColorMaterial (GLenum face, GLenum mode);
//####glColorPointer
	void glColorPointer (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
//####glCompileShaderARB
	void glCompileShaderARB (GLhandleARB shaderObj);
//####glCompressedTexImage1DARB
	void glCompressedTexImage1DARB (GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, const GLvoid *);
//####glCompressedTexImage2DARB
	void glCompressedTexImage2DARB (GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, const GLvoid *);
//####glCompressedTexImage3DARB
	void glCompressedTexImage3DARB (GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, const GLvoid *);
//####glCompressedTexSubImage1DARB
	void glCompressedTexSubImage1DARB (GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, const GLvoid *);
//####glCompressedTexSubImage2DARB
	void glCompressedTexSubImage2DARB (GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, const GLvoid *);
//####glCompressedTexSubImage3DARB
	void glCompressedTexSubImage3DARB (GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, const GLvoid *);
//####glCopyPixels
	void glCopyPixels (GLint x, GLint y, GLsizei width, GLsizei height, GLenum type);
//####glCopyTexImage1D
	void glCopyTexImage1D (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
//####glCopyTexImage2D
	void glCopyTexImage2D (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
//####glCopyTexSubImage1D
	void glCopyTexSubImage1D (GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
//####glCopyTexSubImage2D
	void glCopyTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
//####glCullFace
	void glCullFace (GLenum mode);
//####glDeleteBuffers
	void glDeleteBuffers (GLsizei n, const GLuint *buffers);
//####glDeleteBuffersARB
	void glDeleteBuffersARB (GLsizei n, const GLuint *buffers);
//####glDeleteFencesAPPLE
	void glDeleteFencesAPPLE (GLsizei n, const GLuint *fences);
//####glDeleteFramebuffers
	void glDeleteFramebuffers (GLsizei, const GLuint *);
//####glDeleteFramebuffersEXT
	void glDeleteFramebuffersEXT (GLsizei n, const GLuint *framebuffers);
//####glDeleteLists
	void glDeleteLists (GLuint list, GLsizei range);
//####glDeleteObjectARB
	void glDeleteObjectARB (GLhandleARB obj);
//####glDeleteProgramsARB
	void glDeleteProgramsARB (GLsizei n, const GLuint *programs);
//####glDeleteQueries
	void glDeleteQueries (GLsizei n, const GLuint *ids);
//####glDeleteQueriesARB
	void glDeleteQueriesARB (GLsizei n, const GLuint *ids);
//####glDeleteRenderbuffers
	void glDeleteRenderbuffers (GLsizei, const GLuint *);
//####glDeleteRenderbuffersEXT
	void glDeleteRenderbuffersEXT (GLsizei n, const GLuint *renderbuffers);
//####glDeleteTextures
	void glDeleteTextures (GLsizei n, const GLuint *textures);
//####glDeleteVertexArraysAPPLE
	void glDeleteVertexArraysAPPLE (GLsizei n, const GLuint *ids);
//####glDepthFunc
	void glDepthFunc (GLenum func);
//####glDepthMask
	void glDepthMask (GLboolean flag);
//####glDepthRange
	void glDepthRange (GLclampd zNear, GLclampd zFar);
//####glDetachObjectARB
	void glDetachObjectARB (GLhandleARB containerObj, GLhandleARB attachedObj);
//####glDisable
	void glDisable (GLenum cap);
//####glDisableClientState
	void glDisableClientState (GLenum array);
//####glDisableIndexedEXT
	void glDisableIndexedEXT (GLenum target, GLuint index);
//####glDisableVertexAttribAPPLE
	void glDisableVertexAttribAPPLE (GLuint index, GLenum pname);
//####glDisableVertexAttribArray
	void glDisableVertexAttribArray (GLuint index);
//####glDisableVertexAttribArrayARB
	void glDisableVertexAttribArrayARB (GLuint index);
//####glDrawArrays
	void glDrawArrays (GLenum mode, GLint first, GLsizei count);
//####glDrawArraysInstancedARB
	void glDrawArraysInstancedARB (GLenum mode, GLint first, GLsizei count, GLsizei primcount);
//####glDrawBuffer
	void glDrawBuffer (GLenum mode);
//####glDrawBuffers
	void glDrawBuffers (GLsizei n, const GLenum *bufs);
//####glDrawBuffersARB
	void glDrawBuffersARB (GLsizei n, const GLenum *bufs);
//####glDrawElementArrayAPPLE
	void glDrawElementArrayAPPLE (GLenum mode, GLint first, GLsizei count);
//####glDrawElements
	void glDrawElements (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices);
//####glDrawElementsInstancedARB
	void glDrawElementsInstancedARB (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei primcount);
//####glDrawPixels
	void glDrawPixels (GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels);
//####glDrawRangeElementArrayAPPLE
	void glDrawRangeElementArrayAPPLE (GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count);
//####glDrawRangeElementsEXT
	void glDrawRangeElementsEXT (GLenum, GLuint, GLuint, GLsizei, GLenum, const GLvoid *);
//####glEdgeFlag
	void glEdgeFlag (GLboolean flag);
//####glEdgeFlagPointer
	void glEdgeFlagPointer (GLsizei stride, const GLvoid *pointer);
//####glEdgeFlagv
	void glEdgeFlagv (const GLboolean *flag);
//####glElementPointerAPPLE
	void glElementPointerAPPLE (GLenum type, const GLvoid *pointer);
//####glEnable
	void glEnable (GLenum cap);
//####glEnableClientState
	void glEnableClientState (GLenum array);
//####glEnableIndexedEXT
	void glEnableIndexedEXT (GLenum target, GLuint index);
//####glEnableVertexAttribAPPLE
	void glEnableVertexAttribAPPLE (GLuint index, GLenum pname);
//####glEnableVertexAttribArray
	void glEnableVertexAttribArray (GLuint index);
//####glEnableVertexAttribArrayARB
	void glEnableVertexAttribArrayARB (GLuint index);
//####glEnd
	void glEnd (void);
//####glEndConditionalRenderNV
	void glEndConditionalRenderNV (void);
//####glEndList
	void glEndList (void);
//####glEndQueryARB
	void glEndQueryARB (GLenum target);
//####glEndTransformFeedbackEXT
	void glEndTransformFeedbackEXT (void);
//####glEvalCoord1d
	void glEvalCoord1d (GLdouble u);
//####glEvalCoord1dv
	void glEvalCoord1dv (const GLdouble *u);
//####glEvalCoord1f
	void glEvalCoord1f (GLfloat u);
//####glEvalCoord1fv
	void glEvalCoord1fv (const GLfloat *u);
//####glEvalCoord2d
	void glEvalCoord2d (GLdouble u, GLdouble v);
//####glEvalCoord2dv
	void glEvalCoord2dv (const GLdouble *u);
//####glEvalCoord2f
	void glEvalCoord2f (GLfloat u, GLfloat v);
//####glEvalCoord2fv
	void glEvalCoord2fv (const GLfloat *u);
//####glEvalMesh1
	void glEvalMesh1 (GLenum mode, GLint i1, GLint i2);
//####glEvalMesh2
	void glEvalMesh2 (GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2);
//####glEvalPoint1
	void glEvalPoint1 (GLint i);
//####glEvalPoint2
	void glEvalPoint2 (GLint i, GLint j);
//####glFeedbackBuffer
	void glFeedbackBuffer (GLsizei size, GLenum type, GLfloat *buffer);
//####glFinish
	void glFinish (void);
//####glFinishFenceAPPLE
	void glFinishFenceAPPLE (GLuint fence);
//####glFinishObjectAPPLE
	void glFinishObjectAPPLE (GLenum object, GLuint name);
//####glFinishRenderAPPLE
	void glFinishRenderAPPLE (void);
//####glFlush
	void glFlush (void);
//####glFlushRenderAPPLE
	void glFlushRenderAPPLE (void);
//####glFlushVertexArrayRangeAPPLE
	void glFlushVertexArrayRangeAPPLE (GLsizei length, const GLvoid *pointer);
//####glFogCoordPointerEXT
	void glFogCoordPointerEXT (GLenum, GLsizei, const GLvoid *);
//####glFogCoorddEXT
	void glFogCoorddEXT (GLdouble);
//####glFogCoorddv
	void glFogCoorddv (const GLdouble * coord);
//####glFogCoorddvEXT
	void glFogCoorddvEXT (const GLdouble *);
//####glFogCoordfEXT
	void glFogCoordfEXT (GLfloat);
//####glFogCoordfvEXT
	void glFogCoordfvEXT (const GLfloat *);
//####glFogf
	void glFogf (GLenum pname, GLfloat param);
//####glFogfv
	void glFogfv (GLenum pname, const GLfloat *params);
//####glFogi
	void glFogi (GLenum pname, GLint param);
//####glFogiv
	void glFogiv (GLenum pname, const GLint *params);
//####glFramebufferRenderbuffer
	void glFramebufferRenderbuffer (GLenum, GLenum, GLenum, GLuint);
//####glFramebufferRenderbufferEXT
	void glFramebufferRenderbufferEXT (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
//####glFramebufferTexture1D
	void glFramebufferTexture1D (GLenum, GLenum, GLenum, GLuint, GLint);
//####glFramebufferTexture1DEXT
	void glFramebufferTexture1DEXT (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
//####glFramebufferTexture2D
	void glFramebufferTexture2D (GLenum, GLenum, GLenum, GLuint, GLint);
//####glFramebufferTexture2DEXT
	void glFramebufferTexture2DEXT (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
//####glFramebufferTexture3D
	void glFramebufferTexture3D (GLenum, GLenum, GLenum, GLuint, GLint, GLint);
//####glFramebufferTexture3DEXT
	void glFramebufferTexture3DEXT (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
//####glFramebufferTextureLayer
	void glFramebufferTextureLayer (GLenum, GLenum, GLuint, GLint, GLint);
//####glFrontFace
	void glFrontFace (GLenum mode);
//####glFrustum
	void glFrustum (GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
//####glGenBuffers
	void glGenBuffers (GLsizei n, GLuint *buffers);
//####glGenBuffersARB
	void glGenBuffersARB (GLsizei n, GLuint *buffers);
//####glGenFencesAPPLE
	void glGenFencesAPPLE (GLsizei n, GLuint *fences);
//####glGenFramebuffers
	void glGenFramebuffers (GLsizei, GLuint *);
//####glGenFramebuffersEXT
	void glGenFramebuffersEXT (GLsizei n, GLuint *framebuffers);
//####glGenProgramsARB
	void glGenProgramsARB (GLsizei n, GLuint *programs);
//####glGenQueries
	void glGenQueries (GLsizei n, GLuint *ids);
//####glGenQueriesARB
	void glGenQueriesARB (GLsizei n, GLuint *ids);
//####glGenRenderbuffers
	void glGenRenderbuffers (GLsizei, GLuint *);
//####glGenRenderbuffersEXT
	void glGenRenderbuffersEXT (GLsizei n, GLuint *renderbuffers);
//####glGenTextures
	void glGenTextures (GLsizei n, GLuint *textures);
//####glGenVertexArraysAPPLE
	void glGenVertexArraysAPPLE (GLsizei n, GLuint *ids);
//####glGenerateMipmap
	void glGenerateMipmap (GLenum);
//####glGenerateMipmapEXT
	void glGenerateMipmapEXT (GLenum target);
//####glGetActiveAttrib
	void glGetActiveAttrib (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
//####glGetActiveAttribARB
	void glGetActiveAttribARB (GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name);
//####glGetActiveUniform
	void glGetActiveUniform (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
//####glGetActiveUniformARB
	void glGetActiveUniformARB (GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name);
//####glGetActiveUniformBlockName
	void glGetActiveUniformBlockName (GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei* length, GLchar* uniformBlockName);
//####glGetActiveUniformBlockiv
	void glGetActiveUniformBlockiv (GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint* params);
//####glGetActiveUniformName
	void glGetActiveUniformName (GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei* length, GLchar* uniformName);
//####glGetActiveUniformsiv
	void glGetActiveUniformsiv (GLuint program, GLsizei uniformCount, const GLuint* uniformIndices, GLenum pname, GLint* params);
//####glGetAttachedObjectsARB
	void glGetAttachedObjectsARB (GLhandleARB containerObj, GLsizei maxCount, GLsizei *count, GLhandleARB *obj);
//####glGetAttachedShaders
	void glGetAttachedShaders (GLuint program, GLsizei maxCount, GLsizei *count, GLuint *shaders);
//####glGetBooleanIndexedvEXT
	void glGetBooleanIndexedvEXT (GLenum param, GLuint index, GLboolean *values);
//####glGetBooleanv
	void glGetBooleanv (GLenum pname, GLboolean *params);
//####glGetBufferParameteriv
	void glGetBufferParameteriv (GLenum target, GLenum pname, GLint *params);
//####glGetBufferParameterivARB
	void glGetBufferParameterivARB (GLenum target, GLenum pname, GLint *params);
//####glGetBufferPointerv
	void glGetBufferPointerv (GLenum target, GLenum pname, GLvoid **params);
//####glGetBufferPointervARB
	void glGetBufferPointervARB (GLenum target, GLenum pname, GLvoid **params);
//####glGetClipPlane
	void glGetClipPlane (GLenum plane, GLdouble *equation);
//####glGetCompressedTexImageARB
	void glGetCompressedTexImageARB (GLenum, GLint, GLvoid *);
//####glGetDoublev
	void glGetDoublev (GLenum pname, GLdouble *params);
//####glGetFloatv
	void glGetFloatv (GLenum pname, GLfloat *params);
//####glGetFramebufferAttachmentParameteriv
	void glGetFramebufferAttachmentParameteriv (GLenum, GLenum, GLenum, GLint *);
//####glGetFramebufferAttachmentParameterivEXT
	void glGetFramebufferAttachmentParameterivEXT (GLenum target, GLenum attachment, GLenum pname, GLint *params);
//####glGetInfoLogARB
	void glGetInfoLogARB (GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *infoLog);
//####glGetIntegerIndexedvEXT
	void glGetIntegerIndexedvEXT (GLenum param, GLuint index, GLint *values);
//####glGetIntegeri_v
	void glGetIntegeri_v (GLenum pname, GLuint index, GLint* data);
//####glGetIntegerv
	void glGetIntegerv (GLenum pname, GLint *params);
//####glGetLightfv
	void glGetLightfv (GLenum light, GLenum pname, GLfloat *params);
//####glGetLightiv
	void glGetLightiv (GLenum light, GLenum pname, GLint *params);
//####glGetMapdv
	void glGetMapdv (GLenum target, GLenum query, GLdouble *v);
//####glGetMapfv
	void glGetMapfv (GLenum target, GLenum query, GLfloat *v);
//####glGetMapiv
	void glGetMapiv (GLenum target, GLenum query, GLint *v);
//####glGetMaterialfv
	void glGetMaterialfv (GLenum face, GLenum pname, GLfloat *params);
//####glGetMaterialiv
	void glGetMaterialiv (GLenum face, GLenum pname, GLint *params);
//####glGetMinmax
	void glGetMinmax (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);
//####glGetObjectParameterfvARB
	void glGetObjectParameterfvARB (GLhandleARB obj, GLenum pname, GLfloat *params);
//####glGetObjectParameterivAPPLE
	void glGetObjectParameterivAPPLE (GLenum objectType, GLuint name, GLenum pname, GLint* params);
//####glGetObjectParameterivARB
	void glGetObjectParameterivARB (GLhandleARB obj, GLenum pname, GLint *params);
//####glGetPixelMapfv
	void glGetPixelMapfv (GLenum map, GLfloat *values);
//####glGetPixelMapuiv
	void glGetPixelMapuiv (GLenum map, GLuint *values);
//####glGetPixelMapusv
	void glGetPixelMapusv (GLenum map, GLushort *values);
//####glGetPointerv
	void glGetPointerv (GLenum pname, GLvoid* *params);
//####glGetPolygonStipple
	void glGetPolygonStipple (GLubyte *mask);
//####glGetProgramEnvParameterdvARB
	void glGetProgramEnvParameterdvARB (GLenum target, GLuint index, GLdouble *params);
//####glGetProgramEnvParameterfvARB
	void glGetProgramEnvParameterfvARB (GLenum target, GLuint index, GLfloat *params);
//####glGetProgramInfoLog
	void glGetProgramInfoLog (GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
//####glGetProgramLocalParameterdvARB
	void glGetProgramLocalParameterdvARB (GLenum target, GLuint index, GLdouble *params);
//####glGetProgramLocalParameterfvARB
	void glGetProgramLocalParameterfvARB (GLenum target, GLuint index, GLfloat *params);
//####glGetProgramStringARB
	void glGetProgramStringARB (GLenum target, GLenum pname, GLvoid *string);
//####glGetProgramiv
	void glGetProgramiv (GLuint program, GLenum pname, GLint *params);
//####glGetProgramivARB
	void glGetProgramivARB (GLenum target, GLenum pname, GLint *params);
//####glGetQueryObjectiv
	void glGetQueryObjectiv (GLuint id, GLenum pname, GLint *params);
//####glGetQueryObjectivARB
	void glGetQueryObjectivARB (GLuint id, GLenum pname, GLint *params);
//####glGetQueryObjectuiv
	void glGetQueryObjectuiv (GLuint id, GLenum pname, GLuint *params);
//####glGetQueryObjectuivARB
	void glGetQueryObjectuivARB (GLuint id, GLenum pname, GLuint *params);
//####glGetQueryiv
	void glGetQueryiv (GLenum target, GLenum pname, GLint *params);
//####glGetQueryivARB
	void glGetQueryivARB (GLenum target, GLenum pname, GLint *params);
//####glGetRenderbufferParameteriv
	void glGetRenderbufferParameteriv (GLenum, GLenum, GLint *);
//####glGetRenderbufferParameterivEXT
	void glGetRenderbufferParameterivEXT (GLenum target, GLenum pname, GLint *params);
//####glGetSeparableFilter
	void glGetSeparableFilter (GLenum target, GLenum format, GLenum type, GLvoid *row, GLvoid *column, GLvoid *span);
//####glGetShaderInfoLog
	void glGetShaderInfoLog (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
//####glGetShaderSource
	void glGetShaderSource (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source);
//####glGetShaderSourceARB
	void glGetShaderSourceARB (GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *source);
//####glGetShaderiv
	void glGetShaderiv (GLuint shader, GLenum pname, GLint *params);
//####glGetTexEnvfv
	void glGetTexEnvfv (GLenum target, GLenum pname, GLfloat *params);
//####glGetTexEnviv
	void glGetTexEnviv (GLenum target, GLenum pname, GLint *params);
//####glGetTexGendv
	void glGetTexGendv (GLenum coord, GLenum pname, GLdouble *params);
//####glGetTexGenfv
	void glGetTexGenfv (GLenum coord, GLenum pname, GLfloat *params);
//####glGetTexGeniv
	void glGetTexGeniv (GLenum coord, GLenum pname, GLint *params);
//####glGetTexImage
	void glGetTexImage (GLenum target, GLint level, GLenum format, GLenum type, GLvoid *pixels);
//####glGetTexLevelParameterfv
	void glGetTexLevelParameterfv (GLenum target, GLint level, GLenum pname, GLfloat *params);
//####glGetTexLevelParameteriv
	void glGetTexLevelParameteriv (GLenum target, GLint level, GLenum pname, GLint *params);
//####glGetTexParameterIivEXT
	void glGetTexParameterIivEXT ( GLenum target, GLenum pname, GLint *params);
//####glGetTexParameterIuivEXT
	void glGetTexParameterIuivEXT ( GLenum target, GLenum pname, GLuint *params);
//####glGetTexParameterfv
	void glGetTexParameterfv (GLenum target, GLenum pname, GLfloat *params);
//####glGetTexParameteriv
	void glGetTexParameteriv (GLenum target, GLenum pname, GLint *params);
//####glGetTransformFeedbackVaryingEXT
	void glGetTransformFeedbackVaryingEXT (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
//####glGetUniformIndices
	void glGetUniformIndices (GLuint program, GLsizei uniformCount, const GLchar** uniformNames, GLuint* uniformIndices);
//####glGetUniformfv
	void glGetUniformfv (GLuint program, GLint location, GLfloat *params);
//####glGetUniformfvARB
	void glGetUniformfvARB (GLhandleARB programObj, GLint location, GLfloat *params);
//####glGetUniformiv
	void glGetUniformiv (GLuint program, GLint location, GLint *params);
//####glGetUniformivARB
	void glGetUniformivARB (GLhandleARB programObj, GLint location, GLint *params);
//####glGetVertexAttribPointerv
	void glGetVertexAttribPointerv (GLuint index, GLenum pname, GLvoid* *pointer);
//####glGetVertexAttribPointervARB
	void glGetVertexAttribPointervARB (GLuint index, GLenum pname, GLvoid **pointer);
//####glGetVertexAttribdv
	void glGetVertexAttribdv (GLuint index, GLenum pname, GLdouble *params);
//####glGetVertexAttribdvARB
	void glGetVertexAttribdvARB (GLuint index, GLenum pname, GLdouble *params);
//####glGetVertexAttribfv
	void glGetVertexAttribfv (GLuint index, GLenum pname, GLfloat *params);
//####glGetVertexAttribfvARB
	void glGetVertexAttribfvARB (GLuint index, GLenum pname, GLfloat *params);
//####glGetVertexAttribiv
	void glGetVertexAttribiv (GLuint index, GLenum pname, GLint *params);
//####glGetVertexAttribivARB
	void glGetVertexAttribivARB (GLuint index, GLenum pname, GLint *params);
//####glHint
	void glHint (GLenum target, GLenum mode);
//####glIndexMask
	void glIndexMask (GLuint mask);
//####glIndexPointer
	void glIndexPointer (GLenum type, GLsizei stride, const GLvoid *pointer);
//####glIndexd
	void glIndexd (GLdouble c);
//####glIndexdv
	void glIndexdv (const GLdouble *c);
//####glIndexf
	void glIndexf (GLfloat c);
//####glIndexfv
	void glIndexfv (const GLfloat *c);
//####glIndexi
	void glIndexi (GLint c);
//####glIndexiv
	void glIndexiv (const GLint *c);
//####glIndexs
	void glIndexs (GLshort c);
//####glIndexsv
	void glIndexsv (const GLshort *c);
//####glIndexub
	void glIndexub (GLubyte c);
//####glIndexubv
	void glIndexubv (const GLubyte *c);
//####glInitNames
	void glInitNames (void);
//####glInterleavedArrays
	void glInterleavedArrays (GLenum format, GLsizei stride, const GLvoid *pointer);
//####glLightModelf
	void glLightModelf (GLenum pname, GLfloat param);
//####glLightModelfv
	void glLightModelfv (GLenum pname, const GLfloat *params);
//####glLightModeli
	void glLightModeli (GLenum pname, GLint param);
//####glLightModeliv
	void glLightModeliv (GLenum pname, const GLint *params);
//####glLightf
	void glLightf (GLenum light, GLenum pname, GLfloat param);
//####glLightfv
	void glLightfv (GLenum light, GLenum pname, const GLfloat *params);
//####glLighti
	void glLighti (GLenum light, GLenum pname, GLint param);
//####glLightiv
	void glLightiv (GLenum light, GLenum pname, const GLint *params);
//####glLineStipple
	void glLineStipple (GLint factor, GLushort pattern);
//####glLineWidth
	void glLineWidth (GLfloat width);
//####glLinkProgramARB
	void glLinkProgramARB (GLhandleARB programObj);
//####glListBase
	void glListBase (GLuint base);
//####glLoadIdentity
	void glLoadIdentity (void);
//####glLoadMatrixd
	void glLoadMatrixd (const GLdouble *m);
//####glLoadMatrixf
	void glLoadMatrixf (const GLfloat *m);
//####glLoadName
	void glLoadName (GLuint name);
//####glLoadTransposeMatrixd
	void glLoadTransposeMatrixd (const GLdouble *m);
//####glLoadTransposeMatrixdARB
	void glLoadTransposeMatrixdARB (const GLdouble *);
//####glLoadTransposeMatrixf
	void glLoadTransposeMatrixf (const GLfloat *m);
//####glLoadTransposeMatrixfARB
	void glLoadTransposeMatrixfARB (const GLfloat *);
//####glLockArraysEXT
	void glLockArraysEXT (GLint, GLsizei);
//####glLogicOp
	void glLogicOp (GLenum opcode);
//####glMap1d
	void glMap1d (GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble *points);
//####glMap1f
	void glMap1f (GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points);
//####glMap2d
	void glMap2d (GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble *points);
//####glMap2f
	void glMap2f (GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points);
//####glMapGrid1d
	void glMapGrid1d (GLint un, GLdouble u1, GLdouble u2);
//####glMapGrid1f
	void glMapGrid1f (GLint un, GLfloat u1, GLfloat u2);
//####glMapGrid2d
	void glMapGrid2d (GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2);
//####glMapGrid2f
	void glMapGrid2f (GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2);
//####glMapVertexAttrib1dAPPLE
	void glMapVertexAttrib1dAPPLE (GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble *points);
//####glMapVertexAttrib1fAPPLE
	void glMapVertexAttrib1fAPPLE (GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points);
//####glMapVertexAttrib2dAPPLE
	void glMapVertexAttrib2dAPPLE (GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble *points);
//####glMapVertexAttrib2fAPPLE
	void glMapVertexAttrib2fAPPLE (GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points);
//####glMaterialf
	void glMaterialf (GLenum face, GLenum pname, GLfloat param);
//####glMaterialfv
	void glMaterialfv (GLenum face, GLenum pname, const GLfloat *params);
//####glMateriali
	void glMateriali (GLenum face, GLenum pname, GLint param);
//####glMaterialiv
	void glMaterialiv (GLenum face, GLenum pname, const GLint *params);
//####glMatrixMode
	void glMatrixMode (GLenum mode);
//####glMinmax
	void glMinmax (GLenum target, GLenum internalformat, GLboolean sink);
//####glMultMatrixd
	void glMultMatrixd (const GLdouble *m);
//####glMultMatrixf
	void glMultMatrixf (const GLfloat *m);
//####glMultTransposeMatrixd
	void glMultTransposeMatrixd (const GLdouble *m);
//####glMultTransposeMatrixdARB
	void glMultTransposeMatrixdARB (const GLdouble *);
//####glMultTransposeMatrixf
	void glMultTransposeMatrixf (const GLfloat *m);
//####glMultTransposeMatrixfARB
	void glMultTransposeMatrixfARB (const GLfloat *);
//####glMultiDrawArrays
	void glMultiDrawArrays (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);
//####glMultiDrawArraysEXT
	void glMultiDrawArraysEXT (GLenum, const GLint *, const GLsizei *, GLsizei);
//####glMultiDrawElementArrayAPPLE
	void glMultiDrawElementArrayAPPLE (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);
//####glMultiDrawElements
	void glMultiDrawElements (GLenum mode, const GLsizei *count, GLenum type, const GLvoid* *indices, GLsizei primcount);
//####glMultiDrawElementsEXT
	void glMultiDrawElementsEXT (GLenum, const GLsizei *, GLenum, const GLvoid* *, GLsizei);
//####glMultiDrawRangeElementArrayAPPLE
	void glMultiDrawRangeElementArrayAPPLE (GLenum mode, GLuint start, GLuint end, const GLint *first, const GLsizei *count, GLsizei primcount);
//####glMultiTexCoord1dARB
	void glMultiTexCoord1dARB (GLenum, GLdouble);
//####glMultiTexCoord1dvARB
	void glMultiTexCoord1dvARB (GLenum, const GLdouble *);
//####glMultiTexCoord1fARB
	void glMultiTexCoord1fARB (GLenum, GLfloat);
//####glMultiTexCoord1fvARB
	void glMultiTexCoord1fvARB (GLenum, const GLfloat *);
//####glMultiTexCoord1iARB
	void glMultiTexCoord1iARB (GLenum, GLint);
//####glMultiTexCoord1ivARB
	void glMultiTexCoord1ivARB (GLenum, const GLint *);
//####glMultiTexCoord1sARB
	void glMultiTexCoord1sARB (GLenum, GLshort);
//####glMultiTexCoord1svARB
	void glMultiTexCoord1svARB (GLenum, const GLshort *);
//####glMultiTexCoord2dARB
	void glMultiTexCoord2dARB (GLenum, GLdouble, GLdouble);
//####glMultiTexCoord2dvARB
	void glMultiTexCoord2dvARB (GLenum, const GLdouble *);
//####glMultiTexCoord2fARB
	void glMultiTexCoord2fARB (GLenum, GLfloat, GLfloat);
//####glMultiTexCoord2fvARB
	void glMultiTexCoord2fvARB (GLenum, const GLfloat *);
//####glMultiTexCoord2iARB
	void glMultiTexCoord2iARB (GLenum, GLint, GLint);
//####glMultiTexCoord2ivARB
	void glMultiTexCoord2ivARB (GLenum, const GLint *);
//####glMultiTexCoord2sARB
	void glMultiTexCoord2sARB (GLenum, GLshort, GLshort);
//####glMultiTexCoord2svARB
	void glMultiTexCoord2svARB (GLenum, const GLshort *);
//####glMultiTexCoord3dARB
	void glMultiTexCoord3dARB (GLenum, GLdouble, GLdouble, GLdouble);
//####glMultiTexCoord3dvARB
	void glMultiTexCoord3dvARB (GLenum, const GLdouble *);
//####glMultiTexCoord3fARB
	void glMultiTexCoord3fARB (GLenum, GLfloat, GLfloat, GLfloat);
//####glMultiTexCoord3fvARB
	void glMultiTexCoord3fvARB (GLenum, const GLfloat *);
//####glMultiTexCoord3iARB
	void glMultiTexCoord3iARB (GLenum, GLint, GLint, GLint);
//####glMultiTexCoord3ivARB
	void glMultiTexCoord3ivARB (GLenum, const GLint *);
//####glMultiTexCoord3sARB
	void glMultiTexCoord3sARB (GLenum, GLshort, GLshort, GLshort);
//####glMultiTexCoord3svARB
	void glMultiTexCoord3svARB (GLenum, const GLshort *);
//####glMultiTexCoord4dARB
	void glMultiTexCoord4dARB (GLenum, GLdouble, GLdouble, GLdouble, GLdouble);
//####glMultiTexCoord4dvARB
	void glMultiTexCoord4dvARB (GLenum, const GLdouble *);
//####glMultiTexCoord4fARB
	void glMultiTexCoord4fARB (GLenum, GLfloat, GLfloat, GLfloat, GLfloat);
//####glMultiTexCoord4fvARB
	void glMultiTexCoord4fvARB (GLenum, const GLfloat *);
//####glMultiTexCoord4i
	void glMultiTexCoord4i (GLenum target, GLint, GLint s, GLint t, GLint r);
//####glMultiTexCoord4iARB
	void glMultiTexCoord4iARB (GLenum, GLint, GLint, GLint, GLint);
//####glMultiTexCoord4ivARB
	void glMultiTexCoord4ivARB (GLenum, const GLint *);
//####glMultiTexCoord4sARB
	void glMultiTexCoord4sARB (GLenum, GLshort, GLshort, GLshort, GLshort);
//####glMultiTexCoord4svARB
	void glMultiTexCoord4svARB (GLenum, const GLshort *);
//####glNewList
	void glNewList (GLuint list, GLenum mode);
//####glNormal3b
	void glNormal3b (GLbyte nx, GLbyte ny, GLbyte nz);
//####glNormal3bv
	void glNormal3bv (const GLbyte *v);
//####glNormal3d
	void glNormal3d (GLdouble nx, GLdouble ny, GLdouble nz);
//####glNormal3dv
	void glNormal3dv (const GLdouble *v);
//####glNormal3f
	void glNormal3f (GLfloat nx, GLfloat ny, GLfloat nz);
//####glNormal3fv
	void glNormal3fv (const GLfloat *v);
//####glNormal3i
	void glNormal3i (GLint nx, GLint ny, GLint nz);
//####glNormal3iv
	void glNormal3iv (const GLint *v);
//####glNormal3s
	void glNormal3s (GLshort nx, GLshort ny, GLshort nz);
//####glNormal3sv
	void glNormal3sv (const GLshort *v);
//####glNormalPointer
	void glNormalPointer (GLenum type, GLsizei stride, const GLvoid *pointer);
//####glOrtho
	void glOrtho (GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
//####glPNTrianglesfATIX
	void glPNTrianglesfATIX (GLenum pname, GLfloat param);
//####glPNTrianglesiATIX
	void glPNTrianglesiATIX (GLenum pname, GLint param);
//####glPassThrough
	void glPassThrough (GLfloat token);
//####glPixelMapfv
	void glPixelMapfv (GLenum map, GLint mapsize, const GLfloat *values);
//####glPixelMapuiv
	void glPixelMapuiv (GLenum map, GLint mapsize, const GLuint *values);
//####glPixelMapusv
	void glPixelMapusv (GLenum map, GLint mapsize, const GLushort *values);
//####glPixelStoref
	void glPixelStoref (GLenum pname, GLfloat param);
//####glPixelStorei
	void glPixelStorei (GLenum pname, GLint param);
//####glPixelTransferf
	void glPixelTransferf (GLenum pname, GLfloat param);
//####glPixelTransferi
	void glPixelTransferi (GLenum pname, GLint param);
//####glPixelZoom
	void glPixelZoom (GLfloat xfactor, GLfloat yfactor);
//####glPointParameterfvARB
	void glPointParameterfvARB (GLenum pname, const GLfloat *params);
//####glPointParameteriNV
	void glPointParameteriNV (GLenum pname, GLint param);
//####glPointParameterivNV
	void glPointParameterivNV (GLenum pname, const GLint *params);
//####glPointSize
	void glPointSize (GLfloat size);
//####glPolygonMode
	void glPolygonMode (GLenum face, GLenum mode);
//####glPolygonOffset
	void glPolygonOffset (GLfloat factor, GLfloat units);
//####glPolygonStipple
	void glPolygonStipple (const GLubyte *mask);
//####glPopAttrib
	void glPopAttrib (void);
//####glPopClientAttrib
	void glPopClientAttrib (void);
//####glPopMatrix
	void glPopMatrix (void);
//####glPopName
	void glPopName (void);
//####glPrioritizeTextures
	void glPrioritizeTextures (GLsizei n, const GLuint *textures, const GLclampf *priorities);
//####glProgramEnvParameter4dARB
	void glProgramEnvParameter4dARB (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
//####glProgramEnvParameter4dvARB
	void glProgramEnvParameter4dvARB (GLenum target, GLuint index, const GLdouble *params);
//####glProgramEnvParameter4fARB
	void glProgramEnvParameter4fARB (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
//####glProgramEnvParameter4fvARB
	void glProgramEnvParameter4fvARB (GLenum target, GLuint index, const GLfloat *params);
//####glProgramEnvParameters4fvEXT
	void glProgramEnvParameters4fvEXT (GLenum target, GLuint index, GLsizei count, const GLfloat *params);
//####glProgramLocalParameter4dARB
	void glProgramLocalParameter4dARB (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
//####glProgramLocalParameter4dvARB
	void glProgramLocalParameter4dvARB (GLenum target, GLuint index, const GLdouble *params);
//####glProgramLocalParameter4fARB
	void glProgramLocalParameter4fARB (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
//####glProgramLocalParameter4fvARB
	void glProgramLocalParameter4fvARB (GLenum target, GLuint index, const GLfloat *params);
//####glProgramLocalParameters4fvEXT
	void glProgramLocalParameters4fvEXT (GLenum target, GLuint index, GLsizei count, const GLfloat *params);
//####glProgramStringARB
	void glProgramStringARB (GLenum target, GLenum format, GLsizei len, const GLvoid *string);
//####glProvokingVertexEXT
	void glProvokingVertexEXT (GLenum mode);
//####glPushAttrib
	void glPushAttrib (GLbitfield mask);
//####glPushClientAttrib
	void glPushClientAttrib (GLbitfield mask);
//####glPushMatrix
	void glPushMatrix (void);
//####glPushName
	void glPushName (GLuint name);
//####glRasterPos2d
	void glRasterPos2d (GLdouble x, GLdouble y);
//####glRasterPos2dv
	void glRasterPos2dv (const GLdouble *v);
//####glRasterPos2f
	void glRasterPos2f (GLfloat x, GLfloat y);
//####glRasterPos2fv
	void glRasterPos2fv (const GLfloat *v);
//####glRasterPos2i
	void glRasterPos2i (GLint x, GLint y);
//####glRasterPos2iv
	void glRasterPos2iv (const GLint *v);
//####glRasterPos2s
	void glRasterPos2s (GLshort x, GLshort y);
//####glRasterPos2sv
	void glRasterPos2sv (const GLshort *v);
//####glRasterPos3d
	void glRasterPos3d (GLdouble x, GLdouble y, GLdouble z);
//####glRasterPos3dv
	void glRasterPos3dv (const GLdouble *v);
//####glRasterPos3f
	void glRasterPos3f (GLfloat x, GLfloat y, GLfloat z);
//####glRasterPos3fv
	void glRasterPos3fv (const GLfloat *v);
//####glRasterPos3i
	void glRasterPos3i (GLint x, GLint y, GLint z);
//####glRasterPos3iv
	void glRasterPos3iv (const GLint *v);
//####glRasterPos3s
	void glRasterPos3s (GLshort x, GLshort y, GLshort z);
//####glRasterPos3sv
	void glRasterPos3sv (const GLshort *v);
//####glRasterPos4d
	void glRasterPos4d (GLdouble x, GLdouble y, GLdouble z, GLdouble w);
//####glRasterPos4dv
	void glRasterPos4dv (const GLdouble *v);
//####glRasterPos4f
	void glRasterPos4f (GLfloat x, GLfloat y, GLfloat z, GLfloat w);
//####glRasterPos4fv
	void glRasterPos4fv (const GLfloat *v);
//####glRasterPos4i
	void glRasterPos4i (GLint x, GLint y, GLint z, GLint w);
//####glRasterPos4iv
	void glRasterPos4iv (const GLint *v);
//####glRasterPos4s
	void glRasterPos4s (GLshort x, GLshort y, GLshort z, GLshort w);
//####glRasterPos4sv
	void glRasterPos4sv (const GLshort *v);
//####glReadBuffer
	void glReadBuffer (GLenum mode);
//####glReadPixels
	void glReadPixels (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid *pixels);
//####glRectd
	void glRectd (GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2);
//####glRectdv
	void glRectdv (const GLdouble *v1, const GLdouble *v2);
//####glRectf
	void glRectf (GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2);
//####glRectfv
	void glRectfv (const GLfloat *v1, const GLfloat *v2);
//####glRecti
	void glRecti (GLint x1, GLint y1, GLint x2, GLint y2);
//####glRectiv
	void glRectiv (const GLint *v1, const GLint *v2);
//####glRects
	void glRects (GLshort x1, GLshort y1, GLshort x2, GLshort y2);
//####glRectsv
	void glRectsv (const GLshort *v1, const GLshort *v2);
//####glRenderbufferStorage
	void glRenderbufferStorage (GLenum, GLenum, GLsizei, GLsizei);
//####glRenderbufferStorageEXT
	void glRenderbufferStorageEXT (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
//####glRenderbufferStorageMultisample
	void glRenderbufferStorageMultisample (GLenum, GLsizei, GLenum, GLsizei, GLsizei);
//####glRenderbufferStorageMultisampleEXT
	void glRenderbufferStorageMultisampleEXT (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
//####glRotated
	void glRotated (GLdouble angle, GLdouble x, GLdouble y, GLdouble z);
//####glRotatef
	void glRotatef (GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
//####glSampleCoverageARB
	void glSampleCoverageARB (GLclampf, GLboolean);
//####glSamplePass
	void glSamplePass (GLenum pass);
//####glSamplePassARB
	void glSamplePassARB (GLenum);
//####glScaled
	void glScaled (GLdouble x, GLdouble y, GLdouble z);
//####glScalef
	void glScalef (GLfloat x, GLfloat y, GLfloat z);
//####glScissor
	void glScissor (GLint x, GLint y, GLsizei width, GLsizei height);
//####glSecondaryColor3bEXT
	void glSecondaryColor3bEXT (GLbyte, GLbyte, GLbyte);
//####glSecondaryColor3bvEXT
	void glSecondaryColor3bvEXT (const GLbyte *);
//####glSecondaryColor3dEXT
	void glSecondaryColor3dEXT (GLdouble, GLdouble, GLdouble);
//####glSecondaryColor3dvEXT
	void glSecondaryColor3dvEXT (const GLdouble *);
//####glSecondaryColor3fEXT
	void glSecondaryColor3fEXT (GLfloat, GLfloat, GLfloat);
//####glSecondaryColor3fvEXT
	void glSecondaryColor3fvEXT (const GLfloat *);
//####glSecondaryColor3iEXT
	void glSecondaryColor3iEXT (GLint, GLint, GLint);
//####glSecondaryColor3ivEXT
	void glSecondaryColor3ivEXT (const GLint *);
//####glSecondaryColor3sEXT
	void glSecondaryColor3sEXT (GLshort, GLshort, GLshort);
//####glSecondaryColor3svEXT
	void glSecondaryColor3svEXT (const GLshort *);
//####glSecondaryColor3ubEXT
	void glSecondaryColor3ubEXT (GLubyte, GLubyte, GLubyte);
//####glSecondaryColor3ubvEXT
	void glSecondaryColor3ubvEXT (const GLubyte *);
//####glSecondaryColor3uiEXT
	void glSecondaryColor3uiEXT (GLuint, GLuint, GLuint);
//####glSecondaryColor3uivEXT
	void glSecondaryColor3uivEXT (const GLuint *);
//####glSecondaryColor3usEXT
	void glSecondaryColor3usEXT (GLushort, GLushort, GLushort);
//####glSecondaryColor3usvEXT
	void glSecondaryColor3usvEXT (const GLushort *);
//####glSecondaryColorPointer
	void glSecondaryColorPointer (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
//####glSecondaryColorPointerEXT
	void glSecondaryColorPointerEXT (GLint, GLenum, GLsizei, const GLvoid *);
//####glSelectBuffer
	void glSelectBuffer (GLsizei size, GLuint *buffer);
//####glSetFenceAPPLE
	void glSetFenceAPPLE (GLuint fence);
//####glShadeModel
	void glShadeModel (GLenum mode);
//####glShaderSource
	void glShaderSource (GLuint shader, GLsizei count, const GLchar* *string, const GLint *length);
//####glShaderSourceARB
	void glShaderSourceARB (GLhandleARB shaderObj, GLsizei count, const GLcharARB **string, const GLint *length);
//####glStencilFunc
	void glStencilFunc (GLenum func, GLint ref, GLuint mask);
//####glStencilFuncSeparate
	void glStencilFuncSeparate (GLenum face, GLenum func, GLint ref, GLuint mask);
//####glStencilMask
	void glStencilMask (GLuint mask);
//####glStencilMaskSeparate
	void glStencilMaskSeparate (GLenum face, GLuint mask);
//####glStencilOp
	void glStencilOp (GLenum fail, GLenum zfail, GLenum zpass);
//####glStencilOpSeparate
	void glStencilOpSeparate (GLenum face, GLenum fail, GLenum zfail, GLenum zpass);
//####glSwapAPPLE
	void glSwapAPPLE (void);
//####glTexCoord1d
	void glTexCoord1d (GLdouble s);
//####glTexCoord1dv
	void glTexCoord1dv (const GLdouble *v);
//####glTexCoord1f
	void glTexCoord1f (GLfloat s);
//####glTexCoord1fv
	void glTexCoord1fv (const GLfloat *v);
//####glTexCoord1i
	void glTexCoord1i (GLint s);
//####glTexCoord1iv
	void glTexCoord1iv (const GLint *v);
//####glTexCoord1s
	void glTexCoord1s (GLshort s);
//####glTexCoord1sv
	void glTexCoord1sv (const GLshort *v);
//####glTexCoord2d
	void glTexCoord2d (GLdouble s, GLdouble t);
//####glTexCoord2dv
	void glTexCoord2dv (const GLdouble *v);
//####glTexCoord2f
	void glTexCoord2f (GLfloat s, GLfloat t);
//####glTexCoord2fv
	void glTexCoord2fv (const GLfloat *v);
//####glTexCoord2i
	void glTexCoord2i (GLint s, GLint t);
//####glTexCoord2iv
	void glTexCoord2iv (const GLint *v);
//####glTexCoord2s
	void glTexCoord2s (GLshort s, GLshort t);
//####glTexCoord2sv
	void glTexCoord2sv (const GLshort *v);
//####glTexCoord3d
	void glTexCoord3d (GLdouble s, GLdouble t, GLdouble r);
//####glTexCoord3dv
	void glTexCoord3dv (const GLdouble *v);
//####glTexCoord3f
	void glTexCoord3f (GLfloat s, GLfloat t, GLfloat r);
//####glTexCoord3fv
	void glTexCoord3fv (const GLfloat *v);
//####glTexCoord3i
	void glTexCoord3i (GLint s, GLint t, GLint r);
//####glTexCoord3iv
	void glTexCoord3iv (const GLint *v);
//####glTexCoord3s
	void glTexCoord3s (GLshort s, GLshort t, GLshort r);
//####glTexCoord3sv
	void glTexCoord3sv (const GLshort *v);
//####glTexCoord4d
	void glTexCoord4d (GLdouble s, GLdouble t, GLdouble r, GLdouble q);
//####glTexCoord4dv
	void glTexCoord4dv (const GLdouble *v);
//####glTexCoord4f
	void glTexCoord4f (GLfloat s, GLfloat t, GLfloat r, GLfloat q);
//####glTexCoord4fv
	void glTexCoord4fv (const GLfloat *v);
//####glTexCoord4i
	void glTexCoord4i (GLint s, GLint t, GLint r, GLint q);
//####glTexCoord4iv
	void glTexCoord4iv (const GLint *v);
//####glTexCoord4s
	void glTexCoord4s (GLshort s, GLshort t, GLshort r, GLshort q);
//####glTexCoord4sv
	void glTexCoord4sv (const GLshort *v);
//####glTexCoordPointer
	void glTexCoordPointer (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
//####glTexEnvf
	void glTexEnvf (GLenum target, GLenum pname, GLfloat param);
//####glTexEnvfv
	void glTexEnvfv (GLenum target, GLenum pname, const GLfloat *params);
//####glTexEnvi
	void glTexEnvi (GLenum target, GLenum pname, GLint param);
//####glTexEnviv
	void glTexEnviv (GLenum target, GLenum pname, const GLint *params);
//####glTexGend
	void glTexGend (GLenum coord, GLenum pname, GLdouble param);
//####glTexGendv
	void glTexGendv (GLenum coord, GLenum pname, const GLdouble *params);
//####glTexGenf
	void glTexGenf (GLenum coord, GLenum pname, GLfloat param);
//####glTexGenfv
	void glTexGenfv (GLenum coord, GLenum pname, const GLfloat *params);
//####glTexGeni
	void glTexGeni (GLenum coord, GLenum pname, GLint param);
//####glTexGeniv
	void glTexGeniv (GLenum coord, GLenum pname, const GLint *params);
//####glTexImage1D
	void glTexImage1D (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const GLvoid *pixels);
//####glTexImage2D
	void glTexImage2D (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels);
//####glTexImage3D
	void glTexImage3D (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels);
//####glTexParameterIivEXT
	void glTexParameterIivEXT ( GLenum target, GLenum pname, GLint *params );
//####glTexParameterIuivEXT
	void glTexParameterIuivEXT ( GLenum target, GLenum pname, GLuint *params );
//####glTexParameterf
	void glTexParameterf (GLenum target, GLenum pname, GLfloat param);
//####glTexParameterfv
	void glTexParameterfv (GLenum target, GLenum pname, const GLfloat *params);
//####glTexParameteri
	void glTexParameteri (GLenum target, GLenum pname, GLint param);
//####glTexParameteriv
	void glTexParameteriv (GLenum target, GLenum pname, const GLint *params);
//####glTexSubImage1D
	void glTexSubImage1D (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid *pixels);
//####glTexSubImage2D
	void glTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels);
//####glTextureRangeAPPLE
	void glTextureRangeAPPLE (GLenum target, GLsizei length, const GLvoid *pointer);
//####glTransformFeedbackVaryingsEXT
	void glTransformFeedbackVaryingsEXT (GLuint program, GLsizei count, const GLchar **varyings, GLenum bufferMode);
//####glTranslated
	void glTranslated (GLdouble x, GLdouble y, GLdouble z);
//####glTranslatef
	void glTranslatef (GLfloat x, GLfloat y, GLfloat z);
//####glUniform1fARB
	void glUniform1fARB (GLint location, GLfloat v0);
//####glUniform1fv
	void glUniform1fv (GLint location, GLsizei count, const GLfloat *value);
//####glUniform1fvARB
	void glUniform1fvARB (GLint location, GLsizei count, const GLfloat *value);
//####glUniform1iARB
	void glUniform1iARB (GLint location, GLint v0);
//####glUniform1iv
	void glUniform1iv (GLint location, GLsizei count, const GLint *value);
//####glUniform1ivARB
	void glUniform1ivARB (GLint location, GLsizei count, const GLint *value);
//####glUniform2fARB
	void glUniform2fARB (GLint location, GLfloat v0, GLfloat v1);
//####glUniform2fv
	void glUniform2fv (GLint location, GLsizei count, const GLfloat *value);
//####glUniform2fvARB
	void glUniform2fvARB (GLint location, GLsizei count, const GLfloat *value);
//####glUniform2iARB
	void glUniform2iARB (GLint location, GLint v0, GLint v1);
//####glUniform2ivARB
	void glUniform2ivARB (GLint location, GLsizei count, const GLint *value);
//####glUniform3fARB
	void glUniform3fARB (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
//####glUniform3fv
	void glUniform3fv (GLint location, GLsizei count, const GLfloat *value);
//####glUniform3fvARB
	void glUniform3fvARB (GLint location, GLsizei count, const GLfloat *value);
//####glUniform3iARB
	void glUniform3iARB (GLint location, GLint v0, GLint v1, GLint v2);
//####glUniform3iv
	void glUniform3iv (GLint location, GLsizei count, const GLint *value);
//####glUniform3ivARB
	void glUniform3ivARB (GLint location, GLsizei count, const GLint *value);
//####glUniform4fARB
	void glUniform4fARB (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
//####glUniform4fv
	void glUniform4fv (GLint location, GLsizei count, const GLfloat *value);
//####glUniform4fvARB
	void glUniform4fvARB (GLint location, GLsizei count, const GLfloat *value);
//####glUniform4iARB
	void glUniform4iARB (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
//####glUniform4iv
	void glUniform4iv (GLint location, GLsizei count, const GLint *value);
//####glUniform4ivARB
	void glUniform4ivARB (GLint location, GLsizei count, const GLint *value);
//####glUniformBlockBinding
	void glUniformBlockBinding (GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);
//####glUniformMatrix2fv
	void glUniformMatrix2fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
//####glUniformMatrix2fvARB
	void glUniformMatrix2fvARB (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
//####glUniformMatrix3fv
	void glUniformMatrix3fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
//####glUniformMatrix3fvARB
	void glUniformMatrix3fvARB (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
//####glUniformMatrix4fv
	void glUniformMatrix4fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
//####glUniformMatrix4fvARB
	void glUniformMatrix4fvARB (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
//####glUnlockArraysEXT
	void glUnlockArraysEXT (void);
//####glUseProgramObjectARB
	void glUseProgramObjectARB (GLhandleARB programObj);
//####glValidateProgramARB
	void glValidateProgramARB (GLhandleARB programObj);
//####glVertex2d
	void glVertex2d (GLdouble x, GLdouble y);
//####glVertex2dv
	void glVertex2dv (const GLdouble *v);
//####glVertex2f
	void glVertex2f (GLfloat x, GLfloat y);
//####glVertex2fv
	void glVertex2fv (const GLfloat *v);
//####glVertex2i
	void glVertex2i (GLint x, GLint y);
//####glVertex2iv
	void glVertex2iv (const GLint *v);
//####glVertex2s
	void glVertex2s (GLshort x, GLshort y);
//####glVertex2sv
	void glVertex2sv (const GLshort *v);
//####glVertex3d
	void glVertex3d (GLdouble x, GLdouble y, GLdouble z);
//####glVertex3dv
	void glVertex3dv (const GLdouble *v);
//####glVertex3f
	void glVertex3f (GLfloat x, GLfloat y, GLfloat z);
//####glVertex3fv
	void glVertex3fv (const GLfloat *v);
//####glVertex3i
	void glVertex3i (GLint x, GLint y, GLint z);
//####glVertex3iv
	void glVertex3iv (const GLint *v);
//####glVertex3s
	void glVertex3s (GLshort x, GLshort y, GLshort z);
//####glVertex3sv
	void glVertex3sv (const GLshort *v);
//####glVertex4d
	void glVertex4d (GLdouble x, GLdouble y, GLdouble z, GLdouble w);
//####glVertex4dv
	void glVertex4dv (const GLdouble *v);
//####glVertex4f
	void glVertex4f (GLfloat x, GLfloat y, GLfloat z, GLfloat w);
//####glVertex4fv
	void glVertex4fv (const GLfloat *v);
//####glVertex4i
	void glVertex4i (GLint x, GLint y, GLint z, GLint w);
//####glVertex4iv
	void glVertex4iv (const GLint *v);
//####glVertex4s
	void glVertex4s (GLshort x, GLshort y, GLshort z, GLshort w);
//####glVertex4sv
	void glVertex4sv (const GLshort *v);
//####glVertexArrayParameteriAPPLE
	void glVertexArrayParameteriAPPLE (GLenum pname, GLint param);
//####glVertexArrayRangeAPPLE
	void glVertexArrayRangeAPPLE (GLsizei length, const GLvoid *pointer);
//####glVertexAttrib1dARB
	void glVertexAttrib1dARB (GLuint index, GLdouble x);
//####glVertexAttrib1dv
	void glVertexAttrib1dv (GLuint index, const GLdouble *v);
//####glVertexAttrib1dvARB
	void glVertexAttrib1dvARB (GLuint index, const GLdouble *v);
//####glVertexAttrib1fARB
	void glVertexAttrib1fARB (GLuint index, GLfloat x);
//####glVertexAttrib1fv
	void glVertexAttrib1fv (GLuint index, const GLfloat *v);
//####glVertexAttrib1fvARB
	void glVertexAttrib1fvARB (GLuint index, const GLfloat *v);
//####glVertexAttrib1sARB
	void glVertexAttrib1sARB (GLuint index, GLshort x);
//####glVertexAttrib1sv
	void glVertexAttrib1sv (GLuint index, const GLshort *v);
//####glVertexAttrib1svARB
	void glVertexAttrib1svARB (GLuint index, const GLshort *v);
//####glVertexAttrib2dARB
	void glVertexAttrib2dARB (GLuint index, GLdouble x, GLdouble y);
//####glVertexAttrib2dv
	void glVertexAttrib2dv (GLuint index, const GLdouble *v);
//####glVertexAttrib2dvARB
	void glVertexAttrib2dvARB (GLuint index, const GLdouble *v);
//####glVertexAttrib2fARB
	void glVertexAttrib2fARB (GLuint index, GLfloat x, GLfloat y);
//####glVertexAttrib2fv
	void glVertexAttrib2fv (GLuint index, const GLfloat *v);
//####glVertexAttrib2fvARB
	void glVertexAttrib2fvARB (GLuint index, const GLfloat *v);
//####glVertexAttrib2sARB
	void glVertexAttrib2sARB (GLuint index, GLshort x, GLshort y);
//####glVertexAttrib2sv
	void glVertexAttrib2sv (GLuint index, const GLshort *v);
//####glVertexAttrib2svARB
	void glVertexAttrib2svARB (GLuint index, const GLshort *v);
//####glVertexAttrib3dARB
	void glVertexAttrib3dARB (GLuint index, GLdouble x, GLdouble y, GLdouble z);
//####glVertexAttrib3dv
	void glVertexAttrib3dv (GLuint index, const GLdouble *v);
//####glVertexAttrib3dvARB
	void glVertexAttrib3dvARB (GLuint index, const GLdouble *v);
//####glVertexAttrib3fARB
	void glVertexAttrib3fARB (GLuint index, GLfloat x, GLfloat y, GLfloat z);
//####glVertexAttrib3fv
	void glVertexAttrib3fv (GLuint index, const GLfloat *v);
//####glVertexAttrib3fvARB
	void glVertexAttrib3fvARB (GLuint index, const GLfloat *v);
//####glVertexAttrib3sARB
	void glVertexAttrib3sARB (GLuint index, GLshort x, GLshort y, GLshort z);
//####glVertexAttrib3sv
	void glVertexAttrib3sv (GLuint index, const GLshort *v);
//####glVertexAttrib3svARB
	void glVertexAttrib3svARB (GLuint index, const GLshort *v);
//####glVertexAttrib4Nbv
	void glVertexAttrib4Nbv (GLuint index, const GLbyte *v);
//####glVertexAttrib4NbvARB
	void glVertexAttrib4NbvARB (GLuint index, const GLbyte *v);
//####glVertexAttrib4Niv
	void glVertexAttrib4Niv (GLuint index, const GLint *v);
//####glVertexAttrib4NivARB
	void glVertexAttrib4NivARB (GLuint index, const GLint *v);
//####glVertexAttrib4Nsv
	void glVertexAttrib4Nsv (GLuint index, const GLshort *v);
//####glVertexAttrib4NsvARB
	void glVertexAttrib4NsvARB (GLuint index, const GLshort *v);
//####glVertexAttrib4NubARB
	void glVertexAttrib4NubARB (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
//####glVertexAttrib4Nubv
	void glVertexAttrib4Nubv (GLuint index, const GLubyte *v);
//####glVertexAttrib4NubvARB
	void glVertexAttrib4NubvARB (GLuint index, const GLubyte *v);
//####glVertexAttrib4Nuiv
	void glVertexAttrib4Nuiv (GLuint index, const GLuint *v);
//####glVertexAttrib4NuivARB
	void glVertexAttrib4NuivARB (GLuint index, const GLuint *v);
//####glVertexAttrib4Nusv
	void glVertexAttrib4Nusv (GLuint index, const GLushort *v);
//####glVertexAttrib4NusvARB
	void glVertexAttrib4NusvARB (GLuint index, const GLushort *v);
//####glVertexAttrib4bv
	void glVertexAttrib4bv (GLuint index, const GLbyte *v);
//####glVertexAttrib4bvARB
	void glVertexAttrib4bvARB (GLuint index, const GLbyte *v);
//####glVertexAttrib4dARB
	void glVertexAttrib4dARB (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
//####glVertexAttrib4dv
	void glVertexAttrib4dv (GLuint index, const GLdouble *v);
//####glVertexAttrib4dvARB
	void glVertexAttrib4dvARB (GLuint index, const GLdouble *v);
//####glVertexAttrib4fARB
	void glVertexAttrib4fARB (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
//####glVertexAttrib4fv
	void glVertexAttrib4fv (GLuint index, const GLfloat *v);
//####glVertexAttrib4fvARB
	void glVertexAttrib4fvARB (GLuint index, const GLfloat *v);
//####glVertexAttrib4iv
	void glVertexAttrib4iv (GLuint index, const GLint *v);
//####glVertexAttrib4ivARB
	void glVertexAttrib4ivARB (GLuint index, const GLint *v);
//####glVertexAttrib4sARB
	void glVertexAttrib4sARB (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
//####glVertexAttrib4sv
	void glVertexAttrib4sv (GLuint index, const GLshort *v);
//####glVertexAttrib4svARB
	void glVertexAttrib4svARB (GLuint index, const GLshort *v);
//####glVertexAttrib4ubv
	void glVertexAttrib4ubv (GLuint index, const GLubyte *v);
//####glVertexAttrib4ubvARB
	void glVertexAttrib4ubvARB (GLuint index, const GLubyte *v);
//####glVertexAttrib4uiv
	void glVertexAttrib4uiv (GLuint index, const GLuint *v);
//####glVertexAttrib4uivARB
	void glVertexAttrib4uivARB (GLuint index, const GLuint *v);
//####glVertexAttrib4usv
	void glVertexAttrib4usv (GLuint index, const GLushort *v);
//####glVertexAttrib4usvARB
	void glVertexAttrib4usvARB (GLuint index, const GLushort *v);
//####glVertexAttribDivisorARB
	void glVertexAttribDivisorARB (GLuint index, GLuint divisor);
//####glVertexAttribPointer
	void glVertexAttribPointer (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid *pointer);
//####glVertexAttribPointerARB
	void glVertexAttribPointerARB (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid *pointer);
//####glVertexBlendARB
	void glVertexBlendARB (GLint);
//####glVertexPointer
	void glVertexPointer (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
//####glViewport
	void glViewport (GLint x, GLint y, GLsizei width, GLsizei height);
//####glWeightPointerARB
	void glWeightPointerARB (GLint, GLenum, GLsizei, const GLvoid *);
//####glWeightbvARB
	void glWeightbvARB (GLint, const GLbyte *);
//####glWeightdvARB
	void glWeightdvARB (GLint, const GLdouble *);
//####glWeightfvARB
	void glWeightfvARB (GLint, const GLfloat *);
//####glWeightivARB
	void glWeightivARB (GLint, const GLint *);
//####glWeightsvARB
	void glWeightsvARB (GLint, const GLshort *);
//####glWeightubvARB
	void glWeightubvARB (GLint, const GLubyte *);
//####glWeightuivARB
	void glWeightuivARB (GLint, const GLuint *);
//####glWeightusvARB
	void glWeightusvARB (GLint, const GLushort *);
//####glWindowPos2dARB
	void glWindowPos2dARB (GLdouble, GLdouble);
//####glWindowPos2dv
	void glWindowPos2dv (const GLdouble *v);
//####glWindowPos2dvARB
	void glWindowPos2dvARB (const GLdouble *);
//####glWindowPos2fARB
	void glWindowPos2fARB (GLfloat, GLfloat);
//####glWindowPos2fv
	void glWindowPos2fv (const GLfloat *v);
//####glWindowPos2fvARB
	void glWindowPos2fvARB (const GLfloat *);
//####glWindowPos2iARB
	void glWindowPos2iARB (GLint, GLint);
//####glWindowPos2iv
	void glWindowPos2iv (const GLint *v);
//####glWindowPos2ivARB
	void glWindowPos2ivARB (const GLint *);
//####glWindowPos2sARB
	void glWindowPos2sARB (GLshort, GLshort);
//####glWindowPos2sv
	void glWindowPos2sv (const GLshort *v);
//####glWindowPos2svARB
	void glWindowPos2svARB (const GLshort *);
//####glWindowPos3dARB
	void glWindowPos3dARB (GLdouble, GLdouble, GLdouble);
//####glWindowPos3dv
	void glWindowPos3dv (const GLdouble *v);
//####glWindowPos3dvARB
	void glWindowPos3dvARB (const GLdouble *);
//####glWindowPos3fARB
	void glWindowPos3fARB (GLfloat, GLfloat, GLfloat);
//####glWindowPos3fv
	void glWindowPos3fv (const GLfloat *v);
//####glWindowPos3fvARB
	void glWindowPos3fvARB (const GLfloat *);
//####glWindowPos3iARB
	void glWindowPos3iARB (GLint, GLint, GLint);
//####glWindowPos3iv
	void glWindowPos3iv (const GLint *v);
//####glWindowPos3ivARB
	void glWindowPos3ivARB (const GLint *);
//####glWindowPos3sARB
	void glWindowPos3sARB (GLshort, GLshort, GLshort);
//####glWindowPos3sv
	void glWindowPos3sv (const GLshort *v);
//####glWindowPos3svARB
	void glWindowPos3svARB (const GLshort *);
//####glAddSwapHintRectWIN
	void glAddSwapHintRectWIN (GLint x, GLint y, GLsizei width, GLsizei height);
//####wglAllocateMemoryNV
	void * wglAllocateMemoryNV (GLsizei size, GLfloat readFrequency, GLfloat writeFrequency, GLfloat priority);
//####wglFreeMemoryNV
=======
	typedef struct {  char pipeName[GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX];   int  networkId; } GLXHyperpipeNetworkSGIX;;
	typedef struct {  char pipeName[GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX];   int channel;   unsigned int participationType;   int timeSlice; } GLXHyperpipeConfigSGIX;;
	typedef struct {  char pipeName[GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX];   int srcXOrigin;   int srcYOrigin;   int srcWidth;   int srcHeight;   int destXOrigin;   int destYOrigin;   int destWidth;   int destHeight; } GLXPipeRect;;
	typedef struct {  char pipeName[GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX];   int XOrigin;   int YOrigin;   int maxHeight;   int maxWidth; } GLXPipeRectLimits;;
	typedef XID GLXWindow;
	typedef XID GLXPbuffer;
	typedef XID GLXFBConfigID;
	typedef struct __GLXFBConfigRec *GLXFBConfig;
	typedef struct {  int event_type;   int draw_type;   unsigned long serial;   Bool send_event;   Display *display;   GLXDrawable drawable;   unsigned int buffer_mask;   unsigned int aux_buffer;   int x, y;   int width, height;   int count; } GLXPbufferClobberEvent;;
	typedef union __GLXEvent {  GLXPbufferClobberEvent glxpbufferclobber;   long pad[24]; } GLXEvent;;
	typedef GLintptr GLvdpauSurfaceNV;
	typedef ptrdiff_t GLsizeiptr;
	typedef ptrdiff_t GLintptr;
	typedef unsigned int GLenum;
	typedef unsigned char GLboolean;
	typedef unsigned int GLbitfield;
	typedef signed char GLbyte;
	typedef short GLshort;
	typedef int GLint;
	typedef int GLsizei;
	typedef unsigned char GLubyte;
	typedef unsigned short GLushort;
	typedef unsigned int GLuint;
	typedef float GLfloat;
	typedef float GLclampf;
	typedef double GLdouble;
	typedef double GLclampd;
	typedef void GLvoid;
	typedef long GLintptr;
	typedef long GLsizeiptr;
	typedef char GLchar;
	typedef char GLcharARB;
	typedef void *GLhandleARB;
	typedef long GLintptrARB;
	typedef long GLsizeiptrARB;
	typedef unsigned short GLhalfARB;
	typedef unsigned short GLhal;
	typedef struct _GPU_DEVICE {  DWORD cb;   CHAR DeviceName[32];   CHAR DeviceString[128];   DWORD Flags;   RECT rcVirtualScreen; } GPU_DEVICE, *PGPU_DEVICE;;



	extern void ( * glXGetProcAddressARB (const GLubyte *procName)) (void);
	void glXBindTexImageATI (Display *dpy, GLXPbuffer pbuf, int buffer);
	void glXReleaseTexImageATI (Display *dpy, GLXPbuffer pbuf, int buffer);
	void glXDrawableAttribATI (Display *dpy, GLXDrawable draw, const int *attrib_list);
	void * glXAllocateMemoryNV (GLsizei size, GLfloat readFrequency, GLfloat writeFrequency, GLfloat priority);
	void glXFreeMemoryNV (void *pointer);
	GLXHyperpipeNetworkSGIX * glXQueryHyperpipeNetworkSGIX (Display *dpy, int *npipes);
	int glXHyperpipeConfigSGIX (Display *dpy, int networkId, int npipes, GLXHyperpipeConfigSGIX *cfg, int *hpId);
	GLXHyperpipeConfigSGIX * glXQueryHyperpipeConfigSGIX (Display *dpy, int hpId, int *npipes);
	int glXDestroyHyperpipeConfigSGIX (Display *dpy, int hpId);
	int glXBindHyperpipeSGIX (Display *dpy, int hpId);
	int glXQueryHyperpipeBestAttribSGIX (Display *dpy, int timeSlice, int attrib, int size, void *attribList, void *returnAttribList);
	int glXHyperpipeAttribSGIX (Display *dpy, int timeSlice, int attrib, int size, void *attribList);
	int glXQueryHyperpipeAttribSGIX (Display *dpy, int timeSlice, int attrib, int size, void *returnAttribList);
	void glXBindSwapBarrierSGIX (Display *dpy, GLXDrawable drawable, int barrier);
	Bool glXQueryMaxSwapBarriersSGIX (Display *dpy, int screen, int *max);
	void glXJoinSwapGroupSGIX (Display *dpy, GLXDrawable drawable, GLXDrawable member);
	int glXGetVideoSyncSGI (unsigned int* count);
	int glXWaitVideoSyncSGI (int divisor, int remainder, unsigned int* count);
	int glXVideoResizeSUN (Display* display, GLXDrawable window, float factor);
	int glXGetVideoResizeSUN (Display* display, GLXDrawable window, float* factor);
	Display* glXGetCurrentDisplay (void);
	GLXFBConfig* glXChooseFBConfig (Display *dpy, int screen, const int *attrib_list, int *nelements);
	GLXFBConfig* glXGetFBConfigs (Display *dpy, int screen, int *nelements);
	XVisualInfo* glXGetVisualFromFBConfig (Display *dpy, GLXFBConfig config);
	int glXGetFBConfigAttrib (Display *dpy, GLXFBConfig config, int attribute, int *value);
	GLXWindow glXCreateWindow (Display *dpy, GLXFBConfig config, Window win, const int *attrib_list);
	void glXDestroyWindow (Display *dpy, GLXWindow win);
	GLXPixmap glXCreatePixmap (Display *dpy, GLXFBConfig config, Pixmap pixmap, const int *attrib_list);
	void glXDestroyPixmap (Display *dpy, GLXPixmap pixmap);
	GLXPbuffer glXCreatePbuffer (Display *dpy, GLXFBConfig config, const int *attrib_list);
	void glXDestroyPbuffer (Display *dpy, GLXPbuffer pbuf);
	void glXQueryDrawable (Display *dpy, GLXDrawable draw, int attribute, unsigned int *value);
	GLXContext glXCreateNewContext (Display *dpy, GLXFBConfig config, int render_type, GLXContext share_list, Bool direct);
	Bool glXMakeContextCurrent (Display *display, GLXDrawable draw, GLXDrawable read, GLXContext ctx);
	GLXDrawable glXGetCurrentReadDrawable (void);
	int glXQueryContext (Display *dpy, GLXContext ctx, int attribute, int *value);
	void glXSelectEvent (Display *dpy, GLXDrawable draw, unsigned long event_mask);
	void glXGetSelectedEvent (Display *dpy, GLXDrawable draw, unsigned long *event_mask);
	extern void ( * glXGetProcAddress (const GLubyte *procName)) (void);
	void glTextureRangeAPPLE (GLenum target, GLsizei length, GLvoid *pointer);
	void glGetTexParameterPointervAPPLE (GLenum target, GLenum pname, GLvoid **params);
	void glColorTable (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *table);
	void glColorSubTable (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const GLvoid *data);
	void glColorTableParameteriv (GLenum target, GLenum pname, const GLint *params);
	void glColorTableParameterfv (GLenum target, GLenum pname, const GLfloat *params);
	void glCopyColorSubTable (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);
	void glCopyColorTable (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
	void glGetColorTable (GLenum target, GLenum format, GLenum type, GLvoid *table);
	void glGetColorTableParameterfv (GLenum target, GLenum pname, GLfloat *params);
	void glGetColorTableParameteriv (GLenum target, GLenum pname, GLint *params);
	void glHistogram (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);
	void glResetHistogram (GLenum target);
	void glGetHistogram (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);
	void glGetHistogramParameterfv (GLenum target, GLenum pname, GLfloat *params);
	void glGetHistogramParameteriv (GLenum target, GLenum pname, GLint *params);
	void glMinmax (GLenum target, GLenum internalformat, GLboolean sink);
	void glResetMinmax (GLenum target);
	void glGetMinmaxParameterfv (GLenum target, GLenum pname, GLfloat *params);
	void glGetMinmaxParameteriv (GLenum target, GLenum pname, GLint *params);
	void glConvolutionFilter1D (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *image);
	void glConvolutionFilter2D (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *image);
	void glConvolutionParameterf (GLenum target, GLenum pname, GLfloat params);
	void glConvolutionParameterfv (GLenum target, GLenum pname, const GLfloat *params);
	void glConvolutionParameteri (GLenum target, GLenum pname, GLint params);
	void glConvolutionParameteriv (GLenum target, GLenum pname, const GLint *params);
	void glCopyConvolutionFilter1D (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
	void glCopyConvolutionFilter2D (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);
	void glGetConvolutionFilter (GLenum target, GLenum format, GLenum type, GLvoid *image);
	void glGetConvolutionParameterfv (GLenum target, GLenum pname, GLfloat *params);
	void glGetConvolutionParameteriv (GLenum target, GLenum pname, GLint *params);
	void glSeparableFilter2D (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *row, const GLvoid *column);
	void glGetSeparableFilter (GLenum target, GLenum format, GLenum type, GLvoid *row, GLvoid *column, GLvoid *span);
	void glGetMinmax (GLenum target, GLboolean reset, GLenum format, GLenum types, GLvoid *values);
	void glCurrentPaletteMatrixARB (GLint index);
	void glMatrixIndexPointerARB (GLint size, GLenum type, GLsizei stride, GLvoid *pointer);
	void glMatrixIndexubvARB (GLint size, GLubyte *indices);
	void glMatrixIndexusvARB (GLint size, GLushort *indices);
	void glMatrixIndexuivARB (GLint size, GLuint *indices);
	void glActiveTextureARB (GLenum texture);
	void glClientActiveTextureARB (GLenum texture);
	void glMultiTexCoord1dARB (GLenum target, GLdouble s);
	void glMultiTexCoord1dvARB (GLenum target, const GLdouble *v);
	void glMultiTexCoord1fARB (GLenum target, GLfloat s);
	void glMultiTexCoord1fvARB (GLenum target, const GLfloat *v);
	void glMultiTexCoord1iARB (GLenum target, GLint s);
	void glMultiTexCoord1ivARB (GLenum target, const GLint *v);
	void glMultiTexCoord1sARB (GLenum target, GLshort s);
	void glMultiTexCoord1svARB (GLenum target, const GLshort *v);
	void glMultiTexCoord2dARB (GLenum target, GLdouble s, GLdouble t);
	void glMultiTexCoord2dvARB (GLenum target, const GLdouble *v);
	void glMultiTexCoord2fARB (GLenum target, GLfloat s, GLfloat t);
	void glMultiTexCoord2fvARB (GLenum target, const GLfloat *v);
	void glMultiTexCoord2iARB (GLenum target, GLint s, GLint t);
	void glMultiTexCoord2ivARB (GLenum target, const GLint *v);
	void glMultiTexCoord2sARB (GLenum target, GLshort s, GLshort t);
	void glMultiTexCoord2svARB (GLenum target, const GLshort *v);
	void glMultiTexCoord3dARB (GLenum target, GLdouble s, GLdouble t, GLdouble r);
	void glMultiTexCoord3dvARB (GLenum target, const GLdouble *v);
	void glMultiTexCoord3fARB (GLenum target, GLfloat s, GLfloat t, GLfloat r);
	void glMultiTexCoord3fvARB (GLenum target, const GLfloat *v);
	void glMultiTexCoord3iARB (GLenum target, GLint s, GLint t, GLint r);
	void glMultiTexCoord3ivARB (GLenum target, const GLint *v);
	void glMultiTexCoord3sARB (GLenum target, GLshort s, GLshort t, GLshort r);
	void glMultiTexCoord3svARB (GLenum target, const GLshort *v);
	void glMultiTexCoord4dARB (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
	void glMultiTexCoord4dvARB (GLenum target, const GLdouble *v);
	void glMultiTexCoord4fARB (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
	void glMultiTexCoord4fvARB (GLenum target, const GLfloat *v);
	void glMultiTexCoord4iARB (GLenum target, GLint s, GLint t, GLint r, GLint q);
	void glMultiTexCoord4ivARB (GLenum target, const GLint *v);
	void glMultiTexCoord4sARB (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
	void glMultiTexCoord4svARB (GLenum target, const GLshort *v);
	void glPointParameterfARB (GLenum pname, GLfloat param);
	void glPointParameterfvARB (GLenum pname, const GLfloat* params);
	void glGetnColorTableARB (GLenum target, GLenum format, GLenum type, GLsizei bufSize, void* table);
	void glGetnCompressedTexImageARB (GLenum target, GLint lod, GLsizei bufSize, void* img);
	void glGetnConvolutionFilterARB (GLenum target, GLenum format, GLenum type, GLsizei bufSize, void* image);
	void glGetnHistogramARB (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void* values);
	void glGetnMapdvARB (GLenum target, GLenum query, GLsizei bufSize, GLdouble* v);
	void glGetnMapfvARB (GLenum target, GLenum query, GLsizei bufSize, GLfloat* v);
	void glGetnMapivARB (GLenum target, GLenum query, GLsizei bufSize, GLint* v);
	void glGetnMinmaxARB (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void* values);
	void glGetnPixelMapfvARB (GLenum map, GLsizei bufSize, GLfloat* values);
	void glGetnPixelMapuivARB (GLenum map, GLsizei bufSize, GLuint* values);
	void glGetnPixelMapusvARB (GLenum map, GLsizei bufSize, GLushort* values);
	void glGetnPolygonStippleARB (GLsizei bufSize, GLubyte* pattern);
	void glGetnSeparableFilterARB (GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, void* row, GLsizei columnBufSize, GLvoid*column, GLvoid*span);
	void glGetnTexImageARB (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void* img);
	void glGetnUniformdvARB (GLuint program, GLint location, GLsizei bufSize, GLdouble* params);
	void glGetnUniformfvARB (GLuint program, GLint location, GLsizei bufSize, GLfloat* params);
	void glGetnUniformivARB (GLuint program, GLint location, GLsizei bufSize, GLint* params);
	void glGetnUniformuivARB (GLuint program, GLint location, GLsizei bufSize, GLuint* params);
	void glReadnPixelsARB (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void* data);
	void glActiveShaderProgram (GLuint pipeline, GLuint program);
	void glBindProgramPipeline (GLuint pipeline);
	GLuint glCreateShaderProgramv (GLenum type, GLsizei count, const char ** strings);
	void glDeleteProgramPipelines (GLsizei n, const GLuint* pipelines);
	void glGenProgramPipelines (GLsizei n, GLuint* pipelines);
	void glGetProgramPipelineInfoLog (GLuint pipeline, GLsizei bufSize, GLsizei* length, char *infoLog);
	void glGetProgramPipelineiv (GLuint pipeline, GLenum pname, GLint* params);
	GLboolean glIsProgramPipeline (GLuint pipeline);
	void glProgramUniform1d (GLuint program, GLint location, GLdouble x);
	void glProgramUniform1dv (GLuint program, GLint location, GLsizei count, const GLdouble* value);
	void glProgramUniform1f (GLuint program, GLint location, GLfloat x);
	void glProgramUniform1fv (GLuint program, GLint location, GLsizei count, const GLfloat* value);
	void glProgramUniform1i (GLuint program, GLint location, GLint x);
	void glProgramUniform1iv (GLuint program, GLint location, GLsizei count, const GLint* value);
	void glProgramUniform1ui (GLuint program, GLint location, GLuint x);
	void glProgramUniform1uiv (GLuint program, GLint location, GLsizei count, const GLuint* value);
	void glProgramUniform2d (GLuint program, GLint location, GLdouble x, GLdouble y);
	void glProgramUniform2dv (GLuint program, GLint location, GLsizei count, const GLdouble* value);
	void glProgramUniform2f (GLuint program, GLint location, GLfloat x, GLfloat y);
	void glProgramUniform2fv (GLuint program, GLint location, GLsizei count, const GLfloat* value);
	void glProgramUniform2i (GLuint program, GLint location, GLint x, GLint y);
	void glProgramUniform2iv (GLuint program, GLint location, GLsizei count, const GLint* value);
	void glProgramUniform2ui (GLuint program, GLint location, GLuint x, GLuint y);
	void glProgramUniform2uiv (GLuint program, GLint location, GLsizei count, const GLuint* value);
	void glProgramUniform3d (GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z);
	void glProgramUniform3dv (GLuint program, GLint location, GLsizei count, const GLdouble* value);
	void glProgramUniform3f (GLuint program, GLint location, GLfloat x, GLfloat y, GLfloat z);
	void glProgramUniform3fv (GLuint program, GLint location, GLsizei count, const GLfloat* value);
	void glProgramUniform3i (GLuint program, GLint location, GLint x, GLint y, GLint z);
	void glProgramUniform3iv (GLuint program, GLint location, GLsizei count, const GLint* value);
	void glProgramUniform3ui (GLuint program, GLint location, GLuint x, GLuint y, GLuint z);
	void glProgramUniform3uiv (GLuint program, GLint location, GLsizei count, const GLuint* value);
	void glProgramUniform4d (GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
	void glProgramUniform4dv (GLuint program, GLint location, GLsizei count, const GLdouble* value);
	void glProgramUniform4f (GLuint program, GLint location, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
	void glProgramUniform4fv (GLuint program, GLint location, GLsizei count, const GLfloat* value);
	void glProgramUniform4i (GLuint program, GLint location, GLint x, GLint y, GLint z, GLint w);
	void glProgramUniform4iv (GLuint program, GLint location, GLsizei count, const GLint* value);
	void glProgramUniform4ui (GLuint program, GLint location, GLuint x, GLuint y, GLuint z, GLuint w);
	void glProgramUniform4uiv (GLuint program, GLint location, GLsizei count, const GLuint* value);
	void glProgramUniformMatrix2dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value);
	void glProgramUniformMatrix2fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
	void glProgramUniformMatrix2x3dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value);
	void glProgramUniformMatrix2x3fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
	void glProgramUniformMatrix2x4dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value);
	void glProgramUniformMatrix2x4fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
	void glProgramUniformMatrix3dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value);
	void glProgramUniformMatrix3fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
	void glProgramUniformMatrix3x2dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value);
	void glProgramUniformMatrix3x2fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
	void glProgramUniformMatrix3x4dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value);
	void glProgramUniformMatrix3x4fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
	void glProgramUniformMatrix4dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value);
	void glProgramUniformMatrix4fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
	void glProgramUniformMatrix4x2dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value);
	void glProgramUniformMatrix4x2fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
	void glProgramUniformMatrix4x3dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble* value);
	void glProgramUniformMatrix4x3fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
	void glUseProgramStages (GLuint pipeline, GLbitfield stages, GLuint program);
	void glValidateProgramPipeline (GLuint pipeline);
	void glGetVertexAttribLdv (GLuint index, GLenum pname, GLdouble* params);
	void glVertexAttribL1d (GLuint index, GLdouble x);
	void glVertexAttribL1dv (GLuint index, const GLdouble* v);
	void glVertexAttribL2d (GLuint index, GLdouble x, GLdouble y);
	void glVertexAttribL2dv (GLuint index, const GLdouble* v);
	void glVertexAttribL3d (GLuint index, GLdouble x, GLdouble y, GLdouble z);
	void glVertexAttribL3dv (GLuint index, const GLdouble* v);
	void glVertexAttribL4d (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
	void glVertexAttribL4dv (GLuint index, const GLdouble* v);
	void glVertexAttribLPointer (GLuint index, GLint size, GLenum type, GLsizei stride, const void* pointer);
	void glWeightbvARB (GLint size, GLbyte *weights);
	void glWeightsvARB (GLint size, GLshort *weights);
	void glWeightivARB (GLint size, GLint *weights);
	void glWeightfvARB (GLint size, GLfloat *weights);
	void glWeightdvARB (GLint size, GLdouble *weights);
	void glWeightubvARB (GLint size, GLubyte *weights);
	void glWeightusvARB (GLint size, GLushort *weights);
	void glWeightuivARB (GLint size, GLuint *weights);
	void glWeightPointerARB (GLint size, GLenum type, GLsizei stride, GLvoid *pointer);
	void glVertexBlendARB (GLint count);
	void glTexBumpParameterivATI (GLenum pname, GLint *param);
	void glTexBumpParameterfvATI (GLenum pname, GLfloat *param);
	void glGetTexBumpParameterivATI (GLenum pname, GLint *param);
	void glGetTexBumpParameterfvATI (GLenum pname, GLfloat *param);
	void* glMapObjectBufferATI (GLuint buffer);
	void glUnmapObjectBufferATI (GLuint buffer);
	void glPNTrianglesiATI (GLenum pname, GLint param);
	void glPNTrianglesfATI (GLenum pname, GLfloat param);
	void glStencilOpSeparateATI (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
	void glStencilFuncSeparateATI (GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask);
	void glClientActiveVertexStreamATI (GLenum stream);
	void glVertexBlendEnviATI (GLenum pname, GLint param);
	void glVertexBlendEnvfATI (GLenum pname, GLfloat param);
	void glVertexStream2sATI (GLenum stream, GLshort x, GLshort y);
	void glVertexStream2svATI (GLenum stream, const GLshort *v);
	void glVertexStream2iATI (GLenum stream, GLint x, GLint y);
	void glVertexStream2ivATI (GLenum stream, const GLint *v);
	void glVertexStream2fATI (GLenum stream, GLfloat x, GLfloat y);
	void glVertexStream2fvATI (GLenum stream, const GLfloat *v);
	void glVertexStream2dATI (GLenum stream, GLdouble x, GLdouble y);
	void glVertexStream2dvATI (GLenum stream, const GLdouble *v);
	void glVertexStream3sATI (GLenum stream, GLshort x, GLshort y, GLshort z);
	void glVertexStream3svATI (GLenum stream, const GLshort *v);
	void glVertexStream3iATI (GLenum stream, GLint x, GLint y, GLint z);
	void glVertexStream3ivATI (GLenum stream, const GLint *v);
	void glVertexStream3fATI (GLenum stream, GLfloat x, GLfloat y, GLfloat z);
	void glVertexStream3fvATI (GLenum stream, const GLfloat *v);
	void glVertexStream3dATI (GLenum stream, GLdouble x, GLdouble y, GLdouble z);
	void glVertexStream3dvATI (GLenum stream, const GLdouble *v);
	void glVertexStream4sATI (GLenum stream, GLshort x, GLshort y, GLshort z, GLshort w);
	void glVertexStream4svATI (GLenum stream, const GLshort *v);
	void glVertexStream4iATI (GLenum stream, GLint x, GLint y, GLint z, GLint w);
	void glVertexStream4ivATI (GLenum stream, const GLint *v);
	void glVertexStream4fATI (GLenum stream, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
	void glVertexStream4fvATI (GLenum stream, const GLfloat *v);
	void glVertexStream4dATI (GLenum stream, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
	void glVertexStream4dvATI (GLenum stream, const GLdouble *v);
	void glNormalStream3bATI (GLenum stream, GLbyte x, GLbyte y, GLbyte z);
	void glNormalStream3bvATI (GLenum stream, const GLbyte *v);
	void glNormalStream3sATI (GLenum stream, GLshort x, GLshort y, GLshort z);
	void glNormalStream3svATI (GLenum stream, const GLshort *v);
	void glNormalStream3iATI (GLenum stream, GLint x, GLint y, GLint z);
	void glNormalStream3ivATI (GLenum stream, const GLint *v);
	void glNormalStream3fATI (GLenum stream, GLfloat x, GLfloat y, GLfloat z);
	void glNormalStream3fvATI (GLenum stream, const GLfloat *v);
	void glNormalStream3dATI (GLenum stream, GLdouble x, GLdouble y, GLdouble z);
	void glNormalStream3dvATI (GLenum stream, const GLdouble *v);
	void glUniformBufferEXT (GLuint program, GLint location, GLuint buffer);
	GLint glGetUniformBufferSizeEXT (GLuint program, GLint location);
	GLintptr glGetUniformOffsetEXT (GLuint program, GLint location);
	void glDepthBoundsEXT (GLclampd zmin, GLclampd zmax);
	void glDrawArraysInstancedEXT (GLenum mode, GLint start, GLsizei count, GLsizei primcount);
	void glDrawElementsInstancedEXT (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei primcount);
	void glDrawRangeElementsEXT (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices);
	void glFogCoordfEXT (GLfloat coord);
	void glFogCoordfvEXT (const GLfloat *coord);
	void glFogCoorddEXT (GLdouble coord);
	void glFogCoorddvEXT (const GLdouble *coord);
	void glFogCoordPointerEXT (GLenum type, GLsizei stride, const GLvoid *pointer);
	void glProgramParameteriEXT (GLuint program, GLenum pname, GLint value);
	void glFramebufferTextureEXT (GLenum target, GLenum attachment, GLuint texture, GLint level);
	void glFramebufferTextureLayerEXT (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
	void glFramebufferTextureFaceEXT (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
	void glProgramEnvParameters4fvEXT (GLenum target, GLuint index, GLsizei count, const GLfloat* params);
	void glProgramLocalParameters4fvEXT (GLenum target, GLuint index, GLsizei count, const GLfloat* params);
	void glGetUniformuivEXT (GLuint program, GLint location, GLuint *params);
	void glBindFragDataLocationEXT (GLuint program, GLuint color, const GLchar *name);
	GLint glGetFragDataLocationEXT (GLuint program, const GLchar *name);
	void glUniform1uiEXT (GLint location, GLuint v0);
	void glUniform2uiEXT (GLint location, GLuint v0, GLuint v1);
	void glUniform3uiEXT (GLint location, GLuint v0, GLuint v1, GLuint v2);
	void glUniform4uiEXT (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
	void glUniform1uivEXT (GLint location, GLsizei count, const GLuint *value);
	void glUniform2uivEXT (GLint location, GLsizei count, const GLuint *value);
	void glUniform3uivEXT (GLint location, GLsizei count, const GLuint *value);
	void glUniform4uivEXT (GLint location, GLsizei count, const GLuint *value);
	void glVertexAttribI1iEXT (GLuint index, GLint x);
	void glVertexAttribI2iEXT (GLuint index, GLint x, GLint y);
	void glVertexAttribI3iEXT (GLuint index, GLint x, GLint y, GLint z);
	void glVertexAttribI4iEXT (GLuint index, GLint x, GLint y, GLint z, GLint w);
	void glVertexAttribI1uiEXT (GLuint index, GLuint x);
	void glVertexAttribI2uiEXT (GLuint index, GLuint x, GLuint y);
	void glVertexAttribI3uiEXT (GLuint index, GLuint x, GLuint y, GLuint z);
	void glVertexAttribI4uiEXT (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
	void glVertexAttribI1ivEXT (GLuint index, const GLint *v);
	void glVertexAttribI2ivEXT (GLuint index, const GLint *v);
	void glVertexAttribI3ivEXT (GLuint index, const GLint *v);
	void glVertexAttribI4ivEXT (GLuint index, const GLint *v);
	void glVertexAttribI1uivEXT (GLuint index, const GLuint *v);
	void glVertexAttribI2uivEXT (GLuint index, const GLuint *v);
	void glVertexAttribI3uivEXT (GLuint index, const GLuint *v);
	void glVertexAttribI4uivEXT (GLuint index, const GLuint *v);
	void glVertexAttribI4bvEXT (GLuint index, const GLbyte *v);
	void glVertexAttribI4svEXT (GLuint index, const GLshort *v);
	void glVertexAttribI4ubvEXT (GLuint index, const GLubyte *v);
	void glVertexAttribI4usvEXT (GLuint index, const GLushort *v);
	void glVertexAttribIPointerEXT (GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
	void glGetVertexAttribIivEXT (GLuint index, GLenum pname, GLint *params);
	void glGetVertexAttribIuivEXT (GLuint index, GLenum pname, GLuint *params);
	void glPointParameterfEXT (GLenum pname, GLfloat param);
	void glPointParameterfvEXT (GLenum pname, const GLfloat* params);
	void glSecondaryColor3bEXT (GLbyte red, GLbyte green, GLbyte blue);
	void glSecondaryColor3bvEXT (const GLbyte *v);
	void glSecondaryColor3dEXT (GLdouble red, GLdouble green, GLdouble blue);
	void glSecondaryColor3dvEXT (const GLdouble *v);
	void glSecondaryColor3fEXT (GLfloat red, GLfloat green, GLfloat blue);
	void glSecondaryColor3fvEXT (const GLfloat *v);
	void glSecondaryColor3iEXT (GLint red, GLint green, GLint blue);
	void glSecondaryColor3ivEXT (const GLint *v);
	void glSecondaryColor3sEXT (GLshort red, GLshort green, GLshort blue);
	void glSecondaryColor3svEXT (const GLshort *v);
	void glSecondaryColor3ubEXT (GLubyte red, GLubyte green, GLubyte blue);
	void glSecondaryColor3ubvEXT (const GLubyte *v);
	void glSecondaryColor3uiEXT (GLuint red, GLuint green, GLuint blue);
	void glSecondaryColor3uivEXT (const GLuint *v);
	void glSecondaryColor3usEXT (GLushort red, GLushort green, GLushort blue);
	void glSecondaryColor3usvEXT (const GLushort *v);
	void glSecondaryColorPointerEXT (GLint size, GLenum type, GLsizei stride, GLvoid *pointer);
	void glTexBufferEXT (GLenum target, GLenum internalformat, GLuint buffer);
	void glTexParameterIivEXT (GLenum target, GLenum pname, const GLint *params);
	void glTexParameterIuivEXT (GLenum target, GLenum pname, const GLuint *params);
	void glGetTexParameterIivEXT (GLenum target, GLenum pname, GLint *params);
	void glGetTexParameterIuivEXT (GLenum target, GLenum pname, GLuint *params);
	void glClearColorIiEXT (GLint red, GLint green, GLint blue, GLint alpha);
	void glClearColorIuiEXT (GLuint red, GLuint green, GLuint blue, GLuint alpha);
	void glGetQueryObjecti64vEXT (GLuint id, GLenum pname, GLint64EXT *params);
	void glGetQueryObjectui64vEXT (GLuint id, GLenum pname, GLuint64EXT *params);
	void glBeginVertexShaderEXT (void);
	void glEndVertexShaderEXT (void);
	void glBindVertexShaderEXT (GLuint id);
	GLuint glGenVertexShadersEXT (GLuint range);
	void glDeleteVertexShaderEXT (GLuint id);
	void glShaderOp1EXT (GLenum op, GLuint res, GLuint arg1);
	void glShaderOp2EXT (GLenum op, GLuint res, GLuint arg1, GLuint arg2);
	void glShaderOp3EXT (GLenum op, GLuint res, GLuint arg1, GLuint arg2, GLuint arg3);
	void glSwizzleEXT (GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);
	void glWriteMaskEXT (GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);
	void glInsertComponentEXT (GLuint res, GLuint src, GLuint num);
	void glExtractComponentEXT (GLuint res, GLuint src, GLuint num);
	GLuint glGenSymbolsEXT (GLenum dataType, GLenum storageType, GLenum range, GLuint components);
	void glSetInvariantEXT (GLuint id, GLenum type, GLvoid *addr);
	void glSetLocalConstantEXT (GLuint id, GLenum type, GLvoid *addr);
	void glVariantbvEXT (GLuint id, GLbyte *addr);
	void glVariantsvEXT (GLuint id, GLshort *addr);
	void glVariantivEXT (GLuint id, GLint *addr);
	void glVariantfvEXT (GLuint id, GLfloat *addr);
	void glVariantdvEXT (GLuint id, GLdouble *addr);
	void glVariantubvEXT (GLuint id, GLubyte *addr);
	void glVariantusvEXT (GLuint id, GLushort *addr);
	void glVariantuivEXT (GLuint id, GLuint *addr);
	void glVariantPointerEXT (GLuint id, GLenum type, GLuint stride, GLvoid *addr);
	void glEnableVariantClientStateEXT (GLuint id);
	void glDisableVariantClientStateEXT (GLuint id);
	GLuint glBindLightParameterEXT (GLenum light, GLenum value);
	GLuint glBindMaterialParameterEXT (GLenum face, GLenum value);
	GLuint glBindTexGenParameterEXT (GLenum unit, GLenum coord, GLenum value);
	GLuint glBindTextureUnitParameterEXT (GLenum unit, GLenum value);
	GLuint glBindParameterEXT (GLenum value);
	GLboolean glIsVariantEnabledEXT (GLuint id, GLenum cap);
	void glGetVariantBooleanvEXT (GLuint id, GLenum value, GLboolean *data);
	void glGetVariantIntegervEXT (GLuint id, GLenum value, GLint *data);
	void glGetVariantFloatvEXT (GLuint id, GLenum value, GLfloat *data);
	void glGetVariantPointervEXT (GLuint id, GLenum value, GLvoid **data);
	void glGetInvariantBooleanvEXT (GLuint id, GLenum value, GLboolean *data);
	void glGetInvariantIntegervEXT (GLuint id, GLenum value, GLint *data);
	void glGetInvariantFloatvEXT (GLuint id, GLenum value, GLfloat *data);
	void glGetLocalConstantBooleanvEXT (GLuint id, GLenum value, GLboolean *data);
	void glGetLocalConstantIntegervEXT (GLuint id, GLenum value, GLint *data);
	void glGetLocalConstantFloatvEXT (GLuint id, GLenum value, GLfloat *data);
	GLuint glBufferRegionEnabledEXT (void);
	GLuint glNewBufferRegionEXT (GLenum region);
	void glDeleteBufferRegionEXT (GLenum region);
	void glReadBufferRegionEXT (GLuint region, GLint x, GLint y, GLsizei width, GLsizei height);
	void glDrawBufferRegionEXT (GLuint region, GLint x, GLint y, GLsizei width, GLsizei height, GLint xDest, GLint yDest);
	void glDepthRangedNV (GLdouble zNear, GLdouble zFar);
	void glClearDepthdNV (GLdouble depth);
	void glDepthBoundsdNV (GLdouble zmin, GLdouble zmax);
	void glRenderbufferStorageMultisampleCoverageNV (GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);
	void glProgramVertexLimitNV (GLenum target, GLint limit);
	void glProgramLocalParameterI4iNV (GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
	void glProgramLocalParameterI4ivNV (GLenum target, GLuint index, const GLint *params);
	void glProgramLocalParametersI4ivNV (GLenum target, GLuint index, GLsizei count, const GLint *params);
	void glProgramLocalParameterI4uiNV (GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
	void glProgramLocalParameterI4uivNV (GLenum target, GLuint index, const GLuint *params);
	void glProgramLocalParametersI4uivNV (GLenum target, GLuint index, GLsizei count, const GLuint *params);
	void glProgramEnvParameterI4iNV (GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
	void glProgramEnvParameterI4ivNV (GLenum target, GLuint index, const GLint *params);
	void glProgramEnvParametersI4ivNV (GLenum target, GLuint index, GLsizei count, const GLint *params);
	void glProgramEnvParameterI4uiNV (GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
	void glProgramEnvParameterI4uivNV (GLenum target, GLuint index, const GLuint *params);
	void glProgramEnvParametersI4uivNV (GLenum target, GLuint index, GLsizei count, const GLuint *params);
	void glProgramBufferParametersfvNV (GLenum target, GLuint buffer, GLuint index, GLsizei count, const GLfloat *params);
	void glProgramBufferParametersIivNV (GLenum target, GLuint buffer, GLuint index, GLsizei count, const GLint *params);
	void glProgramBufferParametersIuivNV (GLenum target, GLuint buffer, GLuint index, GLsizei count, const GLuint *params);
	void glGetVideoi64vNV (GLuint video_slot, GLenum pname, GLint64EXT* params);
	void glGetVideoivNV (GLuint video_slot, GLenum pname, GLint* params);
	void glGetVideoui64vNV (GLuint video_slot, GLenum pname, GLuint64EXT* params);
	void glGetVideouivNV (GLuint video_slot, GLenum pname, GLuint* params);
	void glPresentFrameDualFillNV (GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLenum target1, GLuint fill1, GLenum target2, GLuint fill2, GLenum target3, GLuint fill3);
	void glPresentFrameKeyedNV (GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLuint key0, GLenum target1, GLuint fill1, GLuint key1);
	void glBeginTransformFeedbackNV (GLenum primitiveMode);
	void glEndTransformFeedbackNV (void);
	void glTransformFeedbackAttribsNV (GLuint count, const GLint *attribs, GLenum bufferMode);
	void glBindBufferRangeNV (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
	void glBindBufferOffsetNV (GLenum target, GLuint index, GLuint buffer, GLintptr offset);
	void glBindBufferBaseNV (GLenum target, GLuint index, GLuint buffer);
	void glTransformFeedbackVaryingsNV (GLuint program, GLsizei count, const GLint *locations, GLenum bufferMode);
	void glActiveVaryingNV (GLuint program, const GLchar *name);
	GLint glGetVaryingLocationNV (GLuint program, const GLchar *name);
	void glGetActiveVaryingNV (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
	void glGetTransformFeedbackVaryingNV (GLuint program, GLuint index, GLint *location);
	void glVDPAUFiniNV (void);
	void glVDPAUGetSurfaceivNV (GLvdpauSurfaceNV surface, GLenum pname, GLsizei bufSize, GLsizei* length, GLint *values);
	void glVDPAUInitNV (const void* vdpDevice, const GLvoid*getProcAddress);
	void glVDPAUIsSurfaceNV (GLvdpauSurfaceNV surface);
	void glVDPAUMapSurfacesNV (GLsizei numSurfaces, const GLvdpauSurfaceNV* surfaces);
	GLvdpauSurfaceNV glVDPAURegisterOutputSurfaceNV (const void* vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames);
	GLvdpauSurfaceNV glVDPAURegisterVideoSurfaceNV (const void* vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames);
	void glVDPAUSurfaceAccessNV (GLvdpauSurfaceNV surface, GLenum access);
	void glVDPAUUnmapSurfacesNV (GLsizei numSurface, const GLvdpauSurfaceNV* surfaces);
	void glVDPAUUnregisterSurfaceNV (GLvdpauSurfaceNV surface);
	void glReadVideoPixelsSUN (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid* pixels);
	void glDrawRangeElements (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices);
	void glTexImage3D (GLenum target, GLint level, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels);
	void glTexSubImage3D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels);
	void glCopyTexSubImage3D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
	void glActiveTexture (GLenum texture);
	void glClientActiveTexture (GLenum texture);
	void glCompressedTexImage1D (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data);
	void glCompressedTexImage2D (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);
	void glCompressedTexImage3D (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data);
	void glCompressedTexSubImage1D (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);
	void glCompressedTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);
	void glCompressedTexSubImage3D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);
	void glGetCompressedTexImage (GLenum target, GLint lod, GLvoid *img);
	void glLoadTransposeMatrixd (const GLdouble m[16]);
	void glLoadTransposeMatrixf (const GLfloat m[16]);
	void glMultTransposeMatrixd (const GLdouble m[16]);
	void glMultTransposeMatrixf (const GLfloat m[16]);
	void glMultiTexCoord1d (GLenum target, GLdouble s);
	void glMultiTexCoord1dv (GLenum target, const GLdouble *v);
	void glMultiTexCoord1f (GLenum target, GLfloat s);
	void glMultiTexCoord1fv (GLenum target, const GLfloat *v);
	void glMultiTexCoord1i (GLenum target, GLint s);
	void glMultiTexCoord1iv (GLenum target, const GLint *v);
	void glMultiTexCoord1s (GLenum target, GLshort s);
	void glMultiTexCoord1sv (GLenum target, const GLshort *v);
	void glMultiTexCoord2d (GLenum target, GLdouble s, GLdouble t);
	void glMultiTexCoord2dv (GLenum target, const GLdouble *v);
	void glMultiTexCoord2f (GLenum target, GLfloat s, GLfloat t);
	void glMultiTexCoord2fv (GLenum target, const GLfloat *v);
	void glMultiTexCoord2i (GLenum target, GLint s, GLint t);
	void glMultiTexCoord2iv (GLenum target, const GLint *v);
	void glMultiTexCoord2s (GLenum target, GLshort s, GLshort t);
	void glMultiTexCoord2sv (GLenum target, const GLshort *v);
	void glMultiTexCoord3d (GLenum target, GLdouble s, GLdouble t, GLdouble r);
	void glMultiTexCoord3dv (GLenum target, const GLdouble *v);
	void glMultiTexCoord3f (GLenum target, GLfloat s, GLfloat t, GLfloat r);
	void glMultiTexCoord3fv (GLenum target, const GLfloat *v);
	void glMultiTexCoord3i (GLenum target, GLint s, GLint t, GLint r);
	void glMultiTexCoord3iv (GLenum target, const GLint *v);
	void glMultiTexCoord3s (GLenum target, GLshort s, GLshort t, GLshort r);
	void glMultiTexCoord3sv (GLenum target, const GLshort *v);
	void glMultiTexCoord4d (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
	void glMultiTexCoord4dv (GLenum target, const GLdouble *v);
	void glMultiTexCoord4f (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
	void glMultiTexCoord4fv (GLenum target, const GLfloat *v);
	void glMultiTexCoord4i (GLenum target, GLint s, GLint t, GLint r, GLint q);
	void glMultiTexCoord4iv (GLenum target, const GLint *v);
	void glMultiTexCoord4s (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
	void glMultiTexCoord4sv (GLenum target, const GLshort *v);
	void glSampleCoverage (GLclampf value, GLboolean invert);
	void glBlendEquation (GLenum mode);
	void glBlendColor (GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);
	void glFogCoordf (GLfloat coord);
	void glFogCoordfv (const GLfloat *coord);
	void glFogCoordd (GLdouble coord);
	void glFogCoorddv (const GLdouble *coord);
	void glFogCoordPointer (GLenum type, GLsizei stride, const GLvoid *pointer);
	void glMultiDrawArrays (GLenum mode, GLint *first, GLsizei *count, GLsizei primcount);
	void glMultiDrawElements (GLenum mode, GLsizei *count, GLenum type, const GLvoid **indices, GLsizei primcount);
	void glPointParameteri (GLenum pname, GLint param);
	void glPointParameteriv (GLenum pname, const GLint *params);
	void glPointParameterf (GLenum pname, GLfloat param);
	void glPointParameterfv (GLenum pname, const GLfloat *params);
	void glSecondaryColor3b (GLbyte red, GLbyte green, GLbyte blue);
	void glSecondaryColor3bv (const GLbyte *v);
	void glSecondaryColor3d (GLdouble red, GLdouble green, GLdouble blue);
	void glSecondaryColor3dv (const GLdouble *v);
	void glSecondaryColor3f (GLfloat red, GLfloat green, GLfloat blue);
	void glSecondaryColor3fv (const GLfloat *v);
	void glSecondaryColor3i (GLint red, GLint green, GLint blue);
	void glSecondaryColor3iv (const GLint *v);
	void glSecondaryColor3s (GLshort red, GLshort green, GLshort blue);
	void glSecondaryColor3sv (const GLshort *v);
	void glSecondaryColor3ub (GLubyte red, GLubyte green, GLubyte blue);
	void glSecondaryColor3ubv (const GLubyte *v);
	void glSecondaryColor3ui (GLuint red, GLuint green, GLuint blue);
	void glSecondaryColor3uiv (const GLuint *v);
	void glSecondaryColor3us (GLushort red, GLushort green, GLushort blue);
	void glSecondaryColor3usv (const GLushort *v);
	void glSecondaryColorPointer (GLint size, GLenum type, GLsizei stride, GLvoid *pointer);
	void glBlendFuncSeparate (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
	void glWindowPos2d (GLdouble x, GLdouble y);
	void glWindowPos2f (GLfloat x, GLfloat y);
	void glWindowPos2i (GLint x, GLint y);
	void glWindowPos2s (GLshort x, GLshort y);
	void glWindowPos2dv (const GLdouble *p);
	void glWindowPos2fv (const GLfloat *p);
	void glWindowPos2iv (const GLint *p);
	void glWindowPos2sv (const GLshort *p);
	void glWindowPos3d (GLdouble x, GLdouble y, GLdouble z);
	void glWindowPos3f (GLfloat x, GLfloat y, GLfloat z);
	void glWindowPos3i (GLint x, GLint y, GLint z);
	void glWindowPos3s (GLshort x, GLshort y, GLshort z);
	void glWindowPos3dv (const GLdouble *p);
	void glWindowPos3fv (const GLfloat *p);
	void glWindowPos3iv (const GLint *p);
	void glWindowPos3sv (const GLshort *p);
	void glGenQueries (GLsizei n, GLuint* ids);
	void glDeleteQueries (GLsizei n, const GLuint* ids);
	GLboolean glIsQuery (GLuint id);
	void glBeginQuery (GLenum target, GLuint id);
	void glEndQuery (GLenum target);
	void glGetQueryiv (GLenum target, GLenum pname, GLint* params);
	void glGetQueryObjectiv (GLuint id, GLenum pname, GLint* params);
	void glGetQueryObjectuiv (GLuint id, GLenum pname, GLuint* params);
	void glBindBuffer (GLenum target, GLuint buffer);
	void glDeleteBuffers (GLsizei n, const GLuint* buffers);
	void glGenBuffers (GLsizei n, GLuint* buffers);
	GLboolean glIsBuffer (GLuint buffer);
	void glBufferData (GLenum target, GLsizeiptr size, const GLvoid* data, GLenum usage);
	void glBufferSubData (GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid* data);
	void glGetBufferSubData (GLenum target, GLintptr offset, GLsizeiptr size, GLvoid* data);
	GLvoid* glMapBuffer (GLenum target, GLenum access);
	GLboolean glUnmapBuffer (GLenum target);
	void glGetBufferParameteriv (GLenum target, GLenum pname, GLint* params);
	void glGetBufferPointerv (GLenum target, GLenum pname, GLvoid** params);
	void glBlendEquationSeparate (GLenum, GLenum);
	void glDrawBuffers (GLsizei n, const GLenum* bufs);
	void glStencilOpSeparate (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
	void glStencilFuncSeparate (GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask);
	void glStencilMaskSeparate (GLenum, GLuint);
	void glAttachShader (GLuint program, GLuint shader);
	void glBindAttribLocation (GLuint program, GLuint index, const GLchar* name);
	void glCompileShader (GLuint shader);
	GLuint glCreateProgram (void);
	GLuint glCreateShader (GLenum type);
	void glDeleteProgram (GLuint program);
	void glDeleteShader (GLuint shader);
	void glDetachShader (GLuint program, GLuint shader);
	void glDisableVertexAttribArray (GLuint);
	void glEnableVertexAttribArray (GLuint);
	void glGetActiveAttrib (GLuint program, GLuint index, GLsizei maxLength, GLsizei* length, GLint* size, GLenum* type, GLchar* name);
	void glGetActiveUniform (GLuint program, GLuint index, GLsizei maxLength, GLsizei* length, GLint* size, GLenum* type, GLchar* name);
	void glGetAttachedShaders (GLuint program, GLsizei maxCount, GLsizei* count, GLuint* shaders);
	GLint glGetAttribLocation (GLuint program, const GLchar* name);
	void glGetProgramiv (GLuint program, GLenum pname, GLint* param);
	void glGetProgramInfoLog (GLuint program, GLsizei bufSize, GLsizei* length, GLchar* infoLog);
	void glGetShaderiv (GLuint shader, GLenum pname, GLint* param);
	void glGetShaderInfoLog (GLuint shader, GLsizei bufSize, GLsizei* length, GLchar* infoLog);
	void glShaderSource (GLuint shader, GLsizei count, const GLchar** strings, const GLint* lengths);
	GLint glGetUniformLocation (GLuint program, const GLchar* name);
	void glGetUniformfv (GLuint program, GLint location, GLfloat* params);
	void glGetUniformiv (GLuint program, GLint location, GLint* params);
	void glGetVertexAttribdv (GLuint, GLenum, GLdouble*);
	void glGetVertexAttribfv (GLuint, GLenum, GLfloat*);
	void glGetVertexAttribiv (GLuint, GLenum, GLint*);
	void glGetVertexAttribPointerv (GLuint, GLenum, GLvoid*);
	GLboolean glIsProgram (GLuint program);
	GLboolean glIsShader (GLuint shader);
	void glLinkProgram (GLuint program);
	void glGetShaderSource (GLint obj, GLsizei maxLength, GLsizei* length, GLchar* source);
	void glUseProgram (GLuint program);
	void glUniform1f (GLint location, GLfloat v0);
	void glUniform1fv (GLint location, GLsizei count, const GLfloat* value);
	void glUniform1i (GLint location, GLint v0);
	void glUniform1iv (GLint location, GLsizei count, const GLint* value);
	void glUniform2f (GLint location, GLfloat v0, GLfloat v1);
	void glUniform2fv (GLint location, GLsizei count, const GLfloat* value);
	void glUniform2i (GLint location, GLint v0, GLint v1);
	void glUniform2iv (GLint location, GLsizei count, const GLint* value);
	void glUniform3f (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
	void glUniform3fv (GLint location, GLsizei count, const GLfloat* value);
	void glUniform3i (GLint location, GLint v0, GLint v1, GLint v2);
	void glUniform3iv (GLint location, GLsizei count, const GLint* value);
	void glUniform4f (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
	void glUniform4fv (GLint location, GLsizei count, const GLfloat* value);
	void glUniform4i (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
	void glUniform4iv (GLint location, GLsizei count, const GLint* value);
	void glUniformMatrix2fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
	void glUniformMatrix3fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
	void glUniformMatrix4fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
	void glValidateProgram (GLuint program);
	void glVertexAttrib1d (GLuint index, GLdouble x);
	void glVertexAttrib1dv (GLuint index, const GLdouble* v);
	void glVertexAttrib1f (GLuint index, GLfloat x);
	void glVertexAttrib1fv (GLuint index, const GLfloat* v);
	void glVertexAttrib1s (GLuint index, GLshort x);
	void glVertexAttrib1sv (GLuint index, const GLshort* v);
	void glVertexAttrib2d (GLuint index, GLdouble x, GLdouble y);
	void glVertexAttrib2dv (GLuint index, const GLdouble* v);
	void glVertexAttrib2f (GLuint index, GLfloat x, GLfloat y);
	void glVertexAttrib2fv (GLuint index, const GLfloat* v);
	void glVertexAttrib2s (GLuint index, GLshort x, GLshort y);
	void glVertexAttrib2sv (GLuint index, const GLshort* v);
	void glVertexAttrib3d (GLuint index, GLdouble x, GLdouble y, GLdouble z);
	void glVertexAttrib3dv (GLuint index, const GLdouble* v);
	void glVertexAttrib3f (GLuint index, GLfloat x, GLfloat y, GLfloat z);
	void glVertexAttrib3fv (GLuint index, const GLfloat* v);
	void glVertexAttrib3s (GLuint index, GLshort x, GLshort y, GLshort z);
	void glVertexAttrib3sv (GLuint index, const GLshort* v);
	void glVertexAttrib4Nbv (GLuint index, const GLbyte* v);
	void glVertexAttrib4Niv (GLuint index, const GLint* v);
	void glVertexAttrib4Nsv (GLuint index, const GLshort* v);
	void glVertexAttrib4Nub (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
	void glVertexAttrib4Nubv (GLuint index, const GLubyte* v);
	void glVertexAttrib4Nuiv (GLuint index, const GLuint* v);
	void glVertexAttrib4Nusv (GLuint index, const GLushort* v);
	void glVertexAttrib4bv (GLuint index, const GLbyte* v);
	void glVertexAttrib4d (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
	void glVertexAttrib4dv (GLuint index, const GLdouble* v);
	void glVertexAttrib4f (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
	void glVertexAttrib4fv (GLuint index, const GLfloat* v);
	void glVertexAttrib4iv (GLuint index, const GLint* v);
	void glVertexAttrib4s (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
	void glVertexAttrib4sv (GLuint index, const GLshort* v);
	void glVertexAttrib4ubv (GLuint index, const GLubyte* v);
	void glVertexAttrib4uiv (GLuint index, const GLuint* v);
	void glVertexAttrib4usv (GLuint index, const GLushort* v);
	void glVertexAttribPointer (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid* pointer);
	void glUniformMatrix2x3fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void glUniformMatrix3x2fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void glUniformMatrix2x4fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void glUniformMatrix4x2fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void glUniformMatrix3x4fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void glUniformMatrix4x3fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void glColorMaski (GLuint param1, GLboolean param2, GLboolean param3, GLboolean param4, GLboolean param5);
	void glGetBooleani_v (GLenum param1, GLuint param2, GLboolean* param3);
	void glEnablei (GLenum param1, GLuint param2);
	void glDisablei (GLenum param1, GLuint param2);
	GLboolean glIsEnabledi (GLenum param1, GLuint param2);
	void glBeginTransformFeedback (GLenum param1);
	void glEndTransformFeedback (void);
	void glTransformFeedbackVaryings (GLuint param1, GLsizei param2, const GLchar ** param3, GLenum param4);
	void glGetTransformFeedbackVarying (GLuint param1, GLuint param2, GLint* param3);
	void glClampColor (GLenum param1, GLenum param2);
	void glBeginConditionalRender (GLuint param1, GLenum param2);
	void glEndConditionalRender (void);
	void glVertexAttribI1i (GLuint param1, GLint param2);
	void glVertexAttribI2i (GLuint param1, GLint param2, GLint param3);
	void glVertexAttribI3i (GLuint param1, GLint param2, GLint param3, GLint param4);
	void glVertexAttribI4i (GLuint param1, GLint param2, GLint param3, GLint param4, GLint param5);
	void glVertexAttribI1ui (GLuint param1, GLuint param2);
	void glVertexAttribI2ui (GLuint param1, GLuint param2, GLuint param3);
	void glVertexAttribI3ui (GLuint param1, GLuint param2, GLuint param3, GLuint param4);
	void glVertexAttribI4ui (GLuint param1, GLuint param2, GLuint param3, GLuint param4, GLuint param5);
	void glVertexAttribI1iv (GLuint param1, const GLint* param2);
	void glVertexAttribI2iv (GLuint param1, const GLint* param2);
	void glVertexAttribI3iv (GLuint param1, const GLint* param2);
	void glVertexAttribI4iv (GLuint param1, const GLint* param2);
	void glVertexAttribI1uiv (GLuint param1, const GLuint* param2);
	void glVertexAttribI2uiv (GLuint param1, const GLuint* param2);
	void glVertexAttribI3uiv (GLuint param1, const GLuint* param2);
	void glVertexAttribI4uiv (GLuint param1, const GLuint* param2);
	void glVertexAttribI4bv (GLuint param1, const GLbyte* param2);
	void glVertexAttribI4sv (GLuint param1, const GLshort* param2);
	void glVertexAttribI4ubv (GLuint param1, const GLubyte* param2);
	void glVertexAttribI4usv (GLuint param1, const GLushort* param2);
	void glVertexAttribIPointer (GLuint param1, GLint param2, GLenum param3, GLsizei param4, const GLvoid* param5);
	void glGetVertexAttribIiv (GLuint param1, GLenum param2, GLint* param3);
	void glGetVertexAttribIuiv (GLuint param1, GLenum param2, GLuint* param3);
	void glGetUniformuiv (GLuint param1, GLint param2, GLuint* param3);
	void glBindFragDataLocation (GLuint param1, GLuint param2, const GLchar* param3);
	GLint glGetFragDataLocation (GLuint param1, const GLchar* param2);
	void glUniform1ui (GLint param1, GLuint param2);
	void glUniform2ui (GLint param1, GLuint param2, GLuint param3);
	void glUniform3ui (GLint param1, GLuint param2, GLuint param3, GLuint param4);
	void glUniform4ui (GLint param1, GLuint param2, GLuint param3, GLuint param4, GLuint param5);
	void glUniform1uiv (GLint param1, GLsizei param2, const GLuint* param3);
	void glUniform2uiv (GLint param1, GLsizei param2, const GLuint* param3);
	void glUniform3uiv (GLint param1, GLsizei param2, const GLuint* param3);
	void glUniform4uiv (GLint param1, GLsizei param2, const GLuint* param3);
	void glTexParameterIiv (GLenum param1, GLenum param2, const GLint* param3);
	void glTexParameterIuiv (GLenum param1, GLenum param2, const GLuint* param3);
	void glGetTexParameterIiv (GLenum param1, GLenum param2, GLint* param3);
	void glGetTexParameterIuiv (GLenum param1, GLenum param2, GLuint* param3);
	void glClearBufferiv (GLenum param1, GLint param2, const GLint* param3);
	void glClearBufferuiv (GLenum param1, GLint param2, const GLuint* param3);
	void glClearBufferfv (GLenum param1, GLint param2, const GLfloat* param3);
	void glClearBufferfi (GLenum param1, GLint param2, GLfloat param3, GLint param4);
	const GLubyte* glGetStringi (GLenum param1, GLuint param2);
	void glDrawArraysInstanced (GLenum param1, GLint param2, GLsizei param3, GLsizei param4);
	void glDrawElementsInstanced (GLenum param1, GLsizei param2, GLenum param3, const GLvoid* param4, GLsizei param5);
	void glTexBuffer (GLenum param1, GLenum param2, GLuint param3);
	void glPrimitiveRestartIndex (GLuint param1);
	void glGetInteger64i_v (GLenum param1, GLuint param2, GLint64 * param3);
	void glGetBufferParameteri64v (GLenum param1, GLenum param2, GLint64 * param3);
	void glFramebufferTexture (GLenum param1, GLenum param2, GLuint param3, GLint param4);
	void glVertexAttribDivisor (GLuint index, GLuint divisor);
	void glMinSampleShading (GLclampf value);
	void glBlendEquationSeparatei (GLuint buf, GLenum modeRGB, GLenum modeAlpha);
	void glBlendEquationi (GLuint buf, GLenum mode);
	void glBlendFuncSeparatei (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
	void glBlendFunci (GLuint buf, GLenum src, GLenum dst);
	 void glActiveTextureARB  (GLenum);
	void glClientActiveTextureARB  (GLenum);
	void glMultiTexCoord1dARB  (GLenum, GLdouble);
	void glMultiTexCoord1dvARB  (GLenum, const GLdouble *);
	void glMultiTexCoord1fARB  (GLenum, GLfloat);
	void glMultiTexCoord1fvARB  (GLenum, const GLfloat *);
	void glMultiTexCoord1iARB  (GLenum, GLint);
	void glMultiTexCoord1ivARB  (GLenum, const GLint *);
	void glMultiTexCoord1sARB  (GLenum, GLshort);
	void glMultiTexCoord1svARB  (GLenum, const GLshort *);
	void glMultiTexCoord2dARB  (GLenum, GLdouble, GLdouble);
	void glMultiTexCoord2dvARB  (GLenum, const GLdouble *);
	void glMultiTexCoord2fARB  (GLenum, GLfloat, GLfloat);
	void glMultiTexCoord2fvARB  (GLenum, const GLfloat *);
	void glMultiTexCoord2iARB  (GLenum, GLint, GLint);
	void glMultiTexCoord2ivARB  (GLenum, const GLint *);
	void glMultiTexCoord2sARB  (GLenum, GLshort, GLshort);
	void glMultiTexCoord2svARB  (GLenum, const GLshort *);
	void glMultiTexCoord3dARB  (GLenum, GLdouble, GLdouble, GLdouble);
	void glMultiTexCoord3dvARB  (GLenum, const GLdouble *);
	void glMultiTexCoord3fARB  (GLenum, GLfloat, GLfloat, GLfloat);
	void glMultiTexCoord3fvARB  (GLenum, const GLfloat *);
	void glMultiTexCoord3iARB  (GLenum, GLint, GLint, GLint);
	void glMultiTexCoord3ivARB  (GLenum, const GLint *);
	void glMultiTexCoord3sARB  (GLenum, GLshort, GLshort, GLshort);
	void glMultiTexCoord3svARB  (GLenum, const GLshort *);
	void glMultiTexCoord4dARB  (GLenum, GLdouble, GLdouble, GLdouble, GLdouble);
	void glMultiTexCoord4dvARB  (GLenum, const GLdouble *);
	void glMultiTexCoord4fARB  (GLenum, GLfloat, GLfloat, GLfloat, GLfloat);
	void glMultiTexCoord4fvARB  (GLenum, const GLfloat *);
	void glMultiTexCoord4iARB  (GLenum, GLint, GLint, GLint, GLint);
	void glMultiTexCoord4ivARB  (GLenum, const GLint *);
	void glMultiTexCoord4sARB  (GLenum, GLshort, GLshort, GLshort, GLshort);
	void glMultiTexCoord4svARB  (GLenum, const GLshort *);
	void glLoadTransposeMatrixfARB  (const GLfloat *);
	void glLoadTransposeMatrixdARB  (const GLdouble *);
	void glMultTransposeMatrixfARB  (const GLfloat *);
	void glMultTransposeMatrixdARB  (const GLdouble *);
	void glSampleCoverageARB  (GLclampf, GLboolean);
	void glSamplePassARB  (GLenum);
	void glCompressedTexImage3DARB  (GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, const GLvoid *);
	void glCompressedTexImage2DARB  (GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, const GLvoid *);
	void glCompressedTexImage1DARB  (GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, const GLvoid *);
	void glCompressedTexSubImage3DARB  (GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, const GLvoid *);
	void glCompressedTexSubImage2DARB  (GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, const GLvoid *);
	void glCompressedTexSubImage1DARB  (GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, const GLvoid *);
	void glGetCompressedTexImageARB  (GLenum, GLint, GLvoid *);
	void glWeightbvARB (GLint, const GLbyte *);
	void glWeightsvARB (GLint, const GLshort *);
	void glWeightivARB (GLint, const GLint *);
	void glWeightfvARB (GLint, const GLfloat *);
	void glWeightdvARB (GLint, const GLdouble *);
	void glWeightubvARB (GLint, const GLubyte *);
	void glWeightusvARB (GLint, const GLushort *);
	void glWeightuivARB (GLint, const GLuint *);
	void glWeightPointerARB (GLint, GLenum, GLsizei, const GLvoid *);
	void glVertexBlendARB (GLint);
	void glWindowPos2dARB  (GLdouble, GLdouble);
	void glWindowPos2dvARB  (const GLdouble *);
	void glWindowPos2fARB  (GLfloat, GLfloat);
	void glWindowPos2fvARB  (const GLfloat *);
	void glWindowPos2iARB  (GLint, GLint);
	void glWindowPos2ivARB  (const GLint *);
	void glWindowPos2sARB  (GLshort, GLshort);
	void glWindowPos2svARB  (const GLshort *);
	void glWindowPos3dARB  (GLdouble, GLdouble, GLdouble);
	void glWindowPos3dvARB  (const GLdouble *);
	void glWindowPos3fARB  (GLfloat, GLfloat, GLfloat);
	void glWindowPos3fvARB  (const GLfloat *);
	void glWindowPos3iARB  (GLint, GLint, GLint);
	void glWindowPos3ivARB  (const GLint *);
	void glWindowPos3sARB  (GLshort, GLshort, GLshort);
	void glWindowPos3svARB  (const GLshort *);
	void glGenQueriesARB (GLsizei n, GLuint *ids);
	void glDeleteQueriesARB (GLsizei n, const GLuint *ids);
	GLboolean glIsQueryARB (GLuint id);
	void glBeginQueryARB (GLenum target, GLuint id);
	void glEndQueryARB (GLenum target);
	void glGetQueryivARB (GLenum target, GLenum pname, GLint *params);
	void glGetQueryObjectivARB (GLuint id, GLenum pname, GLint *params);
	void glGetQueryObjectuivARB (GLuint id, GLenum pname, GLuint *params);
	void glPointParameterfARB (GLenum pname, GLfloat param);
	void glPointParameterfvARB (GLenum pname, const GLfloat *params);
	void glBindProgramARB (GLenum target, GLuint program);
	void glDeleteProgramsARB (GLsizei n, const GLuint *programs);
	void glGenProgramsARB (GLsizei n, GLuint *programs);
	GLboolean glIsProgramARB (GLuint program);
	void glProgramEnvParameter4dARB (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
	void glProgramEnvParameter4dvARB (GLenum target, GLuint index, const GLdouble *params);
	void glProgramEnvParameter4fARB (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
	void glProgramEnvParameter4fvARB (GLenum target, GLuint index, const GLfloat *params);
	void glProgramLocalParameter4dARB (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
	void glProgramLocalParameter4dvARB (GLenum target, GLuint index, const GLdouble *params);
	void glProgramLocalParameter4fARB (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
	void glProgramLocalParameter4fvARB (GLenum target, GLuint index, const GLfloat *params);
	void glGetProgramEnvParameterdvARB (GLenum target, GLuint index, GLdouble *params);
	void glGetProgramEnvParameterfvARB (GLenum target, GLuint index, GLfloat *params);
	void glProgramEnvParameters4fvEXT (GLenum target, GLuint index, GLsizei count, const GLfloat *params);
	void glProgramLocalParameters4fvEXT (GLenum target, GLuint index, GLsizei count, const GLfloat *params);
	void glGetProgramLocalParameterdvARB (GLenum target, GLuint index, GLdouble *params);
	void glGetProgramLocalParameterfvARB (GLenum target, GLuint index, GLfloat *params);
	void glProgramStringARB (GLenum target, GLenum format, GLsizei len, const GLvoid *string);
	void glGetProgramStringARB (GLenum target, GLenum pname, GLvoid *string);
	void glGetProgramivARB (GLenum target, GLenum pname, GLint *params);
	void glVertexAttrib1dARB (GLuint index, GLdouble x);
	void glVertexAttrib1dvARB (GLuint index, const GLdouble *v);
	void glVertexAttrib1fARB (GLuint index, GLfloat x);
	void glVertexAttrib1fvARB (GLuint index, const GLfloat *v);
	void glVertexAttrib1sARB (GLuint index, GLshort x);
	void glVertexAttrib1svARB (GLuint index, const GLshort *v);
	void glVertexAttrib2dARB (GLuint index, GLdouble x, GLdouble y);
	void glVertexAttrib2dvARB (GLuint index, const GLdouble *v);
	void glVertexAttrib2fARB (GLuint index, GLfloat x, GLfloat y);
	void glVertexAttrib2fvARB (GLuint index, const GLfloat *v);
	void glVertexAttrib2sARB (GLuint index, GLshort x, GLshort y);
	void glVertexAttrib2svARB (GLuint index, const GLshort *v);
	void glVertexAttrib3dARB (GLuint index, GLdouble x, GLdouble y, GLdouble z);
	void glVertexAttrib3dvARB (GLuint index, const GLdouble *v);
	void glVertexAttrib3fARB (GLuint index, GLfloat x, GLfloat y, GLfloat z);
	void glVertexAttrib3fvARB (GLuint index, const GLfloat *v);
	void glVertexAttrib3sARB (GLuint index, GLshort x, GLshort y, GLshort z);
	void glVertexAttrib3svARB (GLuint index, const GLshort *v);
	void glVertexAttrib4NbvARB (GLuint index, const GLbyte *v);
	void glVertexAttrib4NivARB (GLuint index, const GLint *v);
	void glVertexAttrib4NsvARB (GLuint index, const GLshort *v);
	void glVertexAttrib4NubARB (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
	void glVertexAttrib4NubvARB (GLuint index, const GLubyte *v);
	void glVertexAttrib4NuivARB (GLuint index, const GLuint *v);
	void glVertexAttrib4NusvARB (GLuint index, const GLushort *v);
	void glVertexAttrib4bvARB (GLuint index, const GLbyte *v);
	void glVertexAttrib4dARB (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
	void glVertexAttrib4dvARB (GLuint index, const GLdouble *v);
	void glVertexAttrib4fARB (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
	void glVertexAttrib4fvARB (GLuint index, const GLfloat *v);
	void glVertexAttrib4ivARB (GLuint index, const GLint *v);
	void glVertexAttrib4sARB (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
	void glVertexAttrib4svARB (GLuint index, const GLshort *v);
	void glVertexAttrib4ubvARB (GLuint index, const GLubyte *v);
	void glVertexAttrib4uivARB (GLuint index, const GLuint *v);
	void glVertexAttrib4usvARB (GLuint index, const GLushort *v);
	void glVertexAttribPointerARB (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid *pointer);
	void glDisableVertexAttribArrayARB (GLuint index);
	void glEnableVertexAttribArrayARB (GLuint index);
	void glGetVertexAttribPointervARB (GLuint index, GLenum pname, GLvoid **pointer);
	void glGetVertexAttribdvARB (GLuint index, GLenum pname, GLdouble *params);
	void glGetVertexAttribfvARB (GLuint index, GLenum pname, GLfloat *params);
	void glGetVertexAttribivARB (GLuint index, GLenum pname, GLint *params);
	void glDeleteObjectARB (GLhandleARB obj);
	GLhandleARB glGetHandleARB (GLenum pname);
	void glDetachObjectARB (GLhandleARB containerObj, GLhandleARB attachedObj);
	GLhandleARB glCreateShaderObjectARB (GLenum shaderType);
	void glShaderSourceARB (GLhandleARB shaderObj, GLsizei count, const GLcharARB **string, const GLint *length);
	void glCompileShaderARB (GLhandleARB shaderObj);
	GLhandleARB glCreateProgramObjectARB (void);
	void glAttachObjectARB (GLhandleARB containerObj, GLhandleARB obj);
	void glLinkProgramARB (GLhandleARB programObj);
	void glUseProgramObjectARB (GLhandleARB programObj);
	void glValidateProgramARB (GLhandleARB programObj);
	void glUniform1fARB (GLint location, GLfloat v0);
	void glUniform2fARB (GLint location, GLfloat v0, GLfloat v1);
	void glUniform3fARB (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
	void glUniform4fARB (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
	void glUniform1iARB (GLint location, GLint v0);
	void glUniform2iARB (GLint location, GLint v0, GLint v1);
	void glUniform3iARB (GLint location, GLint v0, GLint v1, GLint v2);
	void glUniform4iARB (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
	void glUniform1fvARB (GLint location, GLsizei count, const GLfloat *value);
	void glUniform2fvARB (GLint location, GLsizei count, const GLfloat *value);
	void glUniform3fvARB (GLint location, GLsizei count, const GLfloat *value);
	void glUniform4fvARB (GLint location, GLsizei count, const GLfloat *value);
	void glUniform1ivARB (GLint location, GLsizei count, const GLint *value);
	void glUniform2ivARB (GLint location, GLsizei count, const GLint *value);
	void glUniform3ivARB (GLint location, GLsizei count, const GLint *value);
	void glUniform4ivARB (GLint location, GLsizei count, const GLint *value);
	void glUniformMatrix2fvARB (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void glUniformMatrix3fvARB (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void glUniformMatrix4fvARB (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void glGetObjectParameterfvARB (GLhandleARB obj, GLenum pname, GLfloat *params);
	void glGetObjectParameterivARB (GLhandleARB obj, GLenum pname, GLint *params);
	void glGetInfoLogARB (GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *infoLog);
	void glGetAttachedObjectsARB (GLhandleARB containerObj, GLsizei maxCount, GLsizei *count, GLhandleARB *obj);
	GLint glGetUniformLocationARB (GLhandleARB programObj, const GLcharARB *name);
	void glGetActiveUniformARB (GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name);
	void glGetUniformfvARB (GLhandleARB programObj, GLint location, GLfloat *params);
	void glGetUniformivARB (GLhandleARB programObj, GLint location, GLint *params);
	void glGetShaderSourceARB (GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *source);
	void glBindAttribLocationARB (GLhandleARB programObj, GLuint index, const GLcharARB *name);
	void glGetActiveAttribARB (GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name);
	GLint glGetAttribLocationARB (GLhandleARB programObj, const GLcharARB *name);
	void glBindBufferARB (GLenum target, GLuint buffer);
	void glDeleteBuffersARB (GLsizei n, const GLuint *buffers);
	void glGenBuffersARB (GLsizei n, GLuint *buffers);
	GLboolean glIsBufferARB (GLuint buffer);
	void glBufferDataARB (GLenum target, GLsizeiptrARB size, const GLvoid *data, GLenum usage);
	void glBufferSubDataARB (GLenum target, GLintptrARB offset, GLsizeiptrARB size, const GLvoid *data);
	void glGetBufferSubDataARB (GLenum target, GLintptrARB offset, GLsizeiptrARB size, GLvoid *data);
	GLboolean glUnmapBufferARB (GLenum target);
	void glGetBufferParameterivARB (GLenum target, GLenum pname, GLint *params);
	void glGetBufferPointervARB (GLenum target, GLenum pname, GLvoid **params);
	void glDrawBuffersARB (GLsizei n, const GLenum *bufs);
	void glClampColorARB (GLenum target, GLenum clamp);
	void glDrawArraysInstancedARB (GLenum mode, GLint first, GLsizei count, GLsizei primcount);
	void glDrawElementsInstancedARB (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei primcount);
	void glVertexAttribDivisorARB (GLuint index, GLuint divisor);
	void glGetUniformIndices (GLuint program, GLsizei uniformCount, const GLchar** uniformNames, GLuint* uniformIndices);
	void glGetActiveUniformsiv (GLuint program, GLsizei uniformCount, const GLuint* uniformIndices, GLenum pname, GLint* params);
	void glGetActiveUniformName (GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei* length, GLchar* uniformName);
	GLuint glGetUniformBlockIndex (GLuint program, const GLchar* uniformBlockName);
	void glGetActiveUniformBlockiv (GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint* params);
	void glGetActiveUniformBlockName (GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei* length, GLchar* uniformBlockName);
	void glBindBufferRange (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
	void glBindBufferBase (GLenum target, GLuint index, GLuint buffer);
	void glGetIntegeri_v (GLenum pname, GLuint index, GLint* data);
	void glUniformBlockBinding (GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);
	void glBlendColorEXT  (GLclampf, GLclampf, GLclampf, GLclampf);
	void glBlendEquationEXT  (GLenum);
	void glLockArraysEXT  (GLint, GLsizei);
	void glUnlockArraysEXT  (void);
	void glDrawRangeElementsEXT  (GLenum, GLuint, GLuint, GLsizei, GLenum, const GLvoid *);
	void glSecondaryColor3bEXT  (GLbyte, GLbyte, GLbyte);
	void glSecondaryColor3bvEXT  (const GLbyte *);
	void glSecondaryColor3dEXT  (GLdouble, GLdouble, GLdouble);
	void glSecondaryColor3dvEXT  (const GLdouble *);
	void glSecondaryColor3fEXT  (GLfloat, GLfloat, GLfloat);
	void glSecondaryColor3fvEXT  (const GLfloat *);
	void glSecondaryColor3iEXT  (GLint, GLint, GLint);
	void glSecondaryColor3ivEXT  (const GLint *);
	void glSecondaryColor3sEXT  (GLshort, GLshort, GLshort);
	void glSecondaryColor3svEXT  (const GLshort *);
	void glSecondaryColor3ubEXT  (GLubyte, GLubyte, GLubyte);
	void glSecondaryColor3ubvEXT  (const GLubyte *);
	void glSecondaryColor3uiEXT  (GLuint, GLuint, GLuint);
	void glSecondaryColor3uivEXT  (const GLuint *);
	void glSecondaryColor3usEXT  (GLushort, GLushort, GLushort);
	void glSecondaryColor3usvEXT  (const GLushort *);
	void glSecondaryColorPointerEXT  (GLint, GLenum, GLsizei, const GLvoid *);
	void glMultiDrawArraysEXT  (GLenum, const GLint *, const GLsizei *, GLsizei);
	void glMultiDrawElementsEXT  (GLenum, const GLsizei *, GLenum, const GLvoid* *, GLsizei);
	void glFogCoordfEXT  (GLfloat);
	void glFogCoordfvEXT  (const GLfloat *);
	void glFogCoorddEXT  (GLdouble);
	void glFogCoorddvEXT  (const GLdouble *);
	void glFogCoordPointerEXT  (GLenum, GLsizei, const GLvoid *);
	void glBlendFuncSeparateEXT  (GLenum, GLenum, GLenum, GLenum);
	void glActiveStencilFaceEXT (GLenum face);
	void glDepthBoundsEXT (GLclampd zmin, GLclampd zmax);
	void glBlendEquationSeparateEXT (GLenum modeRGB, GLenum modeAlpha);
	GLboolean glIsRenderbufferEXT (GLuint renderbuffer);
	void glBindRenderbufferEXT (GLenum target, GLuint renderbuffer);
	void glDeleteRenderbuffersEXT (GLsizei n, const GLuint *renderbuffers);
	void glGenRenderbuffersEXT (GLsizei n, GLuint *renderbuffers);
	void glRenderbufferStorageEXT (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
	void glGetRenderbufferParameterivEXT (GLenum target, GLenum pname, GLint *params);
	GLboolean glIsFramebufferEXT (GLuint framebuffer);
	void glBindFramebufferEXT (GLenum target, GLuint framebuffer);
	void glDeleteFramebuffersEXT (GLsizei n, const GLuint *framebuffers);
	void glGenFramebuffersEXT (GLsizei n, GLuint *framebuffers);
	GLenum glCheckFramebufferStatusEXT (GLenum target);
	void glFramebufferTexture1DEXT (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
	void glFramebufferTexture2DEXT (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
	void glFramebufferTexture3DEXT (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
	void glFramebufferRenderbufferEXT (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
	void glGetFramebufferAttachmentParameterivEXT (GLenum target, GLenum attachment, GLenum pname, GLint *params);
	void glGenerateMipmapEXT (GLenum target);
	void glBlitFramebufferEXT (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
	void glRenderbufferStorageMultisampleEXT (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
	void glProgramParameteriEXT (GLuint program, GLenum pname, GLint value);
	void glFramebufferTextureEXT (GLenum target, GLenum attachment, GLuint texture, GLint level);
	void glFramebufferTextureFaceEXT (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
	void glFramebufferTextureLayerEXT (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
	GLboolean glIsRenderbuffer  (GLuint);
	void glBindRenderbuffer  (GLenum, GLuint);
	void glDeleteRenderbuffers  (GLsizei, const GLuint *);
	void glGenRenderbuffers  (GLsizei, GLuint *);
	void glRenderbufferStorage  (GLenum, GLenum, GLsizei, GLsizei);
	void glGetRenderbufferParameteriv  (GLenum, GLenum, GLint *);
	GLboolean glIsFramebuffer  (GLuint);
	void glBindFramebuffer  (GLenum, GLuint);
	void glDeleteFramebuffers  (GLsizei, const GLuint *);
	void glGenFramebuffers  (GLsizei, GLuint *);
	GLenum glCheckFramebufferStatus  (GLenum);
	void glFramebufferTexture1D  (GLenum, GLenum, GLenum, GLuint, GLint);
	void glFramebufferTexture2D  (GLenum, GLenum, GLenum, GLuint, GLint);
	void glFramebufferTexture3D  (GLenum, GLenum, GLenum, GLuint, GLint, GLint);
	void glFramebufferRenderbuffer  (GLenum, GLenum, GLenum, GLuint);
	void glGetFramebufferAttachmentParameteriv  (GLenum, GLenum, GLenum, GLint *);
	void glGenerateMipmap  (GLenum);
	void glBlitFramebuffer  (GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum);
	void glRenderbufferStorageMultisample  (GLenum, GLsizei, GLenum, GLsizei, GLsizei);
	void glFramebufferTextureLayer  (GLenum, GLenum, GLuint, GLint, GLint);
	void glBindBufferRangeEXT (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
	void glBindBufferOffsetEXT (GLenum target, GLuint index, GLuint buffer, GLintptr offset);
	void glBindBufferBaseEXT (GLenum target, GLuint index, GLuint buffer);
	void glBeginTransformFeedbackEXT (GLenum primitiveMode);
	void glEndTransformFeedbackEXT (void);
	void glTransformFeedbackVaryingsEXT (GLuint program, GLsizei count, const GLchar **varyings, GLenum bufferMode);
	void glGetTransformFeedbackVaryingEXT (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
	void glGetIntegerIndexedvEXT (GLenum param, GLuint index, GLint *values);
	void glGetBooleanIndexedvEXT (GLenum param, GLuint index, GLboolean *values);
	void glUniformBufferEXT (GLuint program, GLint location, GLuint buffer);
	GLint glGetUniformBufferSizeEXT (GLuint program, GLint location);
	GLintptr glGetUniformOffsetEXT (GLuint program, GLint location);
	void glClearColorIiEXT ( GLint r, GLint g, GLint b, GLint a );
	void glClearColorIuiEXT ( GLuint r, GLuint g, GLuint b, GLuint a );
	void glTexParameterIivEXT ( GLenum target, GLenum pname, GLint *params );
	void glTexParameterIuivEXT ( GLenum target, GLenum pname, GLuint *params );
	void glGetTexParameterIivEXT ( GLenum target, GLenum pname, GLint *params);
	void glGetTexParameterIuivEXT ( GLenum target, GLenum pname, GLuint *params);
	void glVertexAttribI1iEXT (GLuint index, GLint x);
	void glVertexAttribI2iEXT (GLuint index, GLint x, GLint y);
	void glVertexAttribI3iEXT (GLuint index, GLint x, GLint y, GLint z);
	void glVertexAttribI4iEXT (GLuint index, GLint x, GLint y, GLint z, GLint w);
	void glVertexAttribI1uiEXT (GLuint index, GLuint x);
	void glVertexAttribI2uiEXT (GLuint index, GLuint x, GLuint y);
	void glVertexAttribI3uiEXT (GLuint index, GLuint x, GLuint y, GLuint z);
	void glVertexAttribI4uiEXT (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
	void glVertexAttribI1ivEXT (GLuint index, const GLint *v);
	void glVertexAttribI2ivEXT (GLuint index, const GLint *v);
	void glVertexAttribI3ivEXT (GLuint index, const GLint *v);
	void glVertexAttribI4ivEXT (GLuint index, const GLint *v);
	void glVertexAttribI1uivEXT (GLuint index, const GLuint *v);
	void glVertexAttribI2uivEXT (GLuint index, const GLuint *v);
	void glVertexAttribI3uivEXT (GLuint index, const GLuint *v);
	void glVertexAttribI4uivEXT (GLuint index, const GLuint *v);
	void glVertexAttribI4bvEXT (GLuint index, const GLbyte *v);
	void glVertexAttribI4svEXT (GLuint index, const GLshort *v);
	void glVertexAttribI4ubvEXT (GLuint index, const GLubyte *v);
	void glVertexAttribI4usvEXT (GLuint index, const GLushort *v);
	void glVertexAttribIPointerEXT (GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
	void glGetVertexAttribIivEXT (GLuint index, GLenum pname, GLint *params);
	void glGetVertexAttribIuivEXT (GLuint index, GLenum pname, GLuint *params);
	void glUniform1uiEXT (GLint location, GLuint v0);
	void glUniform2uiEXT (GLint location, GLuint v0, GLuint v1);
	void glUniform3uiEXT (GLint location, GLuint v0, GLuint v1, GLuint v2);
	void glUniform4uiEXT (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
	void glUniform1uivEXT (GLint location, GLsizei count, const GLuint *value);
	void glUniform2uivEXT (GLint location, GLsizei count, const GLuint *value);
	void glUniform3uivEXT (GLint location, GLsizei count, const GLuint *value);
	void glUniform4uivEXT (GLint location, GLsizei count, const GLuint *value);
	void glGetUniformuivEXT (GLuint program, GLint location, GLuint *params);
	void glBindFragDataLocationEXT (GLuint program, GLuint colorNumber, const GLchar *name);
	GLint glGetFragDataLocationEXT (GLuint program, const GLchar *name);
	void glColorMaskIndexedEXT (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
	void glEnableIndexedEXT (GLenum target, GLuint index);
	void glDisableIndexedEXT (GLenum target, GLuint index);
	GLboolean glIsEnabledIndexedEXT (GLenum target, GLuint index);
	void glProvokingVertexEXT (GLenum mode);
	void glTextureRangeAPPLE (GLenum target, GLsizei length, const GLvoid *pointer);
	void glGetTexParameterPointervAPPLE (GLenum target, GLenum pname, GLvoid **params);
	void glVertexArrayRangeAPPLE (GLsizei length, const GLvoid *pointer);
	void glFlushVertexArrayRangeAPPLE (GLsizei length, const GLvoid *pointer);
	void glVertexArrayParameteriAPPLE (GLenum pname, GLint param);
	void glBindVertexArrayAPPLE (GLuint id);
	void glDeleteVertexArraysAPPLE (GLsizei n, const GLuint *ids);
	void glGenVertexArraysAPPLE (GLsizei n, GLuint *ids);
	GLboolean glIsVertexArrayAPPLE (GLuint id);
	void glGenFencesAPPLE (GLsizei n, GLuint *fences);
	void glDeleteFencesAPPLE (GLsizei n, const GLuint *fences);
	void glSetFenceAPPLE (GLuint fence);
	GLboolean glIsFenceAPPLE (GLuint fence);
	GLboolean glTestFenceAPPLE (GLuint fence);
	void glFinishFenceAPPLE (GLuint fence);
	GLboolean glTestObjectAPPLE (GLenum object, GLuint name);
	void glFinishObjectAPPLE (GLenum object, GLuint name);
	void glElementPointerAPPLE (GLenum type, const GLvoid *pointer);
	void glDrawElementArrayAPPLE (GLenum mode, GLint first, GLsizei count);
	void glDrawRangeElementArrayAPPLE (GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count);
	void glMultiDrawElementArrayAPPLE (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);
	void glMultiDrawRangeElementArrayAPPLE (GLenum mode, GLuint start, GLuint end, const GLint *first, const GLsizei *count, GLsizei primcount);
	void glFlushRenderAPPLE (void);
	void glFinishRenderAPPLE (void);
	void glSwapAPPLE (void);
	void glEnableVertexAttribAPPLE (GLuint index, GLenum pname);
	void glDisableVertexAttribAPPLE (GLuint index, GLenum pname);
	GLboolean glIsVertexAttribEnabledAPPLE (GLuint index, GLenum pname);
	void glMapVertexAttrib1dAPPLE (GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble *points);
	void glMapVertexAttrib1fAPPLE (GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points);
	void glMapVertexAttrib2dAPPLE (GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble *points);
	void glMapVertexAttrib2fAPPLE (GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points);
	void glBufferParameteriAPPLE (GLenum target, GLenum pname, GLint param);
	void glFlushMappedBufferRangeAPPLE (GLenum target, GLintptr offset, GLsizeiptr size);
	GLenum glObjectPurgeableAPPLE (GLenum objectType, GLuint name, GLenum option);
	GLenum glObjectUnpurgeableAPPLE (GLenum objectType, GLuint name, GLenum option);
	void glGetObjectParameterivAPPLE (GLenum objectType, GLuint name, GLenum pname, GLint* params);
	void glPNTrianglesiATI (GLenum pname, GLint param);
	void glPNTrianglesfATI (GLenum pname, GLfloat param);
	void glBlendEquationSeparateATI (GLenum equationRGB, GLenum equationAlpha);
	void glStencilOpSeparateATI (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
	void glStencilFuncSeparateATI (GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask);
	void glPNTrianglesiATIX (GLenum pname, GLint param);
	void glPNTrianglesfATIX (GLenum pname, GLfloat param);
	void glPointParameteriNV (GLenum pname, GLint param);
	void glPointParameterivNV (GLenum pname, const GLint *params);
	void glBeginConditionalRenderNV  (GLuint id, GLenum mode);
	void glEndConditionalRenderNV  (void);
	void glAccum  (GLenum op, GLfloat value);
	void glAlphaFunc  (GLenum func, GLclampf ref);
	GLboolean glAreTexturesResident  (GLsizei n, const GLuint *textures, GLboolean *residences);
	void glArrayElement  (GLint i);
	void glBegin  (GLenum mode);
	void glBindTexture  (GLenum target, GLuint texture);
	void glBitmap  (GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, const GLubyte *bitmap);
	void glBlendColor  (GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);
	void glBlendEquation  (GLenum mode);
	void glBlendEquationSeparate (GLenum modeRGB, GLenum modeAlpha);
	void glBlendFunc  (GLenum sfactor, GLenum dfactor);
	void glCallList  (GLuint list);
	void glCallLists  (GLsizei n, GLenum type, const GLvoid *lists);
	void glClear  (GLbitfield mask);
	void glClearAccum  (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
	void glClearColor  (GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);
	void glClearDepth  (GLclampd depth);
	void glClearIndex  (GLfloat c);
	void glClearStencil  (GLint s);
	void glClipPlane  (GLenum plane, const GLdouble *equation);
	void glColor3b  (GLbyte red, GLbyte green, GLbyte blue);
	void glColor3bv  (const GLbyte *v);
	void glColor3d  (GLdouble red, GLdouble green, GLdouble blue);
	void glColor3dv  (const GLdouble *v);
	void glColor3f  (GLfloat red, GLfloat green, GLfloat blue);
	void glColor3fv  (const GLfloat *v);
	void glColor3i  (GLint red, GLint green, GLint blue);
	void glColor3iv  (const GLint *v);
	void glColor3s  (GLshort red, GLshort green, GLshort blue);
	void glColor3sv  (const GLshort *v);
	void glColor3ub  (GLubyte red, GLubyte green, GLubyte blue);
	void glColor3ubv  (const GLubyte *v);
	void glColor3ui  (GLuint red, GLuint green, GLuint blue);
	void glColor3uiv  (const GLuint *v);
	void glColor3us  (GLushort red, GLushort green, GLushort blue);
	void glColor3usv  (const GLushort *v);
	void glColor4b  (GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha);
	void glColor4bv  (const GLbyte *v);
	void glColor4d  (GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha);
	void glColor4dv  (const GLdouble *v);
	void glColor4f  (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
	void glColor4fv  (const GLfloat *v);
	void glColor4i  (GLint red, GLint green, GLint blue, GLint alpha);
	void glColor4iv  (const GLint *v);
	void glColor4s  (GLshort red, GLshort green, GLshort blue, GLshort alpha);
	void glColor4sv  (const GLshort *v);
	void glColor4ub  (GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha);
	void glColor4ubv  (const GLubyte *v);
	void glColor4ui  (GLuint red, GLuint green, GLuint blue, GLuint alpha);
	void glColor4uiv  (const GLuint *v);
	void glColor4us  (GLushort red, GLushort green, GLushort blue, GLushort alpha);
	void glColor4usv  (const GLushort *v);
	void glColorMask  (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
	void glColorMaterial  (GLenum face, GLenum mode);
	void glColorPointer  (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
	void glColorSubTable  (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const GLvoid *data);
	void glColorTable  (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *table);
	void glColorTableParameterfv  (GLenum target, GLenum pname, const GLfloat *params);
	void glColorTableParameteriv  (GLenum target, GLenum pname, const GLint *params);
	void glConvolutionFilter1D  (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *image);
	void glConvolutionFilter2D  (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *image);
	void glConvolutionParameterf  (GLenum target, GLenum pname, GLfloat params);
	void glConvolutionParameterfv  (GLenum target, GLenum pname, const GLfloat *params);
	void glConvolutionParameteri  (GLenum target, GLenum pname, GLint params);
	void glConvolutionParameteriv  (GLenum target, GLenum pname, const GLint *params);
	void glCopyColorSubTable  (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);
	void glCopyColorTable  (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
	void glCopyConvolutionFilter1D  (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
	void glCopyConvolutionFilter2D  (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);
	void glCopyPixels  (GLint x, GLint y, GLsizei width, GLsizei height, GLenum type);
	void glCopyTexImage1D  (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
	void glCopyTexImage2D  (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
	void glCopyTexSubImage1D  (GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
	void glCopyTexSubImage2D  (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
	void glCopyTexSubImage3D  (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
	void glCullFace  (GLenum mode);
	void glDeleteLists  (GLuint list, GLsizei range);
	void glDeleteTextures  (GLsizei n, const GLuint *textures);
	void glDepthFunc  (GLenum func);
	void glDepthMask  (GLboolean flag);
	void glDepthRange  (GLclampd zNear, GLclampd zFar);
	void glDisable  (GLenum cap);
	void glDisableClientState  (GLenum array);
	void glDrawArrays  (GLenum mode, GLint first, GLsizei count);
	void glDrawBuffer  (GLenum mode);
	void glDrawElements  (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices);
	void glDrawPixels  (GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels);
	void glDrawRangeElements  (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices);
	void glEdgeFlag  (GLboolean flag);
	void glEdgeFlagPointer  (GLsizei stride, const GLvoid *pointer);
	void glEdgeFlagv  (const GLboolean *flag);
	void glEnable  (GLenum cap);
	void glEnableClientState  (GLenum array);
	void glEnd  (void);
	void glEndList  (void);
	void glEvalCoord1d  (GLdouble u);
	void glEvalCoord1dv  (const GLdouble *u);
	void glEvalCoord1f  (GLfloat u);
	void glEvalCoord1fv  (const GLfloat *u);
	void glEvalCoord2d  (GLdouble u, GLdouble v);
	void glEvalCoord2dv  (const GLdouble *u);
	void glEvalCoord2f  (GLfloat u, GLfloat v);
	void glEvalCoord2fv  (const GLfloat *u);
	void glEvalMesh1  (GLenum mode, GLint i1, GLint i2);
	void glEvalMesh2  (GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2);
	void glEvalPoint1  (GLint i);
	void glEvalPoint2  (GLint i, GLint j);
	void glFeedbackBuffer  (GLsizei size, GLenum type, GLfloat *buffer);
	void glFinish  (void);
	void glFlush  (void);
	void glFogf  (GLenum pname, GLfloat param);
	void glFogfv  (GLenum pname, const GLfloat *params);
	void glFogi  (GLenum pname, GLint param);
	void glFogiv  (GLenum pname, const GLint *params);
	void glFrontFace  (GLenum mode);
	void glFrustum  (GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
	GLuint glGenLists  (GLsizei range);
	void glGenTextures  (GLsizei n, GLuint *textures);
	void glGetBooleanv  (GLenum pname, GLboolean *params);
	void glGetClipPlane  (GLenum plane, GLdouble *equation);
	void glGetColorTable  (GLenum target, GLenum format, GLenum type, GLvoid *table);
	void glGetColorTableParameterfv  (GLenum target, GLenum pname, GLfloat *params);
	void glGetColorTableParameteriv  (GLenum target, GLenum pname, GLint *params);
	void glGetConvolutionFilter  (GLenum target, GLenum format, GLenum type, GLvoid *image);
	void glGetConvolutionParameterfv  (GLenum target, GLenum pname, GLfloat *params);
	void glGetConvolutionParameteriv  (GLenum target, GLenum pname, GLint *params);
	void glGetDoublev  (GLenum pname, GLdouble *params);
	GLenum glGetError  (void);
	void glGetFloatv  (GLenum pname, GLfloat *params);
	void glGetHistogram  (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);
	void glGetHistogramParameterfv  (GLenum target, GLenum pname, GLfloat *params);
	void glGetHistogramParameteriv  (GLenum target, GLenum pname, GLint *params);
	void glGetIntegerv  (GLenum pname, GLint *params);
	void glGetLightfv  (GLenum light, GLenum pname, GLfloat *params);
	void glGetLightiv  (GLenum light, GLenum pname, GLint *params);
	void glGetMapdv  (GLenum target, GLenum query, GLdouble *v);
	void glGetMapfv  (GLenum target, GLenum query, GLfloat *v);
	void glGetMapiv  (GLenum target, GLenum query, GLint *v);
	void glGetMaterialfv  (GLenum face, GLenum pname, GLfloat *params);
	void glGetMaterialiv  (GLenum face, GLenum pname, GLint *params);
	void glGetMinmax  (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);
	void glGetMinmaxParameterfv  (GLenum target, GLenum pname, GLfloat *params);
	void glGetMinmaxParameteriv  (GLenum target, GLenum pname, GLint *params);
	void glGetPixelMapfv  (GLenum map, GLfloat *values);
	void glGetPixelMapuiv  (GLenum map, GLuint *values);
	void glGetPixelMapusv  (GLenum map, GLushort *values);
	void glGetPointerv  (GLenum pname, GLvoid* *params);
	void glGetPolygonStipple  (GLubyte *mask);
	void glGetSeparableFilter  (GLenum target, GLenum format, GLenum type, GLvoid *row, GLvoid *column, GLvoid *span);
	const GLubyte * glGetString  (GLenum name);
	void glGetTexEnvfv  (GLenum target, GLenum pname, GLfloat *params);
	void glGetTexEnviv  (GLenum target, GLenum pname, GLint *params);
	void glGetTexGendv  (GLenum coord, GLenum pname, GLdouble *params);
	void glGetTexGenfv  (GLenum coord, GLenum pname, GLfloat *params);
	void glGetTexGeniv  (GLenum coord, GLenum pname, GLint *params);
	void glGetTexImage  (GLenum target, GLint level, GLenum format, GLenum type, GLvoid *pixels);
	void glGetTexLevelParameterfv  (GLenum target, GLint level, GLenum pname, GLfloat *params);
	void glGetTexLevelParameteriv  (GLenum target, GLint level, GLenum pname, GLint *params);
	void glGetTexParameterfv  (GLenum target, GLenum pname, GLfloat *params);
	void glGetTexParameteriv  (GLenum target, GLenum pname, GLint *params);
	void glHint  (GLenum target, GLenum mode);
	void glHistogram  (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);
	void glIndexMask  (GLuint mask);
	void glIndexPointer  (GLenum type, GLsizei stride, const GLvoid *pointer);
	void glIndexd  (GLdouble c);
	void glIndexdv  (const GLdouble *c);
	void glIndexf  (GLfloat c);
	void glIndexfv  (const GLfloat *c);
	void glIndexi  (GLint c);
	void glIndexiv  (const GLint *c);
	void glIndexs  (GLshort c);
	void glIndexsv  (const GLshort *c);
	void glIndexub  (GLubyte c);
	void glIndexubv  (const GLubyte *c);
	void glInitNames  (void);
	void glInterleavedArrays  (GLenum format, GLsizei stride, const GLvoid *pointer);
	GLboolean glIsEnabled  (GLenum cap);
	GLboolean glIsList  (GLuint list);
	GLboolean glIsTexture  (GLuint texture);
	void glLightModelf  (GLenum pname, GLfloat param);
	void glLightModelfv  (GLenum pname, const GLfloat *params);
	void glLightModeli  (GLenum pname, GLint param);
	void glLightModeliv  (GLenum pname, const GLint *params);
	void glLightf  (GLenum light, GLenum pname, GLfloat param);
	void glLightfv  (GLenum light, GLenum pname, const GLfloat *params);
	void glLighti  (GLenum light, GLenum pname, GLint param);
	void glLightiv  (GLenum light, GLenum pname, const GLint *params);
	void glLineStipple  (GLint factor, GLushort pattern);
	void glLineWidth  (GLfloat width);
	void glListBase  (GLuint base);
	void glLoadIdentity  (void);
	void glLoadMatrixd  (const GLdouble *m);
	void glLoadMatrixf  (const GLfloat *m);
	void glLoadName  (GLuint name);
	void glLogicOp  (GLenum opcode);
	void glMap1d  (GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble *points);
	void glMap1f  (GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points);
	void glMap2d  (GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble *points);
	void glMap2f  (GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points);
	void glMapGrid1d  (GLint un, GLdouble u1, GLdouble u2);
	void glMapGrid1f  (GLint un, GLfloat u1, GLfloat u2);
	void glMapGrid2d  (GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2);
	void glMapGrid2f  (GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2);
	void glMaterialf  (GLenum face, GLenum pname, GLfloat param);
	void glMaterialfv  (GLenum face, GLenum pname, const GLfloat *params);
	void glMateriali  (GLenum face, GLenum pname, GLint param);
	void glMaterialiv  (GLenum face, GLenum pname, const GLint *params);
	void glMatrixMode  (GLenum mode);
	void glMinmax  (GLenum target, GLenum internalformat, GLboolean sink);
	void glMultMatrixd  (const GLdouble *m);
	void glMultMatrixf  (const GLfloat *m);
	void glNewList  (GLuint list, GLenum mode);
	void glNormal3b  (GLbyte nx, GLbyte ny, GLbyte nz);
	void glNormal3bv  (const GLbyte *v);
	void glNormal3d  (GLdouble nx, GLdouble ny, GLdouble nz);
	void glNormal3dv  (const GLdouble *v);
	void glNormal3f  (GLfloat nx, GLfloat ny, GLfloat nz);
	void glNormal3fv  (const GLfloat *v);
	void glNormal3i  (GLint nx, GLint ny, GLint nz);
	void glNormal3iv  (const GLint *v);
	void glNormal3s  (GLshort nx, GLshort ny, GLshort nz);
	void glNormal3sv  (const GLshort *v);
	void glNormalPointer  (GLenum type, GLsizei stride, const GLvoid *pointer);
	void glOrtho  (GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
	void glPassThrough  (GLfloat token);
	void glPixelMapfv  (GLenum map, GLint mapsize, const GLfloat *values);
	void glPixelMapuiv  (GLenum map, GLint mapsize, const GLuint *values);
	void glPixelMapusv  (GLenum map, GLint mapsize, const GLushort *values);
	void glPixelStoref  (GLenum pname, GLfloat param);
	void glPixelStorei  (GLenum pname, GLint param);
	void glPixelTransferf  (GLenum pname, GLfloat param);
	void glPixelTransferi  (GLenum pname, GLint param);
	void glPixelZoom  (GLfloat xfactor, GLfloat yfactor);
	void glPointSize  (GLfloat size);
	void glPolygonMode  (GLenum face, GLenum mode);
	void glPolygonOffset  (GLfloat factor, GLfloat units);
	void glPolygonStipple  (const GLubyte *mask);
	void glPopAttrib  (void);
	void glPopClientAttrib  (void);
	void glPopMatrix  (void);
	void glPopName  (void);
	void glPrioritizeTextures  (GLsizei n, const GLuint *textures, const GLclampf *priorities);
	void glPushAttrib  (GLbitfield mask);
	void glPushClientAttrib  (GLbitfield mask);
	void glPushMatrix  (void);
	void glPushName  (GLuint name);
	void glRasterPos2d  (GLdouble x, GLdouble y);
	void glRasterPos2dv  (const GLdouble *v);
	void glRasterPos2f  (GLfloat x, GLfloat y);
	void glRasterPos2fv  (const GLfloat *v);
	void glRasterPos2i  (GLint x, GLint y);
	void glRasterPos2iv  (const GLint *v);
	void glRasterPos2s  (GLshort x, GLshort y);
	void glRasterPos2sv  (const GLshort *v);
	void glRasterPos3d  (GLdouble x, GLdouble y, GLdouble z);
	void glRasterPos3dv  (const GLdouble *v);
	void glRasterPos3f  (GLfloat x, GLfloat y, GLfloat z);
	void glRasterPos3fv  (const GLfloat *v);
	void glRasterPos3i  (GLint x, GLint y, GLint z);
	void glRasterPos3iv  (const GLint *v);
	void glRasterPos3s  (GLshort x, GLshort y, GLshort z);
	void glRasterPos3sv  (const GLshort *v);
	void glRasterPos4d  (GLdouble x, GLdouble y, GLdouble z, GLdouble w);
	void glRasterPos4dv  (const GLdouble *v);
	void glRasterPos4f  (GLfloat x, GLfloat y, GLfloat z, GLfloat w);
	void glRasterPos4fv  (const GLfloat *v);
	void glRasterPos4i  (GLint x, GLint y, GLint z, GLint w);
	void glRasterPos4iv  (const GLint *v);
	void glRasterPos4s  (GLshort x, GLshort y, GLshort z, GLshort w);
	void glRasterPos4sv  (const GLshort *v);
	void glReadBuffer  (GLenum mode);
	void glReadPixels  (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid *pixels);
	void glRectd  (GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2);
	void glRectdv  (const GLdouble *v1, const GLdouble *v2);
	void glRectf  (GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2);
	void glRectfv  (const GLfloat *v1, const GLfloat *v2);
	void glRecti  (GLint x1, GLint y1, GLint x2, GLint y2);
	void glRectiv  (const GLint *v1, const GLint *v2);
	void glRects  (GLshort x1, GLshort y1, GLshort x2, GLshort y2);
	void glRectsv  (const GLshort *v1, const GLshort *v2);
	GLint glRenderMode  (GLenum mode);
	void glResetHistogram  (GLenum target);
	void glResetMinmax  (GLenum target);
	void glRotated  (GLdouble angle, GLdouble x, GLdouble y, GLdouble z);
	void glRotatef  (GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
	void glScaled  (GLdouble x, GLdouble y, GLdouble z);
	void glScalef  (GLfloat x, GLfloat y, GLfloat z);
	void glScissor  (GLint x, GLint y, GLsizei width, GLsizei height);
	void glSelectBuffer  (GLsizei size, GLuint *buffer);
	void glSeparableFilter2D  (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *row, const GLvoid *column);
	void glShadeModel  (GLenum mode);
	void glStencilFunc  (GLenum func, GLint ref, GLuint mask);
	void glStencilMask  (GLuint mask);
	void glStencilOp  (GLenum fail, GLenum zfail, GLenum zpass);
	void glTexCoord1d  (GLdouble s);
	void glTexCoord1dv  (const GLdouble *v);
	void glTexCoord1f  (GLfloat s);
	void glTexCoord1fv  (const GLfloat *v);
	void glTexCoord1i  (GLint s);
	void glTexCoord1iv  (const GLint *v);
	void glTexCoord1s  (GLshort s);
	void glTexCoord1sv  (const GLshort *v);
	void glTexCoord2d  (GLdouble s, GLdouble t);
	void glTexCoord2dv  (const GLdouble *v);
	void glTexCoord2f  (GLfloat s, GLfloat t);
	void glTexCoord2fv  (const GLfloat *v);
	void glTexCoord2i  (GLint s, GLint t);
	void glTexCoord2iv  (const GLint *v);
	void glTexCoord2s  (GLshort s, GLshort t);
	void glTexCoord2sv  (const GLshort *v);
	void glTexCoord3d  (GLdouble s, GLdouble t, GLdouble r);
	void glTexCoord3dv  (const GLdouble *v);
	void glTexCoord3f  (GLfloat s, GLfloat t, GLfloat r);
	void glTexCoord3fv  (const GLfloat *v);
	void glTexCoord3i  (GLint s, GLint t, GLint r);
	void glTexCoord3iv  (const GLint *v);
	void glTexCoord3s  (GLshort s, GLshort t, GLshort r);
	void glTexCoord3sv  (const GLshort *v);
	void glTexCoord4d  (GLdouble s, GLdouble t, GLdouble r, GLdouble q);
	void glTexCoord4dv  (const GLdouble *v);
	void glTexCoord4f  (GLfloat s, GLfloat t, GLfloat r, GLfloat q);
	void glTexCoord4fv  (const GLfloat *v);
	void glTexCoord4i  (GLint s, GLint t, GLint r, GLint q);
	void glTexCoord4iv  (const GLint *v);
	void glTexCoord4s  (GLshort s, GLshort t, GLshort r, GLshort q);
	void glTexCoord4sv  (const GLshort *v);
	void glTexCoordPointer  (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
	void glTexEnvf  (GLenum target, GLenum pname, GLfloat param);
	void glTexEnvfv  (GLenum target, GLenum pname, const GLfloat *params);
	void glTexEnvi  (GLenum target, GLenum pname, GLint param);
	void glTexEnviv  (GLenum target, GLenum pname, const GLint *params);
	void glTexGend  (GLenum coord, GLenum pname, GLdouble param);
	void glTexGendv  (GLenum coord, GLenum pname, const GLdouble *params);
	void glTexGenf  (GLenum coord, GLenum pname, GLfloat param);
	void glTexGenfv  (GLenum coord, GLenum pname, const GLfloat *params);
	void glTexGeni  (GLenum coord, GLenum pname, GLint param);
	void glTexGeniv  (GLenum coord, GLenum pname, const GLint *params);
	void glTexImage1D  (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const GLvoid *pixels);
	void glTexImage2D  (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels);
	void glTexImage3D  (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels);
	void glTexParameterf  (GLenum target, GLenum pname, GLfloat param);
	void glTexParameterfv  (GLenum target, GLenum pname, const GLfloat *params);
	void glTexParameteri  (GLenum target, GLenum pname, GLint param);
	void glTexParameteriv  (GLenum target, GLenum pname, const GLint *params);
	void glTexSubImage1D  (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid *pixels);
	void glTexSubImage2D  (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels);
	void glTexSubImage3D  (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels);
	void glTranslated  (GLdouble x, GLdouble y, GLdouble z);
	void glTranslatef  (GLfloat x, GLfloat y, GLfloat z);
	void glVertex2d  (GLdouble x, GLdouble y);
	void glVertex2dv  (const GLdouble *v);
	void glVertex2f  (GLfloat x, GLfloat y);
	void glVertex2fv  (const GLfloat *v);
	void glVertex2i  (GLint x, GLint y);
	void glVertex2iv  (const GLint *v);
	void glVertex2s  (GLshort x, GLshort y);
	void glVertex2sv  (const GLshort *v);
	void glVertex3d  (GLdouble x, GLdouble y, GLdouble z);
	void glVertex3dv  (const GLdouble *v);
	void glVertex3f  (GLfloat x, GLfloat y, GLfloat z);
	void glVertex3fv  (const GLfloat *v);
	void glVertex3i  (GLint x, GLint y, GLint z);
	void glVertex3iv  (const GLint *v);
	void glVertex3s  (GLshort x, GLshort y, GLshort z);
	void glVertex3sv  (const GLshort *v);
	void glVertex4d  (GLdouble x, GLdouble y, GLdouble z, GLdouble w);
	void glVertex4dv  (const GLdouble *v);
	void glVertex4f  (GLfloat x, GLfloat y, GLfloat z, GLfloat w);
	void glVertex4fv  (const GLfloat *v);
	void glVertex4i  (GLint x, GLint y, GLint z, GLint w);
	void glVertex4iv  (const GLint *v);
	void glVertex4s  (GLshort x, GLshort y, GLshort z, GLshort w);
	void glVertex4sv  (const GLshort *v);
	void glVertexPointer  (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
	void glViewport  (GLint x, GLint y, GLsizei width, GLsizei height);
	void glSampleCoverage  (GLclampf value, GLboolean invert);
	void glSamplePass  (GLenum pass);
	void glLoadTransposeMatrixf  (const GLfloat *m);
	void glLoadTransposeMatrixd  (const GLdouble *m);
	void glMultTransposeMatrixf  (const GLfloat *m);
	void glMultTransposeMatrixd  (const GLdouble *m);
	void glCompressedTexImage3D  (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data);
	void glCompressedTexImage2D  (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);
	void glCompressedTexImage1D  (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data);
	void glCompressedTexSubImage3D  (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);
	void glCompressedTexSubImage2D  (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);
	void glCompressedTexSubImage1D  (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);
	void glGetCompressedTexImage  (GLenum target, GLint lod, GLvoid *img);
	void glActiveTexture  (GLenum texture);
	void glClientActiveTexture  (GLenum texture);
	void glMultiTexCoord1d  (GLenum target, GLdouble s);
	void glMultiTexCoord1dv  (GLenum target, const GLdouble *v);
	void glMultiTexCoord1f  (GLenum target, GLfloat s);
	void glMultiTexCoord1fv  (GLenum target, const GLfloat *v);
	void glMultiTexCoord1i  (GLenum target, GLint s);
	void glMultiTexCoord1iv  (GLenum target, const GLint *v);
	void glMultiTexCoord1s  (GLenum target, GLshort s);
	void glMultiTexCoord1sv  (GLenum target, const GLshort *v);
	void glMultiTexCoord2d  (GLenum target, GLdouble s, GLdouble t);
	void glMultiTexCoord2dv  (GLenum target, const GLdouble *v);
	void glMultiTexCoord2f  (GLenum target, GLfloat s, GLfloat t);
	void glMultiTexCoord2fv  (GLenum target, const GLfloat *v);
	void glMultiTexCoord2i  (GLenum target, GLint s, GLint t);
	void glMultiTexCoord2iv  (GLenum target, const GLint *v);
	void glMultiTexCoord2s  (GLenum target, GLshort s, GLshort t);
	void glMultiTexCoord2sv  (GLenum target, const GLshort *v);
	void glMultiTexCoord3d  (GLenum target, GLdouble s, GLdouble t, GLdouble r);
	void glMultiTexCoord3dv  (GLenum target, const GLdouble *v);
	void glMultiTexCoord3f  (GLenum target, GLfloat s, GLfloat t, GLfloat r);
	void glMultiTexCoord3fv  (GLenum target, const GLfloat *v);
	void glMultiTexCoord3i  (GLenum target, GLint s, GLint t, GLint r);
	void glMultiTexCoord3iv  (GLenum target, const GLint *v);
	void glMultiTexCoord3s  (GLenum target, GLshort s, GLshort t, GLshort r);
	void glMultiTexCoord3sv  (GLenum target, const GLshort *v);
	void glMultiTexCoord4d  (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
	void glMultiTexCoord4dv  (GLenum target, const GLdouble *v);
	void glMultiTexCoord4f  (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
	void glMultiTexCoord4fv  (GLenum target, const GLfloat *v);
	void glMultiTexCoord4i  (GLenum target, GLint, GLint s, GLint t, GLint r);
	void glMultiTexCoord4iv  (GLenum target, const GLint *v);
	void glMultiTexCoord4s  (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
	void glMultiTexCoord4sv  (GLenum target, const GLshort *v);
	void glFogCoordf  (GLfloat coord);
	void glFogCoordfv  (const GLfloat *coord);
	void glFogCoordd  (GLdouble coord);
	void glFogCoorddv  (const GLdouble * coord);
	void glFogCoordPointer  (GLenum type, GLsizei stride, const GLvoid *pointer);
	void glSecondaryColor3b  (GLbyte red, GLbyte green, GLbyte blue);
	void glSecondaryColor3bv  (const GLbyte *v);
	void glSecondaryColor3d  (GLdouble red, GLdouble green, GLdouble blue);
	void glSecondaryColor3dv  (const GLdouble *v);
	void glSecondaryColor3f  (GLfloat red, GLfloat green, GLfloat blue);
	void glSecondaryColor3fv  (const GLfloat *v);
	void glSecondaryColor3i  (GLint red, GLint green, GLint blue);
	void glSecondaryColor3iv  (const GLint *v);
	void glSecondaryColor3s  (GLshort red, GLshort green, GLshort blue);
	void glSecondaryColor3sv  (const GLshort *v);
	void glSecondaryColor3ub  (GLubyte red, GLubyte green, GLubyte blue);
	void glSecondaryColor3ubv  (const GLubyte *v);
	void glSecondaryColor3ui  (GLuint red, GLuint green, GLuint blue);
	void glSecondaryColor3uiv  (const GLuint *v);
	void glSecondaryColor3us  (GLushort red, GLushort green, GLushort blue);
	void glSecondaryColor3usv  (const GLushort *v);
	void glSecondaryColorPointer  (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
	void glPointParameterf  (GLenum pname, GLfloat param);
	void glPointParameterfv  (GLenum pname, const GLfloat *params);
	void glPointParameteri  (GLenum pname, GLint param);
	void glPointParameteriv  (GLenum pname, const GLint *params);
	void glBlendFuncSeparate  (GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
	void glMultiDrawArrays  (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);
	void glMultiDrawElements  (GLenum mode, const GLsizei *count, GLenum type, const GLvoid* *indices, GLsizei primcount);
	void glWindowPos2d  (GLdouble x, GLdouble y);
	void glWindowPos2dv  (const GLdouble *v);
	void glWindowPos2f  (GLfloat x, GLfloat y);
	void glWindowPos2fv  (const GLfloat *v);
	void glWindowPos2i  (GLint x, GLint y);
	void glWindowPos2iv  (const GLint *v);
	void glWindowPos2s  (GLshort x, GLshort y);
	void glWindowPos2sv  (const GLshort *v);
	void glWindowPos3d  (GLdouble x, GLdouble y, GLdouble z);
	void glWindowPos3dv  (const GLdouble *v);
	void glWindowPos3f  (GLfloat x, GLfloat y, GLfloat z);
	void glWindowPos3fv  (const GLfloat *v);
	void glWindowPos3i  (GLint x, GLint y, GLint z);
	void glWindowPos3iv  (const GLint *v);
	void glWindowPos3s  (GLshort x, GLshort y, GLshort z);
	void glWindowPos3sv  (const GLshort *v);
	void glGenQueries (GLsizei n, GLuint *ids);
	void glDeleteQueries (GLsizei n, const GLuint *ids);
	GLboolean glIsQuery (GLuint id);
	void glBeginQuery (GLenum target, GLuint id);
	void glEndQuery (GLenum target);
	void glGetQueryiv (GLenum target, GLenum pname, GLint *params);
	void glGetQueryObjectiv (GLuint id, GLenum pname, GLint *params);
	void glGetQueryObjectuiv (GLuint id, GLenum pname, GLuint *params);
	void glBindBuffer  (GLenum target, GLuint buffer);
	void glDeleteBuffers  (GLsizei n, const GLuint *buffers);
	void glGenBuffers  (GLsizei n, GLuint *buffers);
	GLboolean glIsBuffer  (GLuint buffer);
	void glBufferData  (GLenum target, GLsizeiptr size, const GLvoid *data, GLenum usage);
	void glBufferSubData  (GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid *data);
	void glGetBufferSubData  (GLenum target, GLintptr offset, GLsizeiptr size, GLvoid *data);
	GLvoid * glMapBuffer  (GLenum target, GLenum access);
	GLboolean glUnmapBuffer  (GLenum target);
	void glGetBufferParameteriv  (GLenum target, GLenum pname, GLint *params);
	void glGetBufferPointerv  (GLenum target, GLenum pname, GLvoid **params);
	void glDrawBuffers  (GLsizei n, const GLenum *bufs);
	void glVertexAttrib1d  (GLuint index, GLdouble x);
	void glVertexAttrib1dv  (GLuint index, const GLdouble *v);
	void glVertexAttrib1f  (GLuint index, GLfloat x);
	void glVertexAttrib1fv  (GLuint index, const GLfloat *v);
	void glVertexAttrib1s  (GLuint index, GLshort x);
	void glVertexAttrib1sv  (GLuint index, const GLshort *v);
	void glVertexAttrib2d  (GLuint index, GLdouble x, GLdouble y);
	void glVertexAttrib2dv  (GLuint index, const GLdouble *v);
	void glVertexAttrib2f  (GLuint index, GLfloat x, GLfloat y);
	void glVertexAttrib2fv  (GLuint index, const GLfloat *v);
	void glVertexAttrib2s  (GLuint index, GLshort x, GLshort y);
	void glVertexAttrib2sv  (GLuint index, const GLshort *v);
	void glVertexAttrib3d  (GLuint index, GLdouble x, GLdouble y, GLdouble z);
	void glVertexAttrib3dv  (GLuint index, const GLdouble *v);
	void glVertexAttrib3f  (GLuint index, GLfloat x, GLfloat y, GLfloat z);
	void glVertexAttrib3fv  (GLuint index, const GLfloat *v);
	void glVertexAttrib3s  (GLuint index, GLshort x, GLshort y, GLshort z);
	void glVertexAttrib3sv  (GLuint index, const GLshort *v);
	void glVertexAttrib4Nbv  (GLuint index, const GLbyte *v);
	void glVertexAttrib4Niv  (GLuint index, const GLint *v);
	void glVertexAttrib4Nsv  (GLuint index, const GLshort *v);
	void glVertexAttrib4Nub  (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
	void glVertexAttrib4Nubv  (GLuint index, const GLubyte *v);
	void glVertexAttrib4Nuiv  (GLuint index, const GLuint *v);
	void glVertexAttrib4Nusv  (GLuint index, const GLushort *v);
	void glVertexAttrib4bv  (GLuint index, const GLbyte *v);
	void glVertexAttrib4d  (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
	void glVertexAttrib4dv  (GLuint index, const GLdouble *v);
	void glVertexAttrib4f  (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
	void glVertexAttrib4fv  (GLuint index, const GLfloat *v);
	void glVertexAttrib4iv  (GLuint index, const GLint *v);
	void glVertexAttrib4s  (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
	void glVertexAttrib4sv  (GLuint index, const GLshort *v);
	void glVertexAttrib4ubv  (GLuint index, const GLubyte *v);
	void glVertexAttrib4uiv  (GLuint index, const GLuint *v);
	void glVertexAttrib4usv  (GLuint index, const GLushort *v);
	void glVertexAttribPointer  (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid *pointer);
	void glEnableVertexAttribArray  (GLuint index);
	void glDisableVertexAttribArray  (GLuint index);
	void glGetVertexAttribdv  (GLuint index, GLenum pname, GLdouble *params);
	void glGetVertexAttribfv  (GLuint index, GLenum pname, GLfloat *params);
	void glGetVertexAttribiv  (GLuint index, GLenum pname, GLint *params);
	void glGetVertexAttribPointerv  (GLuint index, GLenum pname, GLvoid* *pointer);
	void glDeleteShader  (GLuint shader);
	void glDetachShader  (GLuint program, GLuint shader);
	GLuint glCreateShader  (GLenum type);
	void glShaderSource  (GLuint shader, GLsizei count, const GLchar* *string, const GLint *length);
	void glCompileShader  (GLuint shader);
	GLuint glCreateProgram  (void);
	void glAttachShader  (GLuint program, GLuint shader);
	void glLinkProgram  (GLuint program);
	void glUseProgram  (GLuint program);
	void glDeleteProgram  (GLuint program);
	void glValidateProgram  (GLuint program);
	void glUniform1f  (GLint location, GLfloat v0);
	void glUniform2f  (GLint location, GLfloat v0, GLfloat v1);
	void glUniform3f  (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
	void glUniform4f  (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
	void glUniform1i  (GLint location, GLint v0);
	void glUniform2i  (GLint location, GLint v0, GLint v1);
	void glUniform3i  (GLint location, GLint v0, GLint v1, GLint v2);
	void glUniform4i  (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
	void glUniform1fv  (GLint location, GLsizei count, const GLfloat *value);
	void glUniform2fv  (GLint location, GLsizei count, const GLfloat *value);
	void glUniform3fv  (GLint location, GLsizei count, const GLfloat *value);
	void glUniform4fv  (GLint location, GLsizei count, const GLfloat *value);
	void glUniform1iv  (GLint location, GLsizei count, const GLint *value);
	void glUniform2iv  (GLint location, GLsizei count, const GLint *value);
	void glUniform3iv  (GLint location, GLsizei count, const GLint *value);
	void glUniform4iv  (GLint location, GLsizei count, const GLint *value);
	void glUniformMatrix2fv  (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void glUniformMatrix3fv  (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void glUniformMatrix4fv  (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	GLboolean glIsShader  (GLuint shader);
	GLboolean glIsProgram  (GLuint program);
	void glGetShaderiv  (GLuint shader, GLenum pname, GLint *params);
	void glGetProgramiv  (GLuint program, GLenum pname, GLint *params);
	void glGetAttachedShaders  (GLuint program, GLsizei maxCount, GLsizei *count, GLuint *shaders);
	void glGetShaderInfoLog  (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
	void glGetProgramInfoLog  (GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
	GLint glGetUniformLocation  (GLuint program, const GLchar *name);
	void glGetActiveUniform  (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
	void glGetUniformfv  (GLuint program, GLint location, GLfloat *params);
	void glGetUniformiv  (GLuint program, GLint location, GLint *params);
	void glGetShaderSource  (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source);
	void glBindAttribLocation  (GLuint program, GLuint index, const GLchar *name);
	void glGetActiveAttrib  (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
	GLint glGetAttribLocation  (GLuint program, const GLchar *name);
	void glStencilFuncSeparate  (GLenum face, GLenum func, GLint ref, GLuint mask);
	void glStencilOpSeparate  (GLenum face, GLenum fail, GLenum zfail, GLenum zpass);
	void glStencilMaskSeparate  (GLenum face, GLuint mask);
	void glUniformMatrix2x3fv  (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void glUniformMatrix3x2fv  (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void glUniformMatrix2x4fv  (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void glUniformMatrix4x2fv  (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void glUniformMatrix3x4fv  (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void glUniformMatrix4x3fv  (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
	void glAddSwapHintRectWIN (GLint x, GLint y, GLsizei width, GLsizei height);
	BOOL wglEnumGpusNV (UINT iGpuIndex, HGPUNV *phGpu);
	BOOL wglEnumGpuDevicesNV (HGPUNV hGpu, UINT iDeviceIndex, PGPU_DEVICE lpGpuDevice);
	HDC wglCreateAffinityDCNV (const HGPUNV *phGpuList);
	BOOL wglEnumGpusFromAffinityDCNV (HDC hAffinityDC, UINT iGpuIndex, HGPUNV *hGpu);
	BOOL wglDeleteDCNV (HDC hdc);
	void * wglAllocateMemoryNV (GLsizei size, GLfloat readFrequency, GLfloat writeFrequency, GLfloat priority);
>>>>>>> 4e0f59d9d9c2cdf9336ba0cbc8b5128a844e3570
	void wglFreeMemoryNV (void *pointer);



]]
<<<<<<< HEAD

--glew32 isnt loaded!
return ffi.load("opengl32.dll")

=======
>>>>>>> 4e0f59d9d9c2cdf9336ba0cbc8b5128a844e3570
